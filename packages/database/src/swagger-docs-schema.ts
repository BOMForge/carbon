export default {
  swagger: "2.0",
  info: {
    description: "",
    title: "standard public schema",
    version: "12.0.2 (a4e00ff)",
  },
  host: "0.0.0.0:3000",
  basePath: "/",
  schemes: ["http"],
  consumes: [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv",
  ],
  produces: [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv",
  ],
  paths: {
    "/": {
      get: {
        produces: ["application/openapi+json", "application/json"],
        responses: {
          "200": {
            description: "OK",
          },
        },
        summary: "OpenAPI description (this document)",
        tags: ["Introspection"],
      },
    },
    "/purchaseInvoiceStatusHistory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseInvoiceStatusHistory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseInvoiceStatusHistory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseInvoiceStatusHistory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseInvoiceStatusHistory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoiceStatusHistory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/body.purchaseInvoiceStatusHistory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoiceStatusHistory"],
      },
    },
    "/itemInventory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemInventory.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnHand",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnPurchase",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnSalesOrder",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnProductionOrder",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/itemInventory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["itemInventory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.itemInventory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["itemInventory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemInventory.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnHand",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnPurchase",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnSalesOrder",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnProductionOrder",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemInventory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemInventory.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnHand",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnPurchase",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnSalesOrder",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.quantityOnProductionOrder",
          },
          {
            $ref: "#/parameters/rowFilter.itemInventory.tags",
          },
          {
            $ref: "#/parameters/body.itemInventory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemInventory"],
      },
    },
    "/userPermission": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userPermission.id",
          },
          {
            $ref: "#/parameters/rowFilter.userPermission.permissions",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/userPermission",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["userPermission"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.userPermission",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["userPermission"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userPermission.id",
          },
          {
            $ref: "#/parameters/rowFilter.userPermission.permissions",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userPermission"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userPermission.id",
          },
          {
            $ref: "#/parameters/rowFilter.userPermission.permissions",
          },
          {
            $ref: "#/parameters/body.userPermission",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userPermission"],
      },
    },
    "/supplierAccount": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierAccount.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierAccount.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierAccount.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierAccount",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierAccount"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierAccount",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierAccount"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierAccount.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierAccount.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierAccount.companyId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierAccount"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierAccount.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierAccount.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierAccount.companyId",
          },
          {
            $ref: "#/parameters/body.supplierAccount",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierAccount"],
      },
    },
    "/supplierType": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierType.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierType",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierType"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierType",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierType"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierType.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierType"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierType.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierType.tags",
          },
          {
            $ref: "#/parameters/body.supplierType",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierType"],
      },
    },
    "/customerType": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerType.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerType",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerType"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerType",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerType"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerType.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerType"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerType.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerType.tags",
          },
          {
            $ref: "#/parameters/body.customerType",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerType"],
      },
    },
    "/shippingTerm": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shippingTerm.id",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.name",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.active",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/shippingTerm",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["shippingTerm"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.shippingTerm",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["shippingTerm"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shippingTerm.id",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.name",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.active",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shippingTerm"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shippingTerm.id",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.name",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.active",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingTerm.tags",
          },
          {
            $ref: "#/parameters/body.shippingTerm",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shippingTerm"],
      },
    },
    "/customerAccount": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerAccount.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerAccount.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerAccount.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerAccount",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerAccount"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerAccount",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerAccount"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerAccount.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerAccount.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerAccount.companyId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerAccount"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerAccount.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerAccount.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerAccount.companyId",
          },
          {
            $ref: "#/parameters/body.customerAccount",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerAccount"],
      },
    },
    "/accountDefault": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountDefault.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.costOfGoodsSoldAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.directCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.overheadCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryAdjustmentVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.materialVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.capacityVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.overheadAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.maintenanceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetDepreciationExpenseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetGainsAndLossesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.serviceChargeAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.interestAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.supplierPaymentDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.customerPaymentDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.roundingAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetAquisitionCostAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetAquisitionCostOnDisposalAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.accumulatedDepreciationAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.accumulatedDepreciationOnDisposalAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryInterimAccrualAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.workInProgressAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.receivablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryShippedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryInvoicedNotReceivedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankCashAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankLocalCurrencyAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankForeignCurrencyAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.prepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.payablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryReceivedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.reverseChargeSalesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.retainedEarningsAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/accountDefault",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["accountDefault"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.accountDefault",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["accountDefault"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountDefault.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.costOfGoodsSoldAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.directCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.overheadCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryAdjustmentVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.materialVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.capacityVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.overheadAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.maintenanceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetDepreciationExpenseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetGainsAndLossesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.serviceChargeAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.interestAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.supplierPaymentDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.customerPaymentDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.roundingAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetAquisitionCostAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetAquisitionCostOnDisposalAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.accumulatedDepreciationAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.accumulatedDepreciationOnDisposalAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryInterimAccrualAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.workInProgressAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.receivablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryShippedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryInvoicedNotReceivedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankCashAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankLocalCurrencyAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankForeignCurrencyAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.prepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.payablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryReceivedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.reverseChargeSalesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.retainedEarningsAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountDefault"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountDefault.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.costOfGoodsSoldAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.directCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.overheadCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryAdjustmentVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.materialVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.capacityVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.overheadAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.maintenanceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetDepreciationExpenseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetGainsAndLossesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.serviceChargeAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.interestAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.supplierPaymentDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.customerPaymentDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.roundingAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetAquisitionCostAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.assetAquisitionCostOnDisposalAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.accumulatedDepreciationAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.accumulatedDepreciationOnDisposalAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryInterimAccrualAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.workInProgressAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.receivablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryShippedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryInvoicedNotReceivedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankCashAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankLocalCurrencyAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.bankForeignCurrencyAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.prepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.payablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.inventoryReceivedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.salesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.purchaseTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.reverseChargeSalesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.retainedEarningsAccount",
          },
          {
            $ref: "#/parameters/rowFilter.accountDefault.updatedBy",
          },
          {
            $ref: "#/parameters/body.accountDefault",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountDefault"],
      },
    },
    "/service": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.service.id",
          },
          {
            $ref: "#/parameters/rowFilter.service.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.service.serviceType",
          },
          {
            $ref: "#/parameters/rowFilter.service.approved",
          },
          {
            $ref: "#/parameters/rowFilter.service.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.fromDate",
          },
          {
            $ref: "#/parameters/rowFilter.service.toDate",
          },
          {
            $ref: "#/parameters/rowFilter.service.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.service.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.service.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.service.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.service.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/service",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["service"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.service",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["service"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.service.id",
          },
          {
            $ref: "#/parameters/rowFilter.service.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.service.serviceType",
          },
          {
            $ref: "#/parameters/rowFilter.service.approved",
          },
          {
            $ref: "#/parameters/rowFilter.service.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.fromDate",
          },
          {
            $ref: "#/parameters/rowFilter.service.toDate",
          },
          {
            $ref: "#/parameters/rowFilter.service.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.service.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.service.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.service.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.service.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["service"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.service.id",
          },
          {
            $ref: "#/parameters/rowFilter.service.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.service.serviceType",
          },
          {
            $ref: "#/parameters/rowFilter.service.approved",
          },
          {
            $ref: "#/parameters/rowFilter.service.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.fromDate",
          },
          {
            $ref: "#/parameters/rowFilter.service.toDate",
          },
          {
            $ref: "#/parameters/rowFilter.service.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.service.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.service.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.service.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.service.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.service.tags",
          },
          {
            $ref: "#/parameters/body.service",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["service"],
      },
    },
    "/employeeTypePermission": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.employeeTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.module",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.create",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.delete",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.update",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.view",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employeeTypePermission",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employeeTypePermission"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.employeeTypePermission",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["employeeTypePermission"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.employeeTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.module",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.create",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.delete",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.update",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.view",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeTypePermission"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.employeeTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.module",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.create",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.delete",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.update",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.view",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeTypePermission.updatedAt",
          },
          {
            $ref: "#/parameters/body.employeeTypePermission",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeTypePermission"],
      },
    },
    "/purchaseOrderPayment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.paymentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderPayment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderPayment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseOrderPayment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseOrderPayment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.paymentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderPayment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.paymentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderPayment.tags",
          },
          {
            $ref: "#/parameters/body.purchaseOrderPayment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderPayment"],
      },
    },
    "/tag": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.tag.name",
          },
          {
            $ref: "#/parameters/rowFilter.tag.table",
          },
          {
            $ref: "#/parameters/rowFilter.tag.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.tag.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.tag.createdBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/tag",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["tag"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.tag",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["tag"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.tag.name",
          },
          {
            $ref: "#/parameters/rowFilter.tag.table",
          },
          {
            $ref: "#/parameters/rowFilter.tag.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.tag.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.tag.createdBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["tag"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.tag.name",
          },
          {
            $ref: "#/parameters/rowFilter.tag.table",
          },
          {
            $ref: "#/parameters/rowFilter.tag.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.tag.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.tag.createdBy",
          },
          {
            $ref: "#/parameters/body.tag",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["tag"],
      },
    },
    "/holiday": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.holiday.id",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.name",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.date",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.year",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/holiday",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["holiday"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.holiday",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["holiday"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.holiday.id",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.name",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.date",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.year",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["holiday"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.holiday.id",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.name",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.date",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.year",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.holiday.tags",
          },
          {
            $ref: "#/parameters/body.holiday",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["holiday"],
      },
    },
    "/quotes": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quotes.id",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.status",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.externalLinkId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.digitalQuoteAcceptedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.digitalQuoteAcceptedByEmail",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.tags",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.locationName",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.lines",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.completedLines",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.favorite",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.quotes.shippingCost",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quotes",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quotes"],
      },
    },
    "/documentExtensions": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentExtensions.extension",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/documentExtensions",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["documentExtensions"],
      },
    },
    "/customerPayment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerPayment.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerPayment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerPayment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerPayment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerPayment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerPayment.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerPayment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerPayment.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerPayment.updatedBy",
          },
          {
            $ref: "#/parameters/body.customerPayment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerPayment"],
      },
    },
    "/postingGroupPurchasing": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.supplierTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.payablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseCreditAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchasePrepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/postingGroupPurchasing",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["postingGroupPurchasing"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.postingGroupPurchasing",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["postingGroupPurchasing"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.supplierTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.payablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseCreditAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchasePrepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["postingGroupPurchasing"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.supplierTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.payablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseCreditAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchasePrepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.purchaseTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupPurchasing.updatedBy",
          },
          {
            $ref: "#/parameters/body.postingGroupPurchasing",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["postingGroupPurchasing"],
      },
    },
    "/accountSubcategory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.name",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.active",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/accountSubcategory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["accountSubcategory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.accountSubcategory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["accountSubcategory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.name",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.active",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountSubcategory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.name",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.active",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountSubcategory.tags",
          },
          {
            $ref: "#/parameters/body.accountSubcategory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountSubcategory"],
      },
    },
    "/material": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.material.id",
          },
          {
            $ref: "#/parameters/rowFilter.material.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.material.materialFormId",
          },
          {
            $ref: "#/parameters/rowFilter.material.materialSubstanceId",
          },
          {
            $ref: "#/parameters/rowFilter.material.grade",
          },
          {
            $ref: "#/parameters/rowFilter.material.dimensions",
          },
          {
            $ref: "#/parameters/rowFilter.material.finish",
          },
          {
            $ref: "#/parameters/rowFilter.material.approved",
          },
          {
            $ref: "#/parameters/rowFilter.material.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.material.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.material.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.material.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.material.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.material.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/material",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["material"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.material",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["material"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.material.id",
          },
          {
            $ref: "#/parameters/rowFilter.material.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.material.materialFormId",
          },
          {
            $ref: "#/parameters/rowFilter.material.materialSubstanceId",
          },
          {
            $ref: "#/parameters/rowFilter.material.grade",
          },
          {
            $ref: "#/parameters/rowFilter.material.dimensions",
          },
          {
            $ref: "#/parameters/rowFilter.material.finish",
          },
          {
            $ref: "#/parameters/rowFilter.material.approved",
          },
          {
            $ref: "#/parameters/rowFilter.material.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.material.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.material.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.material.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.material.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.material.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["material"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.material.id",
          },
          {
            $ref: "#/parameters/rowFilter.material.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.material.materialFormId",
          },
          {
            $ref: "#/parameters/rowFilter.material.materialSubstanceId",
          },
          {
            $ref: "#/parameters/rowFilter.material.grade",
          },
          {
            $ref: "#/parameters/rowFilter.material.dimensions",
          },
          {
            $ref: "#/parameters/rowFilter.material.finish",
          },
          {
            $ref: "#/parameters/rowFilter.material.approved",
          },
          {
            $ref: "#/parameters/rowFilter.material.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.material.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.material.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.material.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.material.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.material.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.material.tags",
          },
          {
            $ref: "#/parameters/body.material",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["material"],
      },
    },
    "/supplierPayment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierPayment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierPayment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierPayment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierPayment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierPayment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierPayment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierPayment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierPayment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPayment.tags",
          },
          {
            $ref: "#/parameters/body.supplierPayment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierPayment"],
      },
    },
    "/methodOperationTool": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/methodOperationTool",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["methodOperationTool"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.methodOperationTool",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["methodOperationTool"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["methodOperationTool"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/body.methodOperationTool",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["methodOperationTool"],
      },
    },
    "/currencyCode": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.currencyCode.code",
          },
          {
            $ref: "#/parameters/rowFilter.currencyCode.name",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/currencyCode",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["currencyCode"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.currencyCode",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["currencyCode"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.currencyCode.code",
          },
          {
            $ref: "#/parameters/rowFilter.currencyCode.name",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["currencyCode"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.currencyCode.code",
          },
          {
            $ref: "#/parameters/rowFilter.currencyCode.name",
          },
          {
            $ref: "#/parameters/body.currencyCode",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["currencyCode"],
      },
    },
    "/methodMaterial": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.materialMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.methodOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/methodMaterial",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["methodMaterial"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.methodMaterial",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["methodMaterial"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.materialMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.methodOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["methodMaterial"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.materialMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.methodOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.methodMaterial.tags",
          },
          {
            $ref: "#/parameters/body.methodMaterial",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["methodMaterial"],
      },
    },
    "/processes": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.processes.id",
          },
          {
            $ref: "#/parameters/rowFilter.processes.name",
          },
          {
            $ref: "#/parameters/rowFilter.processes.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.processes.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.processes.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.processes.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.processes.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.processes.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.processes.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.processes.processType",
          },
          {
            $ref: "#/parameters/rowFilter.processes.workCenters",
          },
          {
            $ref: "#/parameters/rowFilter.processes.suppliers",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/processes",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["processes"],
      },
    },
    "/process": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.process.id",
          },
          {
            $ref: "#/parameters/rowFilter.process.name",
          },
          {
            $ref: "#/parameters/rowFilter.process.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.process.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.process.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.process.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.process.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.process.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.process.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.process.processType",
          },
          {
            $ref: "#/parameters/rowFilter.process.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/process",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["process"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.process",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["process"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.process.id",
          },
          {
            $ref: "#/parameters/rowFilter.process.name",
          },
          {
            $ref: "#/parameters/rowFilter.process.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.process.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.process.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.process.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.process.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.process.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.process.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.process.processType",
          },
          {
            $ref: "#/parameters/rowFilter.process.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["process"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.process.id",
          },
          {
            $ref: "#/parameters/rowFilter.process.name",
          },
          {
            $ref: "#/parameters/rowFilter.process.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.process.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.process.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.process.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.process.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.process.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.process.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.process.processType",
          },
          {
            $ref: "#/parameters/rowFilter.process.tags",
          },
          {
            $ref: "#/parameters/body.process",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["process"],
      },
    },
    "/quoteMaterial": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteMaterial",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteMaterial"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteMaterial",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteMaterial"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteMaterial"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.quoteOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterial.tags",
          },
          {
            $ref: "#/parameters/body.quoteMaterial",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteMaterial"],
      },
    },
    "/contractorAbility": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contractorAbility.contractorId",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/contractorAbility",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["contractorAbility"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.contractorAbility",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["contractorAbility"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contractorAbility.contractorId",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["contractorAbility"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contractorAbility.contractorId",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractorAbility.createdAt",
          },
          {
            $ref: "#/parameters/body.contractorAbility",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["contractorAbility"],
      },
    },
    "/salesOrderLines": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.salesOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.saleQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.quantityToSend",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.quantitySent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.sentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.promisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.addOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.convertedUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.convertedAddOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.convertedShippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.notes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.modelId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.modelName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.modelSize",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLines.customerPartRevision",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderLines",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderLines"],
      },
    },
    "/jobOperation": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityScrapped",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityReworked",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.status",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.priority",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobOperation",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobOperation"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.jobOperation",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["jobOperation"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityScrapped",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityReworked",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.status",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.priority",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobOperation"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.operationQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityScrapped",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.quantityReworked",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.status",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperation.priority",
          },
          {
            $ref: "#/parameters/body.jobOperation",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobOperation"],
      },
    },
    "/journalLine": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.journalLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.journalId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.amount",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.journalLineReference",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentLineReference",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.accrual",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/journalLine",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["journalLine"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.journalLine",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["journalLine"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.journalLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.journalId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.amount",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.journalLineReference",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentLineReference",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.accrual",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["journalLine"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.journalLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.journalId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.amount",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.journalLineReference",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.documentLineReference",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.accrual",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.journalLine.tags",
          },
          {
            $ref: "#/parameters/body.journalLine",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["journalLine"],
      },
    },
    "/purchaseOrderLines": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.purchaseOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.description",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.purchaseQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.quantityToReceive",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.quantityReceived",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.inventoryUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.purchaseUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.receivedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.tags",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.itemName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.itemDescription",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLines.supplierPartId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderLines",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderLines"],
      },
    },
    "/materialForm": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.materialForm.id",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.name",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/materialForm",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["materialForm"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.materialForm",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["materialForm"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.materialForm.id",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.name",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["materialForm"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.materialForm.id",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.name",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialForm.tags",
          },
          {
            $ref: "#/parameters/body.materialForm",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["materialForm"],
      },
    },
    "/item": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.item.id",
          },
          {
            $ref: "#/parameters/rowFilter.item.readableId",
          },
          {
            $ref: "#/parameters/rowFilter.item.name",
          },
          {
            $ref: "#/parameters/rowFilter.item.description",
          },
          {
            $ref: "#/parameters/rowFilter.item.type",
          },
          {
            $ref: "#/parameters/rowFilter.item.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.item.defaultMethodType",
          },
          {
            $ref: "#/parameters/rowFilter.item.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.item.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.item.active",
          },
          {
            $ref: "#/parameters/rowFilter.item.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.item.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.item.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.item.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.item.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.item.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.item.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.item.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.item.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.item.notes",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/item",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["item"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.item",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["item"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.item.id",
          },
          {
            $ref: "#/parameters/rowFilter.item.readableId",
          },
          {
            $ref: "#/parameters/rowFilter.item.name",
          },
          {
            $ref: "#/parameters/rowFilter.item.description",
          },
          {
            $ref: "#/parameters/rowFilter.item.type",
          },
          {
            $ref: "#/parameters/rowFilter.item.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.item.defaultMethodType",
          },
          {
            $ref: "#/parameters/rowFilter.item.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.item.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.item.active",
          },
          {
            $ref: "#/parameters/rowFilter.item.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.item.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.item.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.item.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.item.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.item.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.item.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.item.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.item.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.item.notes",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["item"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.item.id",
          },
          {
            $ref: "#/parameters/rowFilter.item.readableId",
          },
          {
            $ref: "#/parameters/rowFilter.item.name",
          },
          {
            $ref: "#/parameters/rowFilter.item.description",
          },
          {
            $ref: "#/parameters/rowFilter.item.type",
          },
          {
            $ref: "#/parameters/rowFilter.item.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.item.defaultMethodType",
          },
          {
            $ref: "#/parameters/rowFilter.item.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.item.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.item.active",
          },
          {
            $ref: "#/parameters/rowFilter.item.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.item.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.item.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.item.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.item.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.item.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.item.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.item.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.item.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.item.notes",
          },
          {
            $ref: "#/parameters/body.item",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["item"],
      },
    },
    "/receipt": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.receipt.id",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.receiptId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocumentReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.status",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.invoiced",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/receipt",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["receipt"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.receipt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["receipt"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.receipt.id",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.receiptId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocumentReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.status",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.invoiced",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["receipt"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.receipt.id",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.receiptId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.sourceDocumentReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.status",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.invoiced",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.receipt.tags",
          },
          {
            $ref: "#/parameters/body.receipt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["receipt"],
      },
    },
    "/purchaseOrderTransaction": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderTransaction",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderTransaction"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseOrderTransaction",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseOrderTransaction"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderTransaction"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderTransaction.createdAt",
          },
          {
            $ref: "#/parameters/body.purchaseOrderTransaction",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderTransaction"],
      },
    },
    "/supplierLocation": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierLocation.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.addressId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierLocation",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierLocation"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierLocation",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierLocation"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierLocation.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.addressId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierLocation"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierLocation.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.addressId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLocation.tags",
          },
          {
            $ref: "#/parameters/body.supplierLocation",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierLocation"],
      },
    },
    "/contractor": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contractor.id",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.active",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/contractor",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["contractor"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.contractor",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["contractor"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contractor.id",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.active",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["contractor"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contractor.id",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.active",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.contractor.tags",
          },
          {
            $ref: "#/parameters/body.contractor",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["contractor"],
      },
    },
    "/jobOperationsWithMakeMethods": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.processId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.operationQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.quantityScrapped",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.quantityReworked",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationsWithMakeMethods.status",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobOperationsWithMakeMethods",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobOperationsWithMakeMethods"],
      },
    },
    "/customerLocation": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerLocation.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.addressId",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerLocation",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerLocation"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerLocation",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerLocation"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerLocation.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.addressId",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerLocation"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerLocation.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.addressId",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerLocation.tags",
          },
          {
            $ref: "#/parameters/body.customerLocation",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerLocation"],
      },
    },
    "/membership": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.membership.id",
          },
          {
            $ref: "#/parameters/rowFilter.membership.groupId",
          },
          {
            $ref: "#/parameters/rowFilter.membership.memberGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.membership.memberUserId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/membership",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["membership"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.membership",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["membership"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.membership.id",
          },
          {
            $ref: "#/parameters/rowFilter.membership.groupId",
          },
          {
            $ref: "#/parameters/rowFilter.membership.memberGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.membership.memberUserId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["membership"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.membership.id",
          },
          {
            $ref: "#/parameters/rowFilter.membership.groupId",
          },
          {
            $ref: "#/parameters/rowFilter.membership.memberGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.membership.memberUserId",
          },
          {
            $ref: "#/parameters/body.membership",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["membership"],
      },
    },
    "/postingGroupSales": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.customerTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.receivablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesCreditAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesPrepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/postingGroupSales",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["postingGroupSales"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.postingGroupSales",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["postingGroupSales"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.customerTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.receivablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesCreditAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesPrepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["postingGroupSales"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.customerTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.receivablesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesDiscountAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesCreditAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesPrepaymentAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.salesTaxPayableAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupSales.updatedBy",
          },
          {
            $ref: "#/parameters/body.postingGroupSales",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["postingGroupSales"],
      },
    },
    "/search": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.search.id",
          },
          {
            $ref: "#/parameters/rowFilter.search.name",
          },
          {
            $ref: "#/parameters/rowFilter.search.description",
          },
          {
            $ref: "#/parameters/rowFilter.search.entity",
          },
          {
            $ref: "#/parameters/rowFilter.search.uuid",
          },
          {
            $ref: "#/parameters/rowFilter.search.link",
          },
          {
            $ref: "#/parameters/rowFilter.search.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.search.fts",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/search",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["search"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.search",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["search"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.search.id",
          },
          {
            $ref: "#/parameters/rowFilter.search.name",
          },
          {
            $ref: "#/parameters/rowFilter.search.description",
          },
          {
            $ref: "#/parameters/rowFilter.search.entity",
          },
          {
            $ref: "#/parameters/rowFilter.search.uuid",
          },
          {
            $ref: "#/parameters/rowFilter.search.link",
          },
          {
            $ref: "#/parameters/rowFilter.search.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.search.fts",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["search"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.search.id",
          },
          {
            $ref: "#/parameters/rowFilter.search.name",
          },
          {
            $ref: "#/parameters/rowFilter.search.description",
          },
          {
            $ref: "#/parameters/rowFilter.search.entity",
          },
          {
            $ref: "#/parameters/rowFilter.search.uuid",
          },
          {
            $ref: "#/parameters/rowFilter.search.link",
          },
          {
            $ref: "#/parameters/rowFilter.search.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.search.fts",
          },
          {
            $ref: "#/parameters/body.search",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["search"],
      },
    },
    "/journal": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.journal.id",
          },
          {
            $ref: "#/parameters/rowFilter.journal.description",
          },
          {
            $ref: "#/parameters/rowFilter.journal.accountingPeriodId",
          },
          {
            $ref: "#/parameters/rowFilter.journal.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.journal.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.journal.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.journal.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.journal.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/journal",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["journal"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.journal",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["journal"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.journal.id",
          },
          {
            $ref: "#/parameters/rowFilter.journal.description",
          },
          {
            $ref: "#/parameters/rowFilter.journal.accountingPeriodId",
          },
          {
            $ref: "#/parameters/rowFilter.journal.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.journal.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.journal.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.journal.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.journal.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["journal"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.journal.id",
          },
          {
            $ref: "#/parameters/rowFilter.journal.description",
          },
          {
            $ref: "#/parameters/rowFilter.journal.accountingPeriodId",
          },
          {
            $ref: "#/parameters/rowFilter.journal.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.journal.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.journal.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.journal.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.journal.tags",
          },
          {
            $ref: "#/parameters/body.journal",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["journal"],
      },
    },
    "/modules": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.modules.name",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/modules",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["modules"],
      },
    },
    "/employeesAcrossCompanies": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.email",
          },
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.name",
          },
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.avatarUrl",
          },
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.active",
          },
          {
            $ref: "#/parameters/rowFilter.employeesAcrossCompanies.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employeesAcrossCompanies",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employeesAcrossCompanies"],
      },
    },
    "/purchaseInvoicePriceChange": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.invoiceLineId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.previousPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.newPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.previousQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.newQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseInvoicePriceChange",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseInvoicePriceChange"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseInvoicePriceChange",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseInvoicePriceChange"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.invoiceLineId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.previousPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.newPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.previousQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.newQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoicePriceChange"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.invoiceLineId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.previousPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.newPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.previousQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.newQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePriceChange.updatedBy",
          },
          {
            $ref: "#/parameters/body.purchaseInvoicePriceChange",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoicePriceChange"],
      },
    },
    "/currencies": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.currencies.id",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.code",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.decimalPlaces",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.active",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.currencies.name",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/currencies",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["currencies"],
      },
    },
    "/shift": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shift.id",
          },
          {
            $ref: "#/parameters/rowFilter.shift.name",
          },
          {
            $ref: "#/parameters/rowFilter.shift.startTime",
          },
          {
            $ref: "#/parameters/rowFilter.shift.endTime",
          },
          {
            $ref: "#/parameters/rowFilter.shift.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.shift.sunday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.monday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.tuesday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.wednesday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.thursday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.friday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.saturday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.active",
          },
          {
            $ref: "#/parameters/rowFilter.shift.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shift.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shift.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shift.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shift.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shift.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shift.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/shift",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["shift"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.shift",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["shift"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shift.id",
          },
          {
            $ref: "#/parameters/rowFilter.shift.name",
          },
          {
            $ref: "#/parameters/rowFilter.shift.startTime",
          },
          {
            $ref: "#/parameters/rowFilter.shift.endTime",
          },
          {
            $ref: "#/parameters/rowFilter.shift.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.shift.sunday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.monday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.tuesday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.wednesday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.thursday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.friday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.saturday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.active",
          },
          {
            $ref: "#/parameters/rowFilter.shift.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shift.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shift.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shift.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shift.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shift.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shift.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shift"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shift.id",
          },
          {
            $ref: "#/parameters/rowFilter.shift.name",
          },
          {
            $ref: "#/parameters/rowFilter.shift.startTime",
          },
          {
            $ref: "#/parameters/rowFilter.shift.endTime",
          },
          {
            $ref: "#/parameters/rowFilter.shift.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.shift.sunday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.monday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.tuesday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.wednesday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.thursday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.friday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.saturday",
          },
          {
            $ref: "#/parameters/rowFilter.shift.active",
          },
          {
            $ref: "#/parameters/rowFilter.shift.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shift.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shift.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shift.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shift.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shift.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shift.tags",
          },
          {
            $ref: "#/parameters/body.shift",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shift"],
      },
    },
    "/integration": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.integration.id",
          },
          {
            $ref: "#/parameters/rowFilter.integration.jsonschema",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/integration",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["integration"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.integration",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["integration"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.integration.id",
          },
          {
            $ref: "#/parameters/rowFilter.integration.jsonschema",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["integration"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.integration.id",
          },
          {
            $ref: "#/parameters/rowFilter.integration.jsonschema",
          },
          {
            $ref: "#/parameters/body.integration",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["integration"],
      },
    },
    "/customFieldTables": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customFieldTables.table",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTables.module",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTables.name",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTables.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTables.fields",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customFieldTables",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customFieldTables"],
      },
    },
    "/documents": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documents.id",
          },
          {
            $ref: "#/parameters/rowFilter.documents.path",
          },
          {
            $ref: "#/parameters/rowFilter.documents.name",
          },
          {
            $ref: "#/parameters/rowFilter.documents.description",
          },
          {
            $ref: "#/parameters/rowFilter.documents.size",
          },
          {
            $ref: "#/parameters/rowFilter.documents.extension",
          },
          {
            $ref: "#/parameters/rowFilter.documents.type",
          },
          {
            $ref: "#/parameters/rowFilter.documents.readGroups",
          },
          {
            $ref: "#/parameters/rowFilter.documents.writeGroups",
          },
          {
            $ref: "#/parameters/rowFilter.documents.active",
          },
          {
            $ref: "#/parameters/rowFilter.documents.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.documents.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.documents.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.documents.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.documents.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.documents.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.documents.sourceDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.documents.labels",
          },
          {
            $ref: "#/parameters/rowFilter.documents.favorite",
          },
          {
            $ref: "#/parameters/rowFilter.documents.lastActivityAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/documents",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["documents"],
      },
    },
    "/companies": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.companies.id",
          },
          {
            $ref: "#/parameters/rowFilter.companies.name",
          },
          {
            $ref: "#/parameters/rowFilter.companies.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.companies.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.companies.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.companies.city",
          },
          {
            $ref: "#/parameters/rowFilter.companies.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.companies.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.companies.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.companies.phone",
          },
          {
            $ref: "#/parameters/rowFilter.companies.fax",
          },
          {
            $ref: "#/parameters/rowFilter.companies.email",
          },
          {
            $ref: "#/parameters/rowFilter.companies.website",
          },
          {
            $ref: "#/parameters/rowFilter.companies.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.companies.baseCurrencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.companies.logoDarkIcon",
          },
          {
            $ref: "#/parameters/rowFilter.companies.logoLightIcon",
          },
          {
            $ref: "#/parameters/rowFilter.companies.logoDark",
          },
          {
            $ref: "#/parameters/rowFilter.companies.logoLight",
          },
          {
            $ref: "#/parameters/rowFilter.companies.userId",
          },
          {
            $ref: "#/parameters/rowFilter.companies.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.companies.role",
          },
          {
            $ref: "#/parameters/rowFilter.companies.employeeType",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/companies",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["companies"],
      },
    },
    "/purchaseOrder": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.type",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.notes",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrder",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrder"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseOrder",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseOrder"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.type",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.notes",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrder"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.type",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.notes",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrder.tags",
          },
          {
            $ref: "#/parameters/body.purchaseOrder",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrder"],
      },
    },
    "/company": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.company.id",
          },
          {
            $ref: "#/parameters/rowFilter.company.name",
          },
          {
            $ref: "#/parameters/rowFilter.company.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.company.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.company.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.company.city",
          },
          {
            $ref: "#/parameters/rowFilter.company.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.company.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.phone",
          },
          {
            $ref: "#/parameters/rowFilter.company.fax",
          },
          {
            $ref: "#/parameters/rowFilter.company.email",
          },
          {
            $ref: "#/parameters/rowFilter.company.website",
          },
          {
            $ref: "#/parameters/rowFilter.company.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.company.baseCurrencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoDarkIcon",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoLightIcon",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoDark",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoLight",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/company",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["company"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.company",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["company"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.company.id",
          },
          {
            $ref: "#/parameters/rowFilter.company.name",
          },
          {
            $ref: "#/parameters/rowFilter.company.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.company.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.company.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.company.city",
          },
          {
            $ref: "#/parameters/rowFilter.company.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.company.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.phone",
          },
          {
            $ref: "#/parameters/rowFilter.company.fax",
          },
          {
            $ref: "#/parameters/rowFilter.company.email",
          },
          {
            $ref: "#/parameters/rowFilter.company.website",
          },
          {
            $ref: "#/parameters/rowFilter.company.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.company.baseCurrencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoDarkIcon",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoLightIcon",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoDark",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoLight",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["company"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.company.id",
          },
          {
            $ref: "#/parameters/rowFilter.company.name",
          },
          {
            $ref: "#/parameters/rowFilter.company.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.company.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.company.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.company.city",
          },
          {
            $ref: "#/parameters/rowFilter.company.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.company.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.phone",
          },
          {
            $ref: "#/parameters/rowFilter.company.fax",
          },
          {
            $ref: "#/parameters/rowFilter.company.email",
          },
          {
            $ref: "#/parameters/rowFilter.company.website",
          },
          {
            $ref: "#/parameters/rowFilter.company.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.company.baseCurrencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoDarkIcon",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoLightIcon",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoDark",
          },
          {
            $ref: "#/parameters/rowFilter.company.logoLight",
          },
          {
            $ref: "#/parameters/body.company",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["company"],
      },
    },
    "/jobOperationTool": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobOperationTool",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobOperationTool"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.jobOperationTool",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["jobOperationTool"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobOperationTool"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/body.jobOperationTool",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobOperationTool"],
      },
    },
    "/userAttributeCategory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.name",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.public",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.protected",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.active",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/userAttributeCategory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["userAttributeCategory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.userAttributeCategory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["userAttributeCategory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.name",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.public",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.protected",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.active",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userAttributeCategory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.name",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.public",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.protected",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.active",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeCategory.updatedBy",
          },
          {
            $ref: "#/parameters/body.userAttributeCategory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userAttributeCategory"],
      },
    },
    "/salesOrderLine": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.salesOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.saleQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityToSend",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantitySent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.sentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.promisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.addOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedAddOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedShippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.notes",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderLine",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderLine"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesOrderLine",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesOrderLine"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.salesOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.saleQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityToSend",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantitySent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.sentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.promisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.addOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedAddOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedShippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.notes",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderLine"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.salesOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.saleQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityToSend",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantitySent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.sentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.promisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.addOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedAddOnCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.convertedShippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLine.notes",
          },
          {
            $ref: "#/parameters/body.salesOrderLine",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderLine"],
      },
    },
    "/salesOrderTransaction": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderTransaction",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderTransaction"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesOrderTransaction",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesOrderTransaction"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderTransaction"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderTransaction.createdAt",
          },
          {
            $ref: "#/parameters/body.salesOrderTransaction",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderTransaction"],
      },
    },
    "/country": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.country.name",
          },
          {
            $ref: "#/parameters/rowFilter.country.alpha2",
          },
          {
            $ref: "#/parameters/rowFilter.country.alpha3",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/country",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["country"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.country",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["country"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.country.name",
          },
          {
            $ref: "#/parameters/rowFilter.country.alpha2",
          },
          {
            $ref: "#/parameters/rowFilter.country.alpha3",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["country"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.country.name",
          },
          {
            $ref: "#/parameters/rowFilter.country.alpha2",
          },
          {
            $ref: "#/parameters/rowFilter.country.alpha3",
          },
          {
            $ref: "#/parameters/body.country",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["country"],
      },
    },
    "/jobMakeMethod": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.parentMaterialId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.quantityPerParent",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.customFields",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobMakeMethod",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobMakeMethod"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.jobMakeMethod",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["jobMakeMethod"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.parentMaterialId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.quantityPerParent",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.customFields",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobMakeMethod"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.parentMaterialId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.quantityPerParent",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMakeMethod.customFields",
          },
          {
            $ref: "#/parameters/body.jobMakeMethod",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobMakeMethod"],
      },
    },
    "/contact": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contact.id",
          },
          {
            $ref: "#/parameters/rowFilter.contact.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.contact.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.contact.email",
          },
          {
            $ref: "#/parameters/rowFilter.contact.title",
          },
          {
            $ref: "#/parameters/rowFilter.contact.mobilePhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.homePhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.workPhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.fax",
          },
          {
            $ref: "#/parameters/rowFilter.contact.notes",
          },
          {
            $ref: "#/parameters/rowFilter.contact.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.contact.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.contact.fullName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/contact",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["contact"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.contact",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["contact"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contact.id",
          },
          {
            $ref: "#/parameters/rowFilter.contact.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.contact.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.contact.email",
          },
          {
            $ref: "#/parameters/rowFilter.contact.title",
          },
          {
            $ref: "#/parameters/rowFilter.contact.mobilePhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.homePhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.workPhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.fax",
          },
          {
            $ref: "#/parameters/rowFilter.contact.notes",
          },
          {
            $ref: "#/parameters/rowFilter.contact.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.contact.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.contact.fullName",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["contact"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contact.id",
          },
          {
            $ref: "#/parameters/rowFilter.contact.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.contact.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.contact.email",
          },
          {
            $ref: "#/parameters/rowFilter.contact.title",
          },
          {
            $ref: "#/parameters/rowFilter.contact.mobilePhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.homePhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.workPhone",
          },
          {
            $ref: "#/parameters/rowFilter.contact.fax",
          },
          {
            $ref: "#/parameters/rowFilter.contact.notes",
          },
          {
            $ref: "#/parameters/rowFilter.contact.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.contact.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.contact.fullName",
          },
          {
            $ref: "#/parameters/body.contact",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["contact"],
      },
    },
    "/userDefaults": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userDefaults.userId",
          },
          {
            $ref: "#/parameters/rowFilter.userDefaults.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.userDefaults.locationId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/userDefaults",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["userDefaults"],
      },
    },
    "/jobMaterial": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.estimatedQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.defaultShelf",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantityIssued",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantityToIssue",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobMaterial",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobMaterial"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.jobMaterial",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["jobMaterial"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.estimatedQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.defaultShelf",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantityIssued",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantityToIssue",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobMaterial"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobMaterial.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.estimatedQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.defaultShelf",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantityIssued",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterial.quantityToIssue",
          },
          {
            $ref: "#/parameters/body.jobMaterial",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobMaterial"],
      },
    },
    "/purchaseOrderSuppliers": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderSuppliers.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderSuppliers.name",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderSuppliers.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderSuppliers",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderSuppliers"],
      },
    },
    "/workCenters": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.workCenters.id",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.name",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.description",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.requiredAbilityId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.active",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.locationName",
          },
          {
            $ref: "#/parameters/rowFilter.workCenters.processes",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/workCenters",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["workCenters"],
      },
    },
    "/costLedger": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.costLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemLedgerType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.costLedgerType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.adjustment",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.cost",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.costPostedToGL",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/costLedger",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["costLedger"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.costLedger",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["costLedger"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.costLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemLedgerType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.costLedgerType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.adjustment",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.cost",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.costPostedToGL",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["costLedger"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.costLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemLedgerType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.costLedgerType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.adjustment",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.cost",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.costPostedToGL",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.costLedger.createdAt",
          },
          {
            $ref: "#/parameters/body.costLedger",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["costLedger"],
      },
    },
    "/purchaseOrderLine": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityToReceive",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityReceived",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.inventoryUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.receivedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderLine",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderLine"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseOrderLine",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseOrderLine"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityToReceive",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityReceived",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.inventoryUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.receivedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderLine"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseOrderLineType",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityToReceive",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityReceived",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityToInvoice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.quantityInvoiced",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.inventoryUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.purchaseUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.setupPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.receivedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.invoicedComplete",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.requiresInspection",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLine.tags",
          },
          {
            $ref: "#/parameters/body.purchaseOrderLine",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderLine"],
      },
    },
    "/salesOrderShipment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.deliveryDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.notes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.trackingNumber",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingCost",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderShipment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderShipment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesOrderShipment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesOrderShipment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.deliveryDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.notes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.trackingNumber",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingCost",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderShipment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.deliveryDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.notes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.trackingNumber",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderShipment.shippingCost",
          },
          {
            $ref: "#/parameters/body.salesOrderShipment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderShipment"],
      },
    },
    "/employeeSummary": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeSummary.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.name",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.avatarUrl",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.title",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.startDate",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.departmentName",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.locationName",
          },
          {
            $ref: "#/parameters/rowFilter.employeeSummary.managerName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employeeSummary",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employeeSummary"],
      },
    },
    "/shelf": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shelf.id",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.warehouseId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.active",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.name",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/shelf",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["shelf"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.shelf",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["shelf"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shelf.id",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.warehouseId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.active",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.name",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shelf"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shelf.id",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.warehouseId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.active",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.name",
          },
          {
            $ref: "#/parameters/rowFilter.shelf.tags",
          },
          {
            $ref: "#/parameters/body.shelf",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shelf"],
      },
    },
    "/supplierLedger": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.amount",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierLedger",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierLedger"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierLedger",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierLedger"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.amount",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierLedger"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.amount",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierLedger.createdAt",
          },
          {
            $ref: "#/parameters/body.supplierLedger",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierLedger"],
      },
    },
    "/holidayYears": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.holidayYears.year",
          },
          {
            $ref: "#/parameters/rowFilter.holidayYears.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/holidayYears",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["holidayYears"],
      },
    },
    "/itemUnitSalePrice": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.unitSalePrice",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.salesUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.salesBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.priceIncludesTax",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.allowInvoiceDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/itemUnitSalePrice",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["itemUnitSalePrice"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.itemUnitSalePrice",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["itemUnitSalePrice"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.unitSalePrice",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.salesUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.salesBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.priceIncludesTax",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.allowInvoiceDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemUnitSalePrice"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.unitSalePrice",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.salesUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.salesBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.priceIncludesTax",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.allowInvoiceDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemUnitSalePrice.tags",
          },
          {
            $ref: "#/parameters/body.itemUnitSalePrice",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemUnitSalePrice"],
      },
    },
    "/job": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.job.id",
          },
          {
            $ref: "#/parameters/rowFilter.job.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.job.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.job.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.job.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.job.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.job.status",
          },
          {
            $ref: "#/parameters/rowFilter.job.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.job.deadlineType",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityShipped",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityReceivedToInventory",
          },
          {
            $ref: "#/parameters/rowFilter.job.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.job.salesOrderLineId",
          },
          {
            $ref: "#/parameters/rowFilter.job.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.job.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.job.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.job.notes",
          },
          {
            $ref: "#/parameters/rowFilter.job.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.job.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.job.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.job.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.job.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.job.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.job.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.job.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/job",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["job"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.job",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["job"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.job.id",
          },
          {
            $ref: "#/parameters/rowFilter.job.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.job.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.job.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.job.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.job.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.job.status",
          },
          {
            $ref: "#/parameters/rowFilter.job.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.job.deadlineType",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityShipped",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityReceivedToInventory",
          },
          {
            $ref: "#/parameters/rowFilter.job.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.job.salesOrderLineId",
          },
          {
            $ref: "#/parameters/rowFilter.job.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.job.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.job.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.job.notes",
          },
          {
            $ref: "#/parameters/rowFilter.job.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.job.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.job.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.job.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.job.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.job.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.job.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.job.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["job"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.job.id",
          },
          {
            $ref: "#/parameters/rowFilter.job.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.job.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.job.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.job.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.job.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.job.status",
          },
          {
            $ref: "#/parameters/rowFilter.job.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.job.deadlineType",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityShipped",
          },
          {
            $ref: "#/parameters/rowFilter.job.quantityReceivedToInventory",
          },
          {
            $ref: "#/parameters/rowFilter.job.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.job.salesOrderLineId",
          },
          {
            $ref: "#/parameters/rowFilter.job.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.job.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.job.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.job.notes",
          },
          {
            $ref: "#/parameters/rowFilter.job.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.job.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.job.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.job.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.job.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.job.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.job.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.job.tags",
          },
          {
            $ref: "#/parameters/body.job",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["job"],
      },
    },
    "/purchaseOrderFavorite": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderFavorite.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderFavorite.userId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderFavorite",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderFavorite"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseOrderFavorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseOrderFavorite"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderFavorite.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderFavorite.userId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderFavorite"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderFavorite.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderFavorite.userId",
          },
          {
            $ref: "#/parameters/body.purchaseOrderFavorite",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderFavorite"],
      },
    },
    "/scrapReason": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.scrapReason.id",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.name",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.customFields",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/scrapReason",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["scrapReason"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.scrapReason",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["scrapReason"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.scrapReason.id",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.name",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.customFields",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["scrapReason"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.scrapReason.id",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.name",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.scrapReason.customFields",
          },
          {
            $ref: "#/parameters/body.scrapReason",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["scrapReason"],
      },
    },
    "/consumables": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.consumables.active",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.defaultMethodType",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.description",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.name",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.notes",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.id",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.approved",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.tags",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.supplierIds",
          },
          {
            $ref: "#/parameters/rowFilter.consumables.unitOfMeasure",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/consumables",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["consumables"],
      },
    },
    "/quoteFavorite": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteFavorite.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteFavorite.userId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteFavorite",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteFavorite"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteFavorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteFavorite"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteFavorite.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteFavorite.userId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteFavorite"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteFavorite.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteFavorite.userId",
          },
          {
            $ref: "#/parameters/body.quoteFavorite",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteFavorite"],
      },
    },
    "/shifts": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shifts.id",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.name",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.startTime",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.endTime",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.sunday",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.monday",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.tuesday",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.wednesday",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.thursday",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.friday",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.saturday",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.active",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shifts.locationName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/shifts",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["shifts"],
      },
    },
    "/purchaseOrderLocations": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierAddressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierAddressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierCity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierStateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierPostalCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierCountryCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.supplierCountryName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryAddressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryAddressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryCity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryStateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryPostalCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryCountryCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.deliveryCountryName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerAddressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerAddressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerCity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerStateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerPostalCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerCountryCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderLocations.customerCountryName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderLocations",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderLocations"],
      },
    },
    "/quoteLines": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteLines.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.quoteRevisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.status",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.notes",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.additionalCharges",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.noQuoteReason",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.modelId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.modelName",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.modelSize",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLines.unitCost",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteLines",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteLines"],
      },
    },
    "/customer": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customer.id",
          },
          {
            $ref: "#/parameters/rowFilter.customer.name",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customerTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customerStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.logo",
          },
          {
            $ref: "#/parameters/rowFilter.customer.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.customer.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customer.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customer.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customer.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customer.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.customer.phone",
          },
          {
            $ref: "#/parameters/rowFilter.customer.fax",
          },
          {
            $ref: "#/parameters/rowFilter.customer.website",
          },
          {
            $ref: "#/parameters/rowFilter.customer.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.customer.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customer",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customer"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customer",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customer"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customer.id",
          },
          {
            $ref: "#/parameters/rowFilter.customer.name",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customerTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customerStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.logo",
          },
          {
            $ref: "#/parameters/rowFilter.customer.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.customer.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customer.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customer.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customer.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customer.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.customer.phone",
          },
          {
            $ref: "#/parameters/rowFilter.customer.fax",
          },
          {
            $ref: "#/parameters/rowFilter.customer.website",
          },
          {
            $ref: "#/parameters/rowFilter.customer.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.customer.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customer"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customer.id",
          },
          {
            $ref: "#/parameters/rowFilter.customer.name",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customerTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customerStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.logo",
          },
          {
            $ref: "#/parameters/rowFilter.customer.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.customer.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customer.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customer.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customer.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customer.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customer.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.customer.phone",
          },
          {
            $ref: "#/parameters/rowFilter.customer.fax",
          },
          {
            $ref: "#/parameters/rowFilter.customer.website",
          },
          {
            $ref: "#/parameters/rowFilter.customer.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.customer.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.customer.tags",
          },
          {
            $ref: "#/parameters/body.customer",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customer"],
      },
    },
    "/note": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.note.id",
          },
          {
            $ref: "#/parameters/rowFilter.note.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.note.note",
          },
          {
            $ref: "#/parameters/rowFilter.note.noteRichText",
          },
          {
            $ref: "#/parameters/rowFilter.note.active",
          },
          {
            $ref: "#/parameters/rowFilter.note.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.note.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.note.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.note.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/note",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["note"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.note",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["note"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.note.id",
          },
          {
            $ref: "#/parameters/rowFilter.note.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.note.note",
          },
          {
            $ref: "#/parameters/rowFilter.note.noteRichText",
          },
          {
            $ref: "#/parameters/rowFilter.note.active",
          },
          {
            $ref: "#/parameters/rowFilter.note.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.note.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.note.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.note.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["note"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.note.id",
          },
          {
            $ref: "#/parameters/rowFilter.note.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.note.note",
          },
          {
            $ref: "#/parameters/rowFilter.note.noteRichText",
          },
          {
            $ref: "#/parameters/rowFilter.note.active",
          },
          {
            $ref: "#/parameters/rowFilter.note.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.note.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.note.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.note.updatedAt",
          },
          {
            $ref: "#/parameters/body.note",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["note"],
      },
    },
    "/workCenter": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.workCenter.id",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.name",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.description",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.requiredAbilityId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.active",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/workCenter",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["workCenter"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.workCenter",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["workCenter"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.workCenter.id",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.name",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.description",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.requiredAbilityId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.active",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["workCenter"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.workCenter.id",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.name",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.description",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.defaultStandardFactor",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.requiredAbilityId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.active",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.workCenter.tags",
          },
          {
            $ref: "#/parameters/body.workCenter",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["workCenter"],
      },
    },
    "/tool": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.tool.id",
          },
          {
            $ref: "#/parameters/rowFilter.tool.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.approved",
          },
          {
            $ref: "#/parameters/rowFilter.tool.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.tool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.tool.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.tool.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/tool",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["tool"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.tool",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["tool"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.tool.id",
          },
          {
            $ref: "#/parameters/rowFilter.tool.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.approved",
          },
          {
            $ref: "#/parameters/rowFilter.tool.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.tool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.tool.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.tool.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["tool"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.tool.id",
          },
          {
            $ref: "#/parameters/rowFilter.tool.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.approved",
          },
          {
            $ref: "#/parameters/rowFilter.tool.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.tool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.tool.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.tool.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.tool.tags",
          },
          {
            $ref: "#/parameters/body.tool",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["tool"],
      },
    },
    "/accountCategories": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountCategories.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.category",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.class",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.subCategoriesCount",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/accountCategories",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["accountCategories"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.accountCategories",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["accountCategories"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountCategories.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.category",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.class",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.subCategoriesCount",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountCategories"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountCategories.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.category",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.class",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategories.subCategoriesCount",
          },
          {
            $ref: "#/parameters/body.accountCategories",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountCategories"],
      },
    },
    "/quotePayment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quotePayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.customFields",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quotePayment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quotePayment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quotePayment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quotePayment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quotePayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.customFields",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quotePayment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quotePayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quotePayment.customFields",
          },
          {
            $ref: "#/parameters/body.quotePayment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quotePayment"],
      },
    },
    "/accountCategory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountCategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.category",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.class",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/accountCategory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["accountCategory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.accountCategory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["accountCategory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountCategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.category",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.class",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountCategory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountCategory.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.category",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.class",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accountCategory.tags",
          },
          {
            $ref: "#/parameters/body.accountCategory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountCategory"],
      },
    },
    "/salesOrders": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrders.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.orderTotal",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.jobs",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.shippingMethodName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.shippingTermName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.paymentTermName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.locationName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrders.favorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrders",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrders"],
      },
    },
    "/supplier": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplier.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.supplierTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.supplierStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.logo",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.phone",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.fax",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.website",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplier",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplier"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplier",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplier"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplier.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.supplierTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.supplierStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.logo",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.phone",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.fax",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.website",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplier"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplier.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.supplierTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.supplierStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.logo",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.phone",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.fax",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.website",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.supplier.tags",
          },
          {
            $ref: "#/parameters/body.supplier",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplier"],
      },
    },
    "/customFieldTable": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customFieldTable.table",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTable.module",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTable.name",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customFieldTable",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customFieldTable"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customFieldTable",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customFieldTable"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customFieldTable.table",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTable.module",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTable.name",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customFieldTable"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customFieldTable.table",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTable.module",
          },
          {
            $ref: "#/parameters/rowFilter.customFieldTable.name",
          },
          {
            $ref: "#/parameters/body.customFieldTable",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customFieldTable"],
      },
    },
    "/shippingMethod": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shippingMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.name",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.carrier",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.carrierAccountId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.trackingUrl",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.active",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/shippingMethod",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["shippingMethod"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.shippingMethod",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["shippingMethod"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shippingMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.name",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.carrier",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.carrierAccountId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.trackingUrl",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.active",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shippingMethod"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.shippingMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.name",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.carrier",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.carrierAccountId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.trackingUrl",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.active",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.shippingMethod.tags",
          },
          {
            $ref: "#/parameters/body.shippingMethod",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["shippingMethod"],
      },
    },
    "/methodOperation": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/methodOperation",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["methodOperation"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.methodOperation",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["methodOperation"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["methodOperation"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.methodOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.methodOperation.tags",
          },
          {
            $ref: "#/parameters/body.methodOperation",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["methodOperation"],
      },
    },
    "/salesOrderPayment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.paymentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.customFields",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderPayment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderPayment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesOrderPayment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesOrderPayment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.paymentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.customFields",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderPayment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.invoiceCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.paymentComplete",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderPayment.customFields",
          },
          {
            $ref: "#/parameters/body.salesOrderPayment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderPayment"],
      },
    },
    "/sequence": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.sequence.id",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.table",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.name",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.prefix",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.suffix",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.next",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.size",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.step",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/sequence",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["sequence"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.sequence",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["sequence"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.sequence.id",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.table",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.name",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.prefix",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.suffix",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.next",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.size",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.step",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["sequence"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.sequence.id",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.table",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.name",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.prefix",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.suffix",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.next",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.size",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.step",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.sequence.updatedBy",
          },
          {
            $ref: "#/parameters/body.sequence",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["sequence"],
      },
    },
    "/oauthClient": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthClient.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.name",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.clientSecret",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.redirectUris",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/oauthClient",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["oauthClient"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.oauthClient",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["oauthClient"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthClient.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.name",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.clientSecret",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.redirectUris",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["oauthClient"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthClient.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.name",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.clientSecret",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.redirectUris",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthClient.updatedAt",
          },
          {
            $ref: "#/parameters/body.oauthClient",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["oauthClient"],
      },
    },
    "/supplierPart": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierPart.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierPartId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.minimumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.active",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierPart",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierPart"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierPart",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierPart"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierPart.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierPartId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.minimumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.active",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierPart"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierPart.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierPartId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.supplierUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.minimumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.active",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.supplierPart.tags",
          },
          {
            $ref: "#/parameters/body.supplierPart",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierPart"],
      },
    },
    "/ability": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.ability.id",
          },
          {
            $ref: "#/parameters/rowFilter.ability.name",
          },
          {
            $ref: "#/parameters/rowFilter.ability.curve",
          },
          {
            $ref: "#/parameters/rowFilter.ability.shadowWeeks",
          },
          {
            $ref: "#/parameters/rowFilter.ability.active",
          },
          {
            $ref: "#/parameters/rowFilter.ability.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.ability.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.ability.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.ability.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.ability.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/ability",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["ability"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.ability",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["ability"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.ability.id",
          },
          {
            $ref: "#/parameters/rowFilter.ability.name",
          },
          {
            $ref: "#/parameters/rowFilter.ability.curve",
          },
          {
            $ref: "#/parameters/rowFilter.ability.shadowWeeks",
          },
          {
            $ref: "#/parameters/rowFilter.ability.active",
          },
          {
            $ref: "#/parameters/rowFilter.ability.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.ability.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.ability.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.ability.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.ability.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["ability"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.ability.id",
          },
          {
            $ref: "#/parameters/rowFilter.ability.name",
          },
          {
            $ref: "#/parameters/rowFilter.ability.curve",
          },
          {
            $ref: "#/parameters/rowFilter.ability.shadowWeeks",
          },
          {
            $ref: "#/parameters/rowFilter.ability.active",
          },
          {
            $ref: "#/parameters/rowFilter.ability.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.ability.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.ability.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.ability.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.ability.updatedBy",
          },
          {
            $ref: "#/parameters/body.ability",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["ability"],
      },
    },
    "/salesRfqLine": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.order",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesRfqLine",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesRfqLine"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesRfqLine",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesRfqLine"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.order",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesRfqLine"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.order",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLine.tags",
          },
          {
            $ref: "#/parameters/body.salesRfqLine",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesRfqLine"],
      },
    },
    "/purchaseInvoice": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.dateIssued",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.dateDue",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.datePaid",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.subtotal",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalTax",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.balance",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseInvoice",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseInvoice"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseInvoice",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseInvoice"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.dateIssued",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.dateDue",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.datePaid",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.subtotal",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalTax",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.balance",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoice"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.invoiceSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.dateIssued",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.dateDue",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.datePaid",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.subtotal",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.totalTax",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.balance",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoice.tags",
          },
          {
            $ref: "#/parameters/body.purchaseInvoice",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoice"],
      },
    },
    "/customerStatus": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerStatus.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerStatus",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerStatus"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerStatus",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerStatus"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerStatus.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerStatus"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerStatus.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.name",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerStatus.tags",
          },
          {
            $ref: "#/parameters/body.customerStatus",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerStatus"],
      },
    },
    "/quoteMakeMethod": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.parentMaterialId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quantityPerParent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteMakeMethod",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteMakeMethod"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteMakeMethod",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteMakeMethod"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.parentMaterialId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quantityPerParent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteMakeMethod"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.parentMaterialId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.quantityPerParent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMakeMethod.tags",
          },
          {
            $ref: "#/parameters/body.quoteMakeMethod",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteMakeMethod"],
      },
    },
    "/employees": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employees.id",
          },
          {
            $ref: "#/parameters/rowFilter.employees.email",
          },
          {
            $ref: "#/parameters/rowFilter.employees.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.employees.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.employees.name",
          },
          {
            $ref: "#/parameters/rowFilter.employees.avatarUrl",
          },
          {
            $ref: "#/parameters/rowFilter.employees.active",
          },
          {
            $ref: "#/parameters/rowFilter.employees.employeeTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.employees.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employees",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employees"],
      },
    },
    "/quoteOperationsWithMakeMethods": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.makeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.processId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationsWithMakeMethods.workInstruction",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteOperationsWithMakeMethods",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteOperationsWithMakeMethods"],
      },
    },
    "/oauthToken": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthToken.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.accessToken",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.refreshToken",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.userId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.expiresAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/oauthToken",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["oauthToken"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.oauthToken",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["oauthToken"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthToken.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.accessToken",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.refreshToken",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.userId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.expiresAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["oauthToken"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthToken.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.accessToken",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.refreshToken",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.userId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthToken.expiresAt",
          },
          {
            $ref: "#/parameters/body.oauthToken",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["oauthToken"],
      },
    },
    "/supplierStatus": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierStatus.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierStatus",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierStatus"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierStatus",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierStatus"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierStatus.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierStatus"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierStatus.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.name",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierStatus.tags",
          },
          {
            $ref: "#/parameters/body.supplierStatus",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierStatus"],
      },
    },
    "/terms": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.terms.id",
          },
          {
            $ref: "#/parameters/rowFilter.terms.purchasingTerms",
          },
          {
            $ref: "#/parameters/rowFilter.terms.salesTerms",
          },
          {
            $ref: "#/parameters/rowFilter.terms.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.terms.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/terms",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["terms"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.terms",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["terms"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.terms.id",
          },
          {
            $ref: "#/parameters/rowFilter.terms.purchasingTerms",
          },
          {
            $ref: "#/parameters/rowFilter.terms.salesTerms",
          },
          {
            $ref: "#/parameters/rowFilter.terms.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.terms.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["terms"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.terms.id",
          },
          {
            $ref: "#/parameters/rowFilter.terms.purchasingTerms",
          },
          {
            $ref: "#/parameters/rowFilter.terms.salesTerms",
          },
          {
            $ref: "#/parameters/rowFilter.terms.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.terms.updatedBy",
          },
          {
            $ref: "#/parameters/body.terms",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["terms"],
      },
    },
    "/employeeShift": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeShift.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeShift.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeShift.shiftId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employeeShift",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employeeShift"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.employeeShift",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["employeeShift"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeShift.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeShift.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeShift.shiftId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeShift"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeShift.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeShift.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeShift.shiftId",
          },
          {
            $ref: "#/parameters/body.employeeShift",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeShift"],
      },
    },
    "/quote": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quote.id",
          },
          {
            $ref: "#/parameters/rowFilter.quote.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.status",
          },
          {
            $ref: "#/parameters/rowFilter.quote.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.quote.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quote.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quote.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quote.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.quote.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.externalLinkId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.digitalQuoteAcceptedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.digitalQuoteAcceptedByEmail",
          },
          {
            $ref: "#/parameters/rowFilter.quote.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quote",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quote"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quote",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quote"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quote.id",
          },
          {
            $ref: "#/parameters/rowFilter.quote.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.status",
          },
          {
            $ref: "#/parameters/rowFilter.quote.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.quote.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quote.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quote.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quote.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.quote.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.externalLinkId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.digitalQuoteAcceptedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.digitalQuoteAcceptedByEmail",
          },
          {
            $ref: "#/parameters/rowFilter.quote.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quote"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quote.id",
          },
          {
            $ref: "#/parameters/rowFilter.quote.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.status",
          },
          {
            $ref: "#/parameters/rowFilter.quote.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.quote.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.quote.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quote.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quote.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.quote.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.quote.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.quote.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quote.externalLinkId",
          },
          {
            $ref: "#/parameters/rowFilter.quote.digitalQuoteAcceptedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quote.digitalQuoteAcceptedByEmail",
          },
          {
            $ref: "#/parameters/rowFilter.quote.tags",
          },
          {
            $ref: "#/parameters/body.quote",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quote"],
      },
    },
    "/user": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.user.id",
          },
          {
            $ref: "#/parameters/rowFilter.user.email",
          },
          {
            $ref: "#/parameters/rowFilter.user.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.user.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.user.fullName",
          },
          {
            $ref: "#/parameters/rowFilter.user.about",
          },
          {
            $ref: "#/parameters/rowFilter.user.avatarUrl",
          },
          {
            $ref: "#/parameters/rowFilter.user.active",
          },
          {
            $ref: "#/parameters/rowFilter.user.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.user.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.user.developer",
          },
          {
            $ref: "#/parameters/rowFilter.user.admin",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/user",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["user"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.user",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["user"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.user.id",
          },
          {
            $ref: "#/parameters/rowFilter.user.email",
          },
          {
            $ref: "#/parameters/rowFilter.user.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.user.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.user.fullName",
          },
          {
            $ref: "#/parameters/rowFilter.user.about",
          },
          {
            $ref: "#/parameters/rowFilter.user.avatarUrl",
          },
          {
            $ref: "#/parameters/rowFilter.user.active",
          },
          {
            $ref: "#/parameters/rowFilter.user.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.user.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.user.developer",
          },
          {
            $ref: "#/parameters/rowFilter.user.admin",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["user"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.user.id",
          },
          {
            $ref: "#/parameters/rowFilter.user.email",
          },
          {
            $ref: "#/parameters/rowFilter.user.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.user.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.user.fullName",
          },
          {
            $ref: "#/parameters/rowFilter.user.about",
          },
          {
            $ref: "#/parameters/rowFilter.user.avatarUrl",
          },
          {
            $ref: "#/parameters/rowFilter.user.active",
          },
          {
            $ref: "#/parameters/rowFilter.user.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.user.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.user.developer",
          },
          {
            $ref: "#/parameters/rowFilter.user.admin",
          },
          {
            $ref: "#/parameters/body.user",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["user"],
      },
    },
    "/quoteShipment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteShipment.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingCost",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteShipment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteShipment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteShipment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteShipment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteShipment.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingCost",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteShipment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteShipment.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteShipment.shippingCost",
          },
          {
            $ref: "#/parameters/body.quoteShipment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteShipment"],
      },
    },
    "/modelUpload": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.modelUpload.id",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.name",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.size",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.thumbnailPath",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/modelUpload",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["modelUpload"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.modelUpload",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["modelUpload"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.modelUpload.id",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.name",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.size",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.thumbnailPath",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["modelUpload"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.modelUpload.id",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.name",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.size",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.modelUpload.thumbnailPath",
          },
          {
            $ref: "#/parameters/body.modelUpload",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["modelUpload"],
      },
    },
    "/purchaseOrderStatusHistory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.createdBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderStatusHistory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderStatusHistory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseOrderStatusHistory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseOrderStatusHistory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.createdBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderStatusHistory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderStatusHistory.createdBy",
          },
          {
            $ref: "#/parameters/body.purchaseOrderStatusHistory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderStatusHistory"],
      },
    },
    "/contractors": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.contractors.supplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.active",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.supplierName",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.fullName",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.firstName",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.lastName",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.email",
          },
          {
            $ref: "#/parameters/rowFilter.contractors.abilityIds",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/contractors",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["contractors"],
      },
    },
    "/salesOrderStatusHistory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.createdBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderStatusHistory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderStatusHistory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesOrderStatusHistory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesOrderStatusHistory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.createdBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderStatusHistory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderStatusHistory.createdBy",
          },
          {
            $ref: "#/parameters/body.salesOrderStatusHistory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderStatusHistory"],
      },
    },
    "/jobs": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobs.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.status",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.dueDate",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.deadlineType",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.productionQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.quantityComplete",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.quantityShipped",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.quantityReceivedToInventory",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.salesOrderLineId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.notes",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.tags",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.name",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.active",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.modelId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.modelName",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.modelSize",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.salesOrderReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.jobs.quoteReadableId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobs",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobs"],
      },
    },
    "/customField": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customField.id",
          },
          {
            $ref: "#/parameters/rowFilter.customField.name",
          },
          {
            $ref: "#/parameters/rowFilter.customField.sortOrder",
          },
          {
            $ref: "#/parameters/rowFilter.customField.table",
          },
          {
            $ref: "#/parameters/rowFilter.customField.dataTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.customField.listOptions",
          },
          {
            $ref: "#/parameters/rowFilter.customField.active",
          },
          {
            $ref: "#/parameters/rowFilter.customField.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customField.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customField.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customField.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customField.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customField.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customField",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customField"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customField",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customField"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customField.id",
          },
          {
            $ref: "#/parameters/rowFilter.customField.name",
          },
          {
            $ref: "#/parameters/rowFilter.customField.sortOrder",
          },
          {
            $ref: "#/parameters/rowFilter.customField.table",
          },
          {
            $ref: "#/parameters/rowFilter.customField.dataTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.customField.listOptions",
          },
          {
            $ref: "#/parameters/rowFilter.customField.active",
          },
          {
            $ref: "#/parameters/rowFilter.customField.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customField.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customField.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customField.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customField.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customField.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customField"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customField.id",
          },
          {
            $ref: "#/parameters/rowFilter.customField.name",
          },
          {
            $ref: "#/parameters/rowFilter.customField.sortOrder",
          },
          {
            $ref: "#/parameters/rowFilter.customField.table",
          },
          {
            $ref: "#/parameters/rowFilter.customField.dataTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.customField.listOptions",
          },
          {
            $ref: "#/parameters/rowFilter.customField.active",
          },
          {
            $ref: "#/parameters/rowFilter.customField.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customField.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customField.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customField.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customField.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customField.tags",
          },
          {
            $ref: "#/parameters/body.customField",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customField"],
      },
    },
    "/quoteCustomerDetails": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerName",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.contactName",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.contactEmail",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerAddressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerAddressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerCity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerStateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerPostalCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerCountryCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteCustomerDetails.customerCountryName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteCustomerDetails",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteCustomerDetails"],
      },
    },
    "/pickMethod": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.pickMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.defaultShelfId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.customFields",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/pickMethod",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["pickMethod"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.pickMethod",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["pickMethod"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.pickMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.defaultShelfId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.customFields",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["pickMethod"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.pickMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.defaultShelfId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.pickMethod.customFields",
          },
          {
            $ref: "#/parameters/body.pickMethod",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["pickMethod"],
      },
    },
    "/group": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.group.id",
          },
          {
            $ref: "#/parameters/rowFilter.group.name",
          },
          {
            $ref: "#/parameters/rowFilter.group.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.group.isIdentityGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isEmployeeTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isCustomerOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isCustomerTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isSupplierTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isSupplierOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.group.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/group",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["group"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.group",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["group"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.group.id",
          },
          {
            $ref: "#/parameters/rowFilter.group.name",
          },
          {
            $ref: "#/parameters/rowFilter.group.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.group.isIdentityGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isEmployeeTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isCustomerOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isCustomerTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isSupplierTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isSupplierOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.group.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["group"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.group.id",
          },
          {
            $ref: "#/parameters/rowFilter.group.name",
          },
          {
            $ref: "#/parameters/rowFilter.group.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.group.isIdentityGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isEmployeeTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isCustomerOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isCustomerTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isSupplierTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.isSupplierOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.group.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.group.updatedAt",
          },
          {
            $ref: "#/parameters/body.group",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["group"],
      },
    },
    "/parts": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.parts.active",
          },
          {
            $ref: "#/parameters/rowFilter.parts.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.parts.defaultMethodType",
          },
          {
            $ref: "#/parameters/rowFilter.parts.description",
          },
          {
            $ref: "#/parameters/rowFilter.parts.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.parts.name",
          },
          {
            $ref: "#/parameters/rowFilter.parts.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.parts.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.parts.notes",
          },
          {
            $ref: "#/parameters/rowFilter.parts.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.parts.modelId",
          },
          {
            $ref: "#/parameters/rowFilter.parts.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.parts.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.parts.modelName",
          },
          {
            $ref: "#/parameters/rowFilter.parts.modelSize",
          },
          {
            $ref: "#/parameters/rowFilter.parts.id",
          },
          {
            $ref: "#/parameters/rowFilter.parts.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.parts.approved",
          },
          {
            $ref: "#/parameters/rowFilter.parts.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.parts.fromDate",
          },
          {
            $ref: "#/parameters/rowFilter.parts.toDate",
          },
          {
            $ref: "#/parameters/rowFilter.parts.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.parts.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.parts.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.parts.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.parts.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.parts.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.parts.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.parts.tags",
          },
          {
            $ref: "#/parameters/rowFilter.parts.supplierIds",
          },
          {
            $ref: "#/parameters/rowFilter.parts.unitOfMeasure",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/parts",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["parts"],
      },
    },
    "/receiptLine": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.receiptLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.receiptId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.lineId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.orderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.outstandingQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.receivedQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.unitOfMeasure",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.conversionFactor",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/receiptLine",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["receiptLine"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.receiptLine",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["receiptLine"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.receiptLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.receiptId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.lineId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.orderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.outstandingQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.receivedQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.unitOfMeasure",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.conversionFactor",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["receiptLine"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.receiptLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.receiptId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.lineId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.orderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.outstandingQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.receivedQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.unitOfMeasure",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.receiptLine.conversionFactor",
          },
          {
            $ref: "#/parameters/body.receiptLine",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["receiptLine"],
      },
    },
    "/quoteLinePrice": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.leadTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.discountPercent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.netUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedNetUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.netExtendedPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedNetExtendedPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedShippingCost",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteLinePrice",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteLinePrice"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteLinePrice",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteLinePrice"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.leadTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.discountPercent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.netUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedNetUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.netExtendedPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedNetExtendedPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedShippingCost",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteLinePrice"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.leadTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.discountPercent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.netUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedNetUnitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.netExtendedPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedNetExtendedPrice",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.shippingCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLinePrice.convertedShippingCost",
          },
          {
            $ref: "#/parameters/body.quoteLinePrice",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteLinePrice"],
      },
    },
    "/makeMethod": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.makeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/makeMethod",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["makeMethod"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.makeMethod",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["makeMethod"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.makeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["makeMethod"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.makeMethod.id",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.makeMethod.tags",
          },
          {
            $ref: "#/parameters/body.makeMethod",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["makeMethod"],
      },
    },
    "/groups": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.groups.id",
          },
          {
            $ref: "#/parameters/rowFilter.groups.isEmployeeTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups.isCustomerOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups.isCustomerTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups.isSupplierOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups.isSupplierTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups.name",
          },
          {
            $ref: "#/parameters/rowFilter.groups.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.groups.parentId",
          },
          {
            $ref: "#/parameters/rowFilter.groups.users",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/groups",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["groups"],
      },
    },
    "/purchaseOrderDelivery": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.deliveryDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.notes",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.trackingNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrderDelivery",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrderDelivery"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseOrderDelivery",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseOrderDelivery"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.deliveryDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.notes",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.trackingNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderDelivery"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.deliveryDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.notes",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.trackingNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrderDelivery.tags",
          },
          {
            $ref: "#/parameters/body.purchaseOrderDelivery",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseOrderDelivery"],
      },
    },
    "/warehouse": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.warehouse.id",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.name",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresPick",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresPutAway",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresBin",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresReceive",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresShipment",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.active",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/warehouse",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["warehouse"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.warehouse",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["warehouse"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.warehouse.id",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.name",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresPick",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresPutAway",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresBin",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresReceive",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresShipment",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.active",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["warehouse"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.warehouse.id",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.name",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresPick",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresPutAway",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresBin",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresReceive",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.requiresShipment",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.active",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.warehouse.updatedAt",
          },
          {
            $ref: "#/parameters/body.warehouse",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["warehouse"],
      },
    },
    "/itemLedger": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.entryType",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentLineId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/itemLedger",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["itemLedger"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.itemLedger",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["itemLedger"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.entryType",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentLineId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemLedger"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemLedger.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.entryNumber",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.entryType",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemLedger.documentLineId",
          },
          {
            $ref: "#/parameters/body.itemLedger",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemLedger"],
      },
    },
    "/salesRfqFavorite": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqFavorite.rfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqFavorite.userId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesRfqFavorite",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesRfqFavorite"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesRfqFavorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesRfqFavorite"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqFavorite.rfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqFavorite.userId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesRfqFavorite"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqFavorite.rfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqFavorite.userId",
          },
          {
            $ref: "#/parameters/body.salesRfqFavorite",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesRfqFavorite"],
      },
    },
    "/externalLink": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.externalLink.id",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.expiresAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/externalLink",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["externalLink"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.externalLink",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["externalLink"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.externalLink.id",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.expiresAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.companyId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["externalLink"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.externalLink.id",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.documentType",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.expiresAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLink.companyId",
          },
          {
            $ref: "#/parameters/body.externalLink",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["externalLink"],
      },
    },
    "/quoteOperationTool": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteOperationTool",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteOperationTool"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteOperationTool",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteOperationTool"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteOperationTool"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.operationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.toolId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperationTool.updatedBy",
          },
          {
            $ref: "#/parameters/body.quoteOperationTool",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteOperationTool"],
      },
    },
    "/supplierContact": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierContact.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.contactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.userId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierContact",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierContact"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierContact",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierContact"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierContact.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.contactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.userId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierContact"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierContact.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.contactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.userId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierContact.tags",
          },
          {
            $ref: "#/parameters/body.supplierContact",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierContact"],
      },
    },
    "/integrations": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.integrations.id",
          },
          {
            $ref: "#/parameters/rowFilter.integrations.jsonschema",
          },
          {
            $ref: "#/parameters/rowFilter.integrations.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.integrations.metadata",
          },
          {
            $ref: "#/parameters/rowFilter.integrations.active",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/integrations",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["integrations"],
      },
    },
    "/groups_recursive": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.groups_recursive.groupId",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.name",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.parentId",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.isIdentityGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.isEmployeeTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.isCustomerOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.isCustomerTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.isSupplierOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.isSupplierTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groups_recursive.user",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/groups_recursive",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["groups_recursive"],
      },
    },
    "/purchaseInvoices": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.invoiceSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.dateIssued",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.dateDue",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.datePaid",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.paymentTermId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.subtotal",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.totalDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.totalTax",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.balance",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoices.paymentTermName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseInvoices",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseInvoices"],
      },
    },
    "/customerContact": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerContact.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.contactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.userId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerContact",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerContact"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerContact",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerContact"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerContact.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.contactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.userId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerContact"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerContact.id",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.contactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.userId",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customerContact.tags",
          },
          {
            $ref: "#/parameters/body.customerContact",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerContact"],
      },
    },
    "/accountingPeriod": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.startDate",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.endDate",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.status",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/accountingPeriod",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["accountingPeriod"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.accountingPeriod",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["accountingPeriod"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.startDate",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.endDate",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.status",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountingPeriod"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.id",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.startDate",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.endDate",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.status",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accountingPeriod.updatedAt",
          },
          {
            $ref: "#/parameters/body.accountingPeriod",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accountingPeriod"],
      },
    },
    "/purchaseInvoicePaymentRelation": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.paymentId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseInvoicePaymentRelation",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseInvoicePaymentRelation"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseInvoicePaymentRelation",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseInvoicePaymentRelation"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.paymentId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoicePaymentRelation"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoicePaymentRelation.paymentId",
          },
          {
            $ref: "#/parameters/body.purchaseInvoicePaymentRelation",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoicePaymentRelation"],
      },
    },
    "/itemPlanning": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemPlanning.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderingPolicy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.critical",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.safetyStockQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.safetyStockLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandAccumulationPeriod",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandReschedulingPeriod",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandAccumulationIncludesInventory",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderPoint",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderMaximumInventory",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.minimumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.maximumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.orderMultiple",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/itemPlanning",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["itemPlanning"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.itemPlanning",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["itemPlanning"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemPlanning.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderingPolicy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.critical",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.safetyStockQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.safetyStockLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandAccumulationPeriod",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandReschedulingPeriod",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandAccumulationIncludesInventory",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderPoint",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderMaximumInventory",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.minimumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.maximumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.orderMultiple",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemPlanning"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemPlanning.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderingPolicy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.critical",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.safetyStockQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.safetyStockLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandAccumulationPeriod",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandReschedulingPeriod",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.demandAccumulationIncludesInventory",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderPoint",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.reorderMaximumInventory",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.minimumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.maximumOrderQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.orderMultiple",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemPlanning.tags",
          },
          {
            $ref: "#/parameters/body.itemPlanning",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemPlanning"],
      },
    },
    "/employeeJob": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeJob.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.shiftId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.managerId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.title",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.startDate",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.departmentId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employeeJob",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employeeJob"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.employeeJob",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["employeeJob"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeJob.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.shiftId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.managerId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.title",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.startDate",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.departmentId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeJob"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeJob.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.shiftId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.managerId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.title",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.startDate",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.departmentId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeJob.tags",
          },
          {
            $ref: "#/parameters/body.employeeJob",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeJob"],
      },
    },
    "/account": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.account.id",
          },
          {
            $ref: "#/parameters/rowFilter.account.number",
          },
          {
            $ref: "#/parameters/rowFilter.account.name",
          },
          {
            $ref: "#/parameters/rowFilter.account.type",
          },
          {
            $ref: "#/parameters/rowFilter.account.class",
          },
          {
            $ref: "#/parameters/rowFilter.account.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.account.accountSubcategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.account.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.account.consolidatedRate",
          },
          {
            $ref: "#/parameters/rowFilter.account.directPosting",
          },
          {
            $ref: "#/parameters/rowFilter.account.active",
          },
          {
            $ref: "#/parameters/rowFilter.account.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.account.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.account.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.account.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.account.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.account.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.account.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/account",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["account"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.account",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["account"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.account.id",
          },
          {
            $ref: "#/parameters/rowFilter.account.number",
          },
          {
            $ref: "#/parameters/rowFilter.account.name",
          },
          {
            $ref: "#/parameters/rowFilter.account.type",
          },
          {
            $ref: "#/parameters/rowFilter.account.class",
          },
          {
            $ref: "#/parameters/rowFilter.account.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.account.accountSubcategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.account.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.account.consolidatedRate",
          },
          {
            $ref: "#/parameters/rowFilter.account.directPosting",
          },
          {
            $ref: "#/parameters/rowFilter.account.active",
          },
          {
            $ref: "#/parameters/rowFilter.account.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.account.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.account.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.account.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.account.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.account.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.account.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["account"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.account.id",
          },
          {
            $ref: "#/parameters/rowFilter.account.number",
          },
          {
            $ref: "#/parameters/rowFilter.account.name",
          },
          {
            $ref: "#/parameters/rowFilter.account.type",
          },
          {
            $ref: "#/parameters/rowFilter.account.class",
          },
          {
            $ref: "#/parameters/rowFilter.account.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.account.accountSubcategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.account.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.account.consolidatedRate",
          },
          {
            $ref: "#/parameters/rowFilter.account.directPosting",
          },
          {
            $ref: "#/parameters/rowFilter.account.active",
          },
          {
            $ref: "#/parameters/rowFilter.account.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.account.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.account.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.account.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.account.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.account.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.account.tags",
          },
          {
            $ref: "#/parameters/body.account",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["account"],
      },
    },
    "/companyIntegration": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.companyIntegration.id",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.metadata",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.active",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/companyIntegration",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["companyIntegration"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.companyIntegration",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["companyIntegration"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.companyIntegration.id",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.metadata",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.active",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["companyIntegration"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.companyIntegration.id",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.metadata",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.active",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.companyIntegration.updatedBy",
          },
          {
            $ref: "#/parameters/body.companyIntegration",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["companyIntegration"],
      },
    },
    "/salesRfqLines": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.description",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.order",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.modelId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.autodeskUrn",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.modelPath",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.modelName",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.modelSize",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.itemName",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqLines.itemType",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesRfqLines",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesRfqLines"],
      },
    },
    "/companySettings": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.companySettings.id",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteEnabled",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteNotificationGroup",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteIncludesPurchaseOrders",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/companySettings",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["companySettings"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.companySettings",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["companySettings"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.companySettings.id",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteEnabled",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteNotificationGroup",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteIncludesPurchaseOrders",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["companySettings"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.companySettings.id",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteEnabled",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteNotificationGroup",
          },
          {
            $ref: "#/parameters/rowFilter.companySettings.digitalQuoteIncludesPurchaseOrders",
          },
          {
            $ref: "#/parameters/body.companySettings",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["companySettings"],
      },
    },
    "/externalLinkMessage": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.id",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.externalLinkId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.message",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/externalLinkMessage",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["externalLinkMessage"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.externalLinkMessage",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["externalLinkMessage"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.id",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.externalLinkId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.message",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.companyId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["externalLinkMessage"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.id",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.externalLinkId",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.message",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.externalLinkMessage.companyId",
          },
          {
            $ref: "#/parameters/body.externalLinkMessage",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["externalLinkMessage"],
      },
    },
    "/jobFavorite": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobFavorite.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobFavorite.userId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobFavorite",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobFavorite"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.jobFavorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["jobFavorite"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobFavorite.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobFavorite.userId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobFavorite"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobFavorite.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobFavorite.userId",
          },
          {
            $ref: "#/parameters/body.jobFavorite",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["jobFavorite"],
      },
    },
    "/documentTransaction": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/documentTransaction",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["documentTransaction"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.documentTransaction",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["documentTransaction"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["documentTransaction"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentTransaction.id",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.type",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.userId",
          },
          {
            $ref: "#/parameters/rowFilter.documentTransaction.createdAt",
          },
          {
            $ref: "#/parameters/body.documentTransaction",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["documentTransaction"],
      },
    },
    "/materialSubstance": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.materialSubstance.id",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.name",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/materialSubstance",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["materialSubstance"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.materialSubstance",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["materialSubstance"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.materialSubstance.id",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.name",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["materialSubstance"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.materialSubstance.id",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.name",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.materialSubstance.tags",
          },
          {
            $ref: "#/parameters/body.materialSubstance",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["materialSubstance"],
      },
    },
    "/workCenterProcess": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.processId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/workCenterProcess",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["workCenterProcess"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.workCenterProcess",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["workCenterProcess"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.processId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["workCenterProcess"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.processId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.workCenterProcess.updatedAt",
          },
          {
            $ref: "#/parameters/body.workCenterProcess",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["workCenterProcess"],
      },
    },
    "/partners": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.partners.id",
          },
          {
            $ref: "#/parameters/rowFilter.partners.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.partners.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.partners.active",
          },
          {
            $ref: "#/parameters/rowFilter.partners.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.partners.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.partners.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.partners.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.partners.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.partners.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.partners.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.partners.abilityName",
          },
          {
            $ref: "#/parameters/rowFilter.partners.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.partners.supplierName",
          },
          {
            $ref: "#/parameters/rowFilter.partners.city",
          },
          {
            $ref: "#/parameters/rowFilter.partners.state",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/partners",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["partners"],
      },
    },
    "/consumable": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.consumable.id",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.approved",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/consumable",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["consumable"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.consumable",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["consumable"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.consumable.id",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.approved",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["consumable"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.consumable.id",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.approved",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.consumable.tags",
          },
          {
            $ref: "#/parameters/body.consumable",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["consumable"],
      },
    },
    "/location": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.location.id",
          },
          {
            $ref: "#/parameters/rowFilter.location.name",
          },
          {
            $ref: "#/parameters/rowFilter.location.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.location.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.location.city",
          },
          {
            $ref: "#/parameters/rowFilter.location.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.location.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.location.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.location.timezone",
          },
          {
            $ref: "#/parameters/rowFilter.location.latitude",
          },
          {
            $ref: "#/parameters/rowFilter.location.longitude",
          },
          {
            $ref: "#/parameters/rowFilter.location.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.location.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.location.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.location.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.location.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.location.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.location.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/location",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["location"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.location",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["location"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.location.id",
          },
          {
            $ref: "#/parameters/rowFilter.location.name",
          },
          {
            $ref: "#/parameters/rowFilter.location.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.location.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.location.city",
          },
          {
            $ref: "#/parameters/rowFilter.location.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.location.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.location.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.location.timezone",
          },
          {
            $ref: "#/parameters/rowFilter.location.latitude",
          },
          {
            $ref: "#/parameters/rowFilter.location.longitude",
          },
          {
            $ref: "#/parameters/rowFilter.location.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.location.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.location.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.location.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.location.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.location.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.location.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["location"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.location.id",
          },
          {
            $ref: "#/parameters/rowFilter.location.name",
          },
          {
            $ref: "#/parameters/rowFilter.location.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.location.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.location.city",
          },
          {
            $ref: "#/parameters/rowFilter.location.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.location.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.location.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.location.timezone",
          },
          {
            $ref: "#/parameters/rowFilter.location.latitude",
          },
          {
            $ref: "#/parameters/rowFilter.location.longitude",
          },
          {
            $ref: "#/parameters/rowFilter.location.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.location.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.location.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.location.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.location.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.location.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.location.tags",
          },
          {
            $ref: "#/parameters/body.location",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["location"],
      },
    },
    "/employeeAbility": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeAbility.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.active",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.lastTrainingDate",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.trainingDays",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.trainingCompleted",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employeeAbility",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employeeAbility"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.employeeAbility",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["employeeAbility"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeAbility.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.active",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.lastTrainingDate",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.trainingDays",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.trainingCompleted",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.companyId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeAbility"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeAbility.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.active",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.lastTrainingDate",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.trainingDays",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.trainingCompleted",
          },
          {
            $ref: "#/parameters/rowFilter.employeeAbility.companyId",
          },
          {
            $ref: "#/parameters/body.employeeAbility",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeAbility"],
      },
    },
    "/quoteOperation": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteOperation",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteOperation"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteOperation",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteOperation"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteOperation"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteOperation.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationOrder",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.overheadRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.processId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.setupTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.setupUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.laborUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineUnit",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.machineRate",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationMinimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationUnitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.operationSupplierProcessId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.workInstruction",
          },
          {
            $ref: "#/parameters/rowFilter.quoteOperation.tags",
          },
          {
            $ref: "#/parameters/body.quoteOperation",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteOperation"],
      },
    },
    "/salesRfq": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfq.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.rfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.rfqDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesRfq",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesRfq"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesRfq",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesRfq"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfq.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.rfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.rfqDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesRfq"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfq.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.rfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.rfqDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfq.tags",
          },
          {
            $ref: "#/parameters/body.salesRfq",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesRfq"],
      },
    },
    "/paymentTerm": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.paymentTerm.id",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.name",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.daysDue",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.daysDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.discountPercentage",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.calculationMethod",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.active",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/paymentTerm",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["paymentTerm"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.paymentTerm",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["paymentTerm"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.paymentTerm.id",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.name",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.daysDue",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.daysDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.discountPercentage",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.calculationMethod",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.active",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["paymentTerm"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.paymentTerm.id",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.name",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.daysDue",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.daysDiscount",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.discountPercentage",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.calculationMethod",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.active",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.paymentTerm.tags",
          },
          {
            $ref: "#/parameters/body.paymentTerm",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["paymentTerm"],
      },
    },
    "/apiKey": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.apiKey.id",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.name",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.key",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.createdAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/apiKey",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["apiKey"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.apiKey",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["apiKey"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.apiKey.id",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.name",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.key",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.createdAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["apiKey"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.apiKey.id",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.name",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.key",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.apiKey.createdAt",
          },
          {
            $ref: "#/parameters/body.apiKey",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["apiKey"],
      },
    },
    "/salesOrderCustomers": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderCustomers.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderCustomers.name",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderCustomers.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderCustomers",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderCustomers"],
      },
    },
    "/opportunity": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.opportunity.id",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.purchaseOrderDocumentPath",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.requestForQuoteDocumentPath",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesRfqCompletedDate",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.quoteCompletedDate",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesOrderCompletedDate",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/opportunity",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["opportunity"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.opportunity",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["opportunity"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.opportunity.id",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.purchaseOrderDocumentPath",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.requestForQuoteDocumentPath",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesRfqCompletedDate",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.quoteCompletedDate",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesOrderCompletedDate",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["opportunity"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.opportunity.id",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesRfqId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.purchaseOrderDocumentPath",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.requestForQuoteDocumentPath",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesRfqCompletedDate",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.quoteCompletedDate",
          },
          {
            $ref: "#/parameters/rowFilter.opportunity.salesOrderCompletedDate",
          },
          {
            $ref: "#/parameters/body.opportunity",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["opportunity"],
      },
    },
    "/documentLabels": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentLabels.label",
          },
          {
            $ref: "#/parameters/rowFilter.documentLabels.userId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/documentLabels",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["documentLabels"],
      },
    },
    "/groupMembers": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.groupMembers.id",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.name",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.isIdentityGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.isEmployeeTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.isCustomerOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.isCustomerTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.isSupplierOrgGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.isSupplierTypeGroup",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.groupId",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.memberGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.memberUserId",
          },
          {
            $ref: "#/parameters/rowFilter.groupMembers.user",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/groupMembers",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["groupMembers"],
      },
    },
    "/salesOrder": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrder.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.salesPersonId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrder",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrder"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesOrder",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesOrder"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrder.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.salesPersonId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrder"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrder.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrder.salesPersonId",
          },
          {
            $ref: "#/parameters/body.salesOrder",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrder"],
      },
    },
    "/userAttributeValue": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.userAttributeId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.userId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueBoolean",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueDate",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueNumeric",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueText",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueUser",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/userAttributeValue",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["userAttributeValue"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.userAttributeValue",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["userAttributeValue"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.userAttributeId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.userId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueBoolean",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueDate",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueNumeric",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueText",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueUser",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userAttributeValue"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.userAttributeId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.userId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueBoolean",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueDate",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueNumeric",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueText",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.valueUser",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttributeValue.updatedBy",
          },
          {
            $ref: "#/parameters/body.userAttributeValue",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userAttributeValue"],
      },
    },
    "/unitOfMeasure": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.id",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.code",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.name",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.active",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/unitOfMeasure",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["unitOfMeasure"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.unitOfMeasure",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["unitOfMeasure"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.id",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.code",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.name",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.active",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["unitOfMeasure"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.id",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.code",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.name",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.active",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.unitOfMeasure.tags",
          },
          {
            $ref: "#/parameters/body.unitOfMeasure",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["unitOfMeasure"],
      },
    },
    "/documentFavorite": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentFavorite.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentFavorite.userId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/documentFavorite",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["documentFavorite"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.documentFavorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["documentFavorite"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentFavorite.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentFavorite.userId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["documentFavorite"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentFavorite.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentFavorite.userId",
          },
          {
            $ref: "#/parameters/body.documentFavorite",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["documentFavorite"],
      },
    },
    "/partner": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.partner.id",
          },
          {
            $ref: "#/parameters/rowFilter.partner.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.partner.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.partner.active",
          },
          {
            $ref: "#/parameters/rowFilter.partner.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.partner.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.partner.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.partner.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.partner.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.partner.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.partner.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/partner",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["partner"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.partner",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["partner"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.partner.id",
          },
          {
            $ref: "#/parameters/rowFilter.partner.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.partner.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.partner.active",
          },
          {
            $ref: "#/parameters/rowFilter.partner.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.partner.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.partner.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.partner.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.partner.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.partner.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.partner.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["partner"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.partner.id",
          },
          {
            $ref: "#/parameters/rowFilter.partner.hoursPerWeek",
          },
          {
            $ref: "#/parameters/rowFilter.partner.abilityId",
          },
          {
            $ref: "#/parameters/rowFilter.partner.active",
          },
          {
            $ref: "#/parameters/rowFilter.partner.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.partner.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.partner.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.partner.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.partner.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.partner.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.partner.tags",
          },
          {
            $ref: "#/parameters/body.partner",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["partner"],
      },
    },
    "/address": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.address.id",
          },
          {
            $ref: "#/parameters/rowFilter.address.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.address.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.address.city",
          },
          {
            $ref: "#/parameters/rowFilter.address.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.address.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.address.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.address.phone",
          },
          {
            $ref: "#/parameters/rowFilter.address.fax",
          },
          {
            $ref: "#/parameters/rowFilter.address.companyId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/address",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["address"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.address",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["address"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.address.id",
          },
          {
            $ref: "#/parameters/rowFilter.address.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.address.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.address.city",
          },
          {
            $ref: "#/parameters/rowFilter.address.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.address.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.address.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.address.phone",
          },
          {
            $ref: "#/parameters/rowFilter.address.fax",
          },
          {
            $ref: "#/parameters/rowFilter.address.companyId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["address"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.address.id",
          },
          {
            $ref: "#/parameters/rowFilter.address.addressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.address.addressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.address.city",
          },
          {
            $ref: "#/parameters/rowFilter.address.stateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.address.postalCode",
          },
          {
            $ref: "#/parameters/rowFilter.address.countryCode",
          },
          {
            $ref: "#/parameters/rowFilter.address.phone",
          },
          {
            $ref: "#/parameters/rowFilter.address.fax",
          },
          {
            $ref: "#/parameters/rowFilter.address.companyId",
          },
          {
            $ref: "#/parameters/body.address",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["address"],
      },
    },
    "/part": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.part.id",
          },
          {
            $ref: "#/parameters/rowFilter.part.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.part.approved",
          },
          {
            $ref: "#/parameters/rowFilter.part.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.fromDate",
          },
          {
            $ref: "#/parameters/rowFilter.part.toDate",
          },
          {
            $ref: "#/parameters/rowFilter.part.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.part.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.part.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.part.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.part.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.part.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/part",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["part"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.part",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["part"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.part.id",
          },
          {
            $ref: "#/parameters/rowFilter.part.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.part.approved",
          },
          {
            $ref: "#/parameters/rowFilter.part.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.fromDate",
          },
          {
            $ref: "#/parameters/rowFilter.part.toDate",
          },
          {
            $ref: "#/parameters/rowFilter.part.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.part.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.part.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.part.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.part.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.part.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["part"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.part.id",
          },
          {
            $ref: "#/parameters/rowFilter.part.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.part.approved",
          },
          {
            $ref: "#/parameters/rowFilter.part.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.fromDate",
          },
          {
            $ref: "#/parameters/rowFilter.part.toDate",
          },
          {
            $ref: "#/parameters/rowFilter.part.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.part.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.part.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.part.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.part.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.part.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.part.tags",
          },
          {
            $ref: "#/parameters/body.part",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["part"],
      },
    },
    "/customerPartToItem": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.id",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerPartToItem",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerPartToItem"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerPartToItem",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerPartToItem"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.id",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerPartToItem"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerPartToItem.id",
          },
          {
            $ref: "#/parameters/body.customerPartToItem",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerPartToItem"],
      },
    },
    "/materials": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.materials.active",
          },
          {
            $ref: "#/parameters/rowFilter.materials.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.materials.defaultMethodType",
          },
          {
            $ref: "#/parameters/rowFilter.materials.description",
          },
          {
            $ref: "#/parameters/rowFilter.materials.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.materials.name",
          },
          {
            $ref: "#/parameters/rowFilter.materials.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.materials.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.materials.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.materials.notes",
          },
          {
            $ref: "#/parameters/rowFilter.materials.id",
          },
          {
            $ref: "#/parameters/rowFilter.materials.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.materials.materialFormId",
          },
          {
            $ref: "#/parameters/rowFilter.materials.materialSubstanceId",
          },
          {
            $ref: "#/parameters/rowFilter.materials.grade",
          },
          {
            $ref: "#/parameters/rowFilter.materials.dimensions",
          },
          {
            $ref: "#/parameters/rowFilter.materials.finish",
          },
          {
            $ref: "#/parameters/rowFilter.materials.approved",
          },
          {
            $ref: "#/parameters/rowFilter.materials.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materials.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.materials.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.materials.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.materials.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.materials.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.materials.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.materials.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.materials.tags",
          },
          {
            $ref: "#/parameters/rowFilter.materials.materialForm",
          },
          {
            $ref: "#/parameters/rowFilter.materials.materialSubstance",
          },
          {
            $ref: "#/parameters/rowFilter.materials.supplierIds",
          },
          {
            $ref: "#/parameters/rowFilter.materials.unitOfMeasure",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/materials",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["materials"],
      },
    },
    "/employeeType": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeType.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.name",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.updatedAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employeeType",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employeeType"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.employeeType",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["employeeType"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeType.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.name",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.updatedAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeType"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employeeType.id",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.name",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.protected",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.employeeType.updatedAt",
          },
          {
            $ref: "#/parameters/body.employeeType",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employeeType"],
      },
    },
    "/itemReplenishment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.preferredSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.manufacturingBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.requiresConfiguration",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.lotSize",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.scrapPercentage",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/itemReplenishment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["itemReplenishment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.itemReplenishment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["itemReplenishment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.preferredSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.manufacturingBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.requiresConfiguration",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.lotSize",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.scrapPercentage",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemReplenishment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.preferredSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingLeadTime",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.purchasingBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.manufacturingBlocked",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.requiresConfiguration",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.lotSize",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.scrapPercentage",
          },
          {
            $ref: "#/parameters/rowFilter.itemReplenishment.tags",
          },
          {
            $ref: "#/parameters/body.itemReplenishment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemReplenishment"],
      },
    },
    "/documentLabel": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentLabel.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentLabel.userId",
          },
          {
            $ref: "#/parameters/rowFilter.documentLabel.label",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/documentLabel",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["documentLabel"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.documentLabel",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["documentLabel"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentLabel.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentLabel.userId",
          },
          {
            $ref: "#/parameters/rowFilter.documentLabel.label",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["documentLabel"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.documentLabel.documentId",
          },
          {
            $ref: "#/parameters/rowFilter.documentLabel.userId",
          },
          {
            $ref: "#/parameters/rowFilter.documentLabel.label",
          },
          {
            $ref: "#/parameters/body.documentLabel",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["documentLabel"],
      },
    },
    "/supplierShipping": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierShipping.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierShipping",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierShipping"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierShipping",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierShipping"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierShipping.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierShipping"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierShipping.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingSupplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierShipping.tags",
          },
          {
            $ref: "#/parameters/body.supplierShipping",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierShipping"],
      },
    },
    "/productionQuantity": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.productionQuantity.id",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.type",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.setupProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.laborProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.machineProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.notes",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.scrapReasonId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/productionQuantity",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["productionQuantity"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.productionQuantity",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["productionQuantity"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.productionQuantity.id",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.type",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.setupProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.laborProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.machineProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.notes",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.scrapReasonId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["productionQuantity"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.productionQuantity.id",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.type",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.setupProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.laborProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.machineProductionEventId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.notes",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionQuantity.scrapReasonId",
          },
          {
            $ref: "#/parameters/body.productionQuantity",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["productionQuantity"],
      },
    },
    "/customerShipping": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerShipping.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customerShipping",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customerShipping"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.customerShipping",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["customerShipping"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerShipping.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerShipping"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customerShipping.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingCustomerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingTermId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.shippingMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customerShipping.updatedBy",
          },
          {
            $ref: "#/parameters/body.customerShipping",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["customerShipping"],
      },
    },
    "/fiscalYearSettings": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.startMonth",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.taxStartMonth",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/fiscalYearSettings",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["fiscalYearSettings"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.fiscalYearSettings",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["fiscalYearSettings"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.startMonth",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.taxStartMonth",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["fiscalYearSettings"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.startMonth",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.taxStartMonth",
          },
          {
            $ref: "#/parameters/rowFilter.fiscalYearSettings.updatedBy",
          },
          {
            $ref: "#/parameters/body.fiscalYearSettings",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["fiscalYearSettings"],
      },
    },
    "/itemCost": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemCost.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.costingMethod",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.standardCost",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.costIsAdjusted",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/itemCost",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["itemCost"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.itemCost",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["itemCost"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemCost.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.costingMethod",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.standardCost",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.costIsAdjusted",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemCost"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemCost.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.costingMethod",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.standardCost",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.costIsAdjusted",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemCost.tags",
          },
          {
            $ref: "#/parameters/body.itemCost",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemCost"],
      },
    },
    "/salesOrderLocations": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerAddressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerAddressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerCity",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerStateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerPostalCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerCountryCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.customerCountryName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentCustomerName",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentAddressLine1",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentAddressLine2",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentCity",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentStateProvince",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentPostalCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentCountryCode",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderLocations.paymentCountryName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderLocations",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderLocations"],
      },
    },
    "/feedback": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.feedback.id",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.location",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.userId",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.feedback",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.attachmentPath",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/feedback",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["feedback"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.feedback",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["feedback"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.feedback.id",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.location",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.userId",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.feedback",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.attachmentPath",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["feedback"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.feedback.id",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.location",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.userId",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.feedback",
          },
          {
            $ref: "#/parameters/rowFilter.feedback.attachmentPath",
          },
          {
            $ref: "#/parameters/body.feedback",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["feedback"],
      },
    },
    "/oauthCode": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthCode.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.code",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.userId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.redirectUri",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.expiresAt",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/oauthCode",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["oauthCode"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.oauthCode",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["oauthCode"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthCode.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.code",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.userId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.redirectUri",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.expiresAt",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["oauthCode"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.oauthCode.id",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.code",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.clientId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.userId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.redirectUri",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.oauthCode.expiresAt",
          },
          {
            $ref: "#/parameters/body.oauthCode",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["oauthCode"],
      },
    },
    "/tools": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.tools.active",
          },
          {
            $ref: "#/parameters/rowFilter.tools.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.tools.defaultMethodType",
          },
          {
            $ref: "#/parameters/rowFilter.tools.description",
          },
          {
            $ref: "#/parameters/rowFilter.tools.itemTrackingType",
          },
          {
            $ref: "#/parameters/rowFilter.tools.name",
          },
          {
            $ref: "#/parameters/rowFilter.tools.replenishmentSystem",
          },
          {
            $ref: "#/parameters/rowFilter.tools.thumbnailPath",
          },
          {
            $ref: "#/parameters/rowFilter.tools.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.tools.notes",
          },
          {
            $ref: "#/parameters/rowFilter.tools.id",
          },
          {
            $ref: "#/parameters/rowFilter.tools.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.tools.approved",
          },
          {
            $ref: "#/parameters/rowFilter.tools.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tools.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.tools.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.tools.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.tools.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.tools.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.tools.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.tools.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.tools.tags",
          },
          {
            $ref: "#/parameters/rowFilter.tools.supplierIds",
          },
          {
            $ref: "#/parameters/rowFilter.tools.unitOfMeasure",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/tools",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["tools"],
      },
    },
    "/quoteMaterialWithMakeMethodId": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.quoteLineId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.order",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.quoteMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.quoteOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteMaterialWithMakeMethodId.quoteMaterialMakeMethodId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteMaterialWithMakeMethodId",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteMaterialWithMakeMethodId"],
      },
    },
    "/suppliers": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.suppliers.id",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.name",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.supplierTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.supplierStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.logo",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.phone",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.fax",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.website",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.tags",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.type",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.status",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.orderCount",
          },
          {
            $ref: "#/parameters/rowFilter.suppliers.partCount",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/suppliers",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["suppliers"],
      },
    },
    "/purchaseOrders": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.type",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.status",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.orderDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.notes",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.supplierLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.supplierContactId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.supplierReference",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.closedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.closedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.exchangeRateUpdatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.shippingMethodName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.shippingTermName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.paymentTermName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.receiptRequestedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.receiptPromisedDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.dropShipment",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.locationName",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseOrders.favorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseOrders",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseOrders"],
      },
    },
    "/purchasePayment": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchasePayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.paymentId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.paymentDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.customFields",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchasePayment",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchasePayment"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchasePayment",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchasePayment"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchasePayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.paymentId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.paymentDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.customFields",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchasePayment"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchasePayment.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.paymentId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.paymentDate",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchasePayment.customFields",
          },
          {
            $ref: "#/parameters/body.purchasePayment",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchasePayment"],
      },
    },
    "/customers": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.customers.id",
          },
          {
            $ref: "#/parameters/rowFilter.customers.name",
          },
          {
            $ref: "#/parameters/rowFilter.customers.customerTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.customers.customerStatusId",
          },
          {
            $ref: "#/parameters/rowFilter.customers.taxId",
          },
          {
            $ref: "#/parameters/rowFilter.customers.accountManagerId",
          },
          {
            $ref: "#/parameters/rowFilter.customers.logo",
          },
          {
            $ref: "#/parameters/rowFilter.customers.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.customers.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.customers.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.customers.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.customers.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.customers.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.customers.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.customers.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.customers.phone",
          },
          {
            $ref: "#/parameters/rowFilter.customers.fax",
          },
          {
            $ref: "#/parameters/rowFilter.customers.website",
          },
          {
            $ref: "#/parameters/rowFilter.customers.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.customers.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.customers.type",
          },
          {
            $ref: "#/parameters/rowFilter.customers.status",
          },
          {
            $ref: "#/parameters/rowFilter.customers.orderCount",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/customers",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["customers"],
      },
    },
    "/salesOrderFavorite": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderFavorite.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderFavorite.userId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesOrderFavorite",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesOrderFavorite"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.salesOrderFavorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["salesOrderFavorite"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderFavorite.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderFavorite.userId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderFavorite"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesOrderFavorite.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesOrderFavorite.userId",
          },
          {
            $ref: "#/parameters/body.salesOrderFavorite",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["salesOrderFavorite"],
      },
    },
    "/fixture": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.fixture.id",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.approved",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/fixture",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["fixture"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.fixture",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["fixture"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.fixture.id",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.approved",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["fixture"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.fixture.id",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.approved",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.approvedBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.externalId",
          },
          {
            $ref: "#/parameters/rowFilter.fixture.tags",
          },
          {
            $ref: "#/parameters/body.fixture",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["fixture"],
      },
    },
    "/document": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.document.id",
          },
          {
            $ref: "#/parameters/rowFilter.document.path",
          },
          {
            $ref: "#/parameters/rowFilter.document.name",
          },
          {
            $ref: "#/parameters/rowFilter.document.description",
          },
          {
            $ref: "#/parameters/rowFilter.document.size",
          },
          {
            $ref: "#/parameters/rowFilter.document.extension",
          },
          {
            $ref: "#/parameters/rowFilter.document.type",
          },
          {
            $ref: "#/parameters/rowFilter.document.readGroups",
          },
          {
            $ref: "#/parameters/rowFilter.document.writeGroups",
          },
          {
            $ref: "#/parameters/rowFilter.document.active",
          },
          {
            $ref: "#/parameters/rowFilter.document.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.document.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.document.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.document.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.document.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.document.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.document.sourceDocumentId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/document",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["document"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.document",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["document"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.document.id",
          },
          {
            $ref: "#/parameters/rowFilter.document.path",
          },
          {
            $ref: "#/parameters/rowFilter.document.name",
          },
          {
            $ref: "#/parameters/rowFilter.document.description",
          },
          {
            $ref: "#/parameters/rowFilter.document.size",
          },
          {
            $ref: "#/parameters/rowFilter.document.extension",
          },
          {
            $ref: "#/parameters/rowFilter.document.type",
          },
          {
            $ref: "#/parameters/rowFilter.document.readGroups",
          },
          {
            $ref: "#/parameters/rowFilter.document.writeGroups",
          },
          {
            $ref: "#/parameters/rowFilter.document.active",
          },
          {
            $ref: "#/parameters/rowFilter.document.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.document.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.document.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.document.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.document.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.document.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.document.sourceDocumentId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["document"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.document.id",
          },
          {
            $ref: "#/parameters/rowFilter.document.path",
          },
          {
            $ref: "#/parameters/rowFilter.document.name",
          },
          {
            $ref: "#/parameters/rowFilter.document.description",
          },
          {
            $ref: "#/parameters/rowFilter.document.size",
          },
          {
            $ref: "#/parameters/rowFilter.document.extension",
          },
          {
            $ref: "#/parameters/rowFilter.document.type",
          },
          {
            $ref: "#/parameters/rowFilter.document.readGroups",
          },
          {
            $ref: "#/parameters/rowFilter.document.writeGroups",
          },
          {
            $ref: "#/parameters/rowFilter.document.active",
          },
          {
            $ref: "#/parameters/rowFilter.document.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.document.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.document.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.document.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.document.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.document.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.document.sourceDocumentId",
          },
          {
            $ref: "#/parameters/body.document",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["document"],
      },
    },
    "/receipts": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.receipts.id",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.receiptId",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.sourceDocument",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.sourceDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.sourceDocumentReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.externalDocumentId",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.status",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.postingDate",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.invoiced",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.receipts.locationName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/receipts",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["receipts"],
      },
    },
    "/attributeDataType": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.attributeDataType.id",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.label",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isBoolean",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isDate",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isList",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isNumeric",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isText",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isUser",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/attributeDataType",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["attributeDataType"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.attributeDataType",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["attributeDataType"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.attributeDataType.id",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.label",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isBoolean",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isDate",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isList",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isNumeric",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isText",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isUser",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["attributeDataType"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.attributeDataType.id",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.label",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isBoolean",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isDate",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isList",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isNumeric",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isText",
          },
          {
            $ref: "#/parameters/rowFilter.attributeDataType.isUser",
          },
          {
            $ref: "#/parameters/body.attributeDataType",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["attributeDataType"],
      },
    },
    "/quoteLine": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quoteRevisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.status",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.notes",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.additionalCharges",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.noQuoteReason",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/quoteLine",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["quoteLine"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.quoteLine",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["quoteLine"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quoteRevisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.status",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.notes",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.additionalCharges",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.noQuoteReason",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteLine"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.quoteLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quoteRevisionId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.status",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.estimatorId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customerPartId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customerPartRevision",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.notes",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.modelUploadId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.additionalCharges",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.noQuoteReason",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.taxPercent",
          },
          {
            $ref: "#/parameters/rowFilter.quoteLine.tags",
          },
          {
            $ref: "#/parameters/body.quoteLine",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["quoteLine"],
      },
    },
    "/jobMaterialWithMakeMethodId": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.id",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.jobId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.itemType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.methodType",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.order",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.description",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.scrapQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.unitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.unitCost",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.jobMakeMethodId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.estimatedQuantity",
          },
          {
            $ref: "#/parameters/rowFilter.jobMaterialWithMakeMethodId.jobMaterialMakeMethodId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/jobMaterialWithMakeMethodId",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["jobMaterialWithMakeMethodId"],
      },
    },
    "/currency": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.currency.id",
          },
          {
            $ref: "#/parameters/rowFilter.currency.code",
          },
          {
            $ref: "#/parameters/rowFilter.currency.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.currency.decimalPlaces",
          },
          {
            $ref: "#/parameters/rowFilter.currency.active",
          },
          {
            $ref: "#/parameters/rowFilter.currency.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.currency.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.currency.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.currency.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.currency.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.currency.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.currency.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/currency",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["currency"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.currency",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["currency"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.currency.id",
          },
          {
            $ref: "#/parameters/rowFilter.currency.code",
          },
          {
            $ref: "#/parameters/rowFilter.currency.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.currency.decimalPlaces",
          },
          {
            $ref: "#/parameters/rowFilter.currency.active",
          },
          {
            $ref: "#/parameters/rowFilter.currency.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.currency.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.currency.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.currency.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.currency.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.currency.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.currency.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["currency"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.currency.id",
          },
          {
            $ref: "#/parameters/rowFilter.currency.code",
          },
          {
            $ref: "#/parameters/rowFilter.currency.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.currency.decimalPlaces",
          },
          {
            $ref: "#/parameters/rowFilter.currency.active",
          },
          {
            $ref: "#/parameters/rowFilter.currency.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.currency.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.currency.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.currency.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.currency.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.currency.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.currency.tags",
          },
          {
            $ref: "#/parameters/body.currency",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["currency"],
      },
    },
    "/productionEvent": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.productionEvent.id",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.type",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.startTime",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.endTime",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.duration",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.notes",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/productionEvent",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["productionEvent"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.productionEvent",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["productionEvent"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.productionEvent.id",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.type",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.startTime",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.endTime",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.duration",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.notes",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["productionEvent"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.productionEvent.id",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.jobOperationId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.type",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.startTime",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.endTime",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.duration",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.workCenterId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.productionEvent.notes",
          },
          {
            $ref: "#/parameters/body.productionEvent",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["productionEvent"],
      },
    },
    "/accounts": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accounts.id",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.number",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.name",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.type",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.class",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountSubcategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.consolidatedRate",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.directPosting",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.active",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountCategory",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountSubCategory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/accounts",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["accounts"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.accounts",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["accounts"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accounts.id",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.number",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.name",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.type",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.class",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountSubcategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.consolidatedRate",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.directPosting",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.active",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountCategory",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountSubCategory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accounts"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.accounts.id",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.number",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.name",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.type",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.class",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountSubcategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.incomeBalance",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.consolidatedRate",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.directPosting",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.active",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountCategory",
          },
          {
            $ref: "#/parameters/rowFilter.accounts.accountSubCategory",
          },
          {
            $ref: "#/parameters/body.accounts",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["accounts"],
      },
    },
    "/supplierProcesses": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.processId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.minimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.leadTime",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcesses.processName",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierProcesses",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierProcesses"],
      },
    },
    "/postingGroupInventory": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.costOfGoodsSoldAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryInterimAccrualAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryReceivedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryInvoicedNotReceivedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryShippedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.workInProgressAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.directCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.overheadAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.overheadCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.purchaseVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryAdjustmentVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.materialVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.capacityVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/postingGroupInventory",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["postingGroupInventory"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.postingGroupInventory",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["postingGroupInventory"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.costOfGoodsSoldAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryInterimAccrualAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryReceivedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryInvoicedNotReceivedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryShippedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.workInProgressAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.directCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.overheadAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.overheadCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.purchaseVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryAdjustmentVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.materialVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.capacityVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["postingGroupInventory"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.id",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.itemPostingGroupId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.costOfGoodsSoldAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryInterimAccrualAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryReceivedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryInvoicedNotReceivedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryShippedNotInvoicedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.workInProgressAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.directCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.overheadAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.overheadCostAppliedAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.purchaseVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.inventoryAdjustmentVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.materialVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.capacityVarianceAccount",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.postingGroupInventory.updatedBy",
          },
          {
            $ref: "#/parameters/body.postingGroupInventory",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["postingGroupInventory"],
      },
    },
    "/userToCompany": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userToCompany.userId",
          },
          {
            $ref: "#/parameters/rowFilter.userToCompany.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.userToCompany.role",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/userToCompany",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["userToCompany"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.userToCompany",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["userToCompany"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userToCompany.userId",
          },
          {
            $ref: "#/parameters/rowFilter.userToCompany.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.userToCompany.role",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userToCompany"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userToCompany.userId",
          },
          {
            $ref: "#/parameters/rowFilter.userToCompany.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.userToCompany.role",
          },
          {
            $ref: "#/parameters/body.userToCompany",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userToCompany"],
      },
    },
    "/userAttribute": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttribute.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.name",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.sortOrder",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.userAttributeCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.attributeDataTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.listOptions",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.canSelfManage",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.active",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.updatedBy",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/userAttribute",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["userAttribute"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.userAttribute",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["userAttribute"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttribute.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.name",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.sortOrder",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.userAttributeCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.attributeDataTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.listOptions",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.canSelfManage",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.active",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.updatedBy",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userAttribute"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.userAttribute.id",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.name",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.sortOrder",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.userAttributeCategoryId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.attributeDataTypeId",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.listOptions",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.canSelfManage",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.active",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.userAttribute.updatedBy",
          },
          {
            $ref: "#/parameters/body.userAttribute",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["userAttribute"],
      },
    },
    "/supplierProcess": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierProcess.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.processId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.minimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.leadTime",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/supplierProcess",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["supplierProcess"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.supplierProcess",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["supplierProcess"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierProcess.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.processId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.minimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.leadTime",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierProcess"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.supplierProcess.id",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.supplierId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.processId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.minimumCost",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.leadTime",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.supplierProcess.tags",
          },
          {
            $ref: "#/parameters/body.supplierProcess",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["supplierProcess"],
      },
    },
    "/employee": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employee.id",
          },
          {
            $ref: "#/parameters/rowFilter.employee.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employee.employeeTypeId",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/employee",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["employee"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.employee",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["employee"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employee.id",
          },
          {
            $ref: "#/parameters/rowFilter.employee.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employee.employeeTypeId",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employee"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.employee.id",
          },
          {
            $ref: "#/parameters/rowFilter.employee.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.employee.employeeTypeId",
          },
          {
            $ref: "#/parameters/body.employee",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["employee"],
      },
    },
    "/itemPostingGroup": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.name",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.description",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.active",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/itemPostingGroup",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["itemPostingGroup"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.itemPostingGroup",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["itemPostingGroup"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.name",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.description",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.active",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemPostingGroup"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.id",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.name",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.description",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.active",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.itemPostingGroup.tags",
          },
          {
            $ref: "#/parameters/body.itemPostingGroup",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["itemPostingGroup"],
      },
    },
    "/department": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.department.id",
          },
          {
            $ref: "#/parameters/rowFilter.department.name",
          },
          {
            $ref: "#/parameters/rowFilter.department.parentDepartmentId",
          },
          {
            $ref: "#/parameters/rowFilter.department.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.department.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.department.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.department.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.department.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.department.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.department.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/department",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["department"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.department",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["department"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.department.id",
          },
          {
            $ref: "#/parameters/rowFilter.department.name",
          },
          {
            $ref: "#/parameters/rowFilter.department.parentDepartmentId",
          },
          {
            $ref: "#/parameters/rowFilter.department.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.department.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.department.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.department.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.department.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.department.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.department.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["department"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.department.id",
          },
          {
            $ref: "#/parameters/rowFilter.department.name",
          },
          {
            $ref: "#/parameters/rowFilter.department.parentDepartmentId",
          },
          {
            $ref: "#/parameters/rowFilter.department.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.department.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.department.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.department.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.department.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.department.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.department.tags",
          },
          {
            $ref: "#/parameters/body.department",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["department"],
      },
    },
    "/purchaseInvoiceLine": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.invoiceLineType",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseOrderLineId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.serviceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.inventoryUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.tags",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/purchaseInvoiceLine",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["purchaseInvoiceLine"],
      },
      post: {
        parameters: [
          {
            $ref: "#/parameters/body.purchaseInvoiceLine",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/preferPost",
          },
        ],
        responses: {
          "201": {
            description: "Created",
          },
        },
        tags: ["purchaseInvoiceLine"],
      },
      delete: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.invoiceLineType",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseOrderLineId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.serviceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.inventoryUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.tags",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoiceLine"],
      },
      patch: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.id",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.invoiceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.invoiceLineType",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseOrderLineId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.itemId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.itemReadableId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.serviceId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.shelfId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.accountNumber",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.assetId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.description",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.quantity",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.unitPrice",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.totalAmount",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.currencyCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.exchangeRate",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.inventoryUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.purchaseUnitOfMeasureCode",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.conversionFactor",
          },
          {
            $ref: "#/parameters/rowFilter.purchaseInvoiceLine.tags",
          },
          {
            $ref: "#/parameters/body.purchaseInvoiceLine",
          },
          {
            $ref: "#/parameters/preferReturn",
          },
        ],
        responses: {
          "204": {
            description: "No Content",
          },
        },
        tags: ["purchaseInvoiceLine"],
      },
    },
    "/salesRfqs": {
      get: {
        parameters: [
          {
            $ref: "#/parameters/rowFilter.salesRfqs.id",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.rfqId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.revisionId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.status",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.employeeId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.customerId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.customerContactId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.customerReference",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.rfqDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.expirationDate",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.locationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.assignee",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.companyId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.customFields",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.createdAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.createdBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.updatedAt",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.updatedBy",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.customerLocationId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.externalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.internalNotes",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.salesPersonId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.locationName",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.quoteId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.salesOrderId",
          },
          {
            $ref: "#/parameters/rowFilter.salesRfqs.favorite",
          },
          {
            $ref: "#/parameters/select",
          },
          {
            $ref: "#/parameters/order",
          },
          {
            $ref: "#/parameters/range",
          },
          {
            $ref: "#/parameters/rangeUnit",
          },
          {
            $ref: "#/parameters/offset",
          },
          {
            $ref: "#/parameters/limit",
          },
          {
            $ref: "#/parameters/preferCount",
          },
        ],
        responses: {
          "200": {
            description: "OK",
            schema: {
              items: {
                $ref: "#/definitions/salesRfqs",
              },
              type: "array",
            },
          },
          "206": {
            description: "Partial Content",
          },
        },
        tags: ["salesRfqs"],
      },
    },
    "/rpc/has_company_permission": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "claim",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "company",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_company_permission"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                claim: {
                  format: "text",
                  type: "string",
                },
                company: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["claim", "company"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_company_permission"],
      },
    },
    "/rpc/xid": {
      get: {
        parameters: [
          {
            format: "timestamp with time zone",
            in: "query",
            name: "_at",
            required: false,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _at: {
                  format: "timestamp with time zone",
                  type: "string",
                },
              },
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid"],
      },
    },
    "/rpc/journalLinesByAccountNumber": {
      get: {
        parameters: [
          {
            format: "date",
            in: "query",
            name: "from_date",
            required: false,
            type: "string",
          },
          {
            format: "date",
            in: "query",
            name: "to_date",
            required: false,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) journalLinesByAccountNumber"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                from_date: {
                  format: "date",
                  type: "string",
                },
                to_date: {
                  format: "date",
                  type: "string",
                },
              },
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) journalLinesByAccountNumber"],
      },
    },
    "/rpc/get_my_permission": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "claim",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_my_permission"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                claim: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["claim"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_my_permission"],
      },
    },
    "/rpc/get_next_sequence": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "sequence_name",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "company_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_next_sequence"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company_id: {
                  format: "text",
                  type: "string",
                },
                sequence_name: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["sequence_name", "company_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_next_sequence"],
      },
    },
    "/rpc/get_active_job_operations_by_location": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "location_id",
            required: true,
            type: "string",
          },
          {
            format: "text[]",
            in: "query",
            name: "work_center_ids",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_active_job_operations_by_location"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                location_id: {
                  format: "text",
                  type: "string",
                },
                work_center_ids: {
                  format: "text[]",
                  items: {
                    type: "string",
                  },
                  type: "array",
                },
              },
              required: ["location_id", "work_center_ids"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_active_job_operations_by_location"],
      },
    },
    "/rpc/jsonb_to_text_array": {
      get: {
        parameters: [
          {
            format: "jsonb",
            in: "query",
            name: "",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) jsonb_to_text_array"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                "": {
                  format: "jsonb",
                },
              },
              required: [""],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) jsonb_to_text_array"],
      },
    },
    "/rpc/xid_machine": {
      get: {
        parameters: [
          {
            format: "public.xid",
            in: "query",
            name: "_xid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_machine"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _xid: {
                  format: "public.xid",
                  type: "string",
                },
              },
              required: ["_xid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_machine"],
      },
    },
    "/rpc/has_role": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "required_role",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "company",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_role"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company: {
                  format: "text",
                  type: "string",
                },
                required_role: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["required_role", "company"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_role"],
      },
    },
    "/rpc/has_any_company_permission": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "claim",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_any_company_permission"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                claim: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["claim"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_any_company_permission"],
      },
    },
    "/rpc/get_job_operation_by_id": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "operation_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_operation_by_id"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                operation_id: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["operation_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_operation_by_id"],
      },
    },
    "/rpc/_xid_machine_id": {
      get: {
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) _xid_machine_id"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) _xid_machine_id"],
      },
    },
    "/rpc/get_job_methods_by_method_id": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "mid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_methods_by_method_id"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                mid: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["mid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_methods_by_method_id"],
      },
    },
    "/rpc/xid_encode": {
      get: {
        parameters: [
          {
            format: "integer[]",
            in: "query",
            name: "_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_encode"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _id: {
                  format: "integer[]",
                  items: {
                    type: "integer",
                  },
                  type: "array",
                },
              },
              required: ["_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_encode"],
      },
    },
    "/rpc/get_active_job_operations_by_employee": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "employee_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "company_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_active_job_operations_by_employee"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company_id: {
                  format: "text",
                  type: "string",
                },
                employee_id: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["employee_id", "company_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_active_job_operations_by_employee"],
      },
    },
    "/rpc/groups_query": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "_name",
            required: false,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "_uid",
            required: false,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) groups_query"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _name: {
                  format: "text",
                  type: "string",
                },
                _uid: {
                  format: "text",
                  type: "string",
                },
              },
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) groups_query"],
      },
    },
    "/rpc/get_claims": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "uid",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "company",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_claims"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company: {
                  format: "text",
                  type: "string",
                },
                uid: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["uid", "company"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_claims"],
      },
    },
    "/rpc/get_company_id_from_foreign_key": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "foreign_key",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "tbl",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_company_id_from_foreign_key"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                foreign_key: {
                  format: "text",
                  type: "string",
                },
                tbl: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["foreign_key", "tbl"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_company_id_from_foreign_key"],
      },
    },
    "/rpc/xid_time": {
      get: {
        parameters: [
          {
            format: "public.xid",
            in: "query",
            name: "_xid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_time"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _xid: {
                  format: "public.xid",
                  type: "string",
                },
              },
              required: ["_xid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_time"],
      },
    },
    "/rpc/xid_counter": {
      get: {
        parameters: [
          {
            format: "public.xid",
            in: "query",
            name: "_xid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_counter"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _xid: {
                  format: "public.xid",
                  type: "string",
                },
              },
              required: ["_xid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_counter"],
      },
    },
    "/rpc/has_valid_api_key_for_company": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "company",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_valid_api_key_for_company"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["company"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) has_valid_api_key_for_company"],
      },
    },
    "/rpc/xid_pid": {
      get: {
        parameters: [
          {
            format: "public.xid",
            in: "query",
            name: "_xid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_pid"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _xid: {
                  format: "public.xid",
                  type: "string",
                },
              },
              required: ["_xid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_pid"],
      },
    },
    "/rpc/xid_decode": {
      get: {
        parameters: [
          {
            format: "public.xid",
            in: "query",
            name: "_xid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_decode"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                _xid: {
                  format: "public.xid",
                  type: "string",
                },
              },
              required: ["_xid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) xid_decode"],
      },
    },
    "/rpc/groups_for_user": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "uid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) groups_for_user"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                uid: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["uid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) groups_for_user"],
      },
    },
    "/rpc/get_quote_methods": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "qid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_quote_methods"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                qid: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["qid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_quote_methods"],
      },
    },
    "/rpc/get_company_id_from_api_key": {
      get: {
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_company_id_from_api_key"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_company_id_from_api_key"],
      },
    },
    "/rpc/is_claims_admin": {
      get: {
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) is_claims_admin"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) is_claims_admin"],
      },
    },
    "/rpc/get_job_method": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "jid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_method"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                jid: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["jid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_method"],
      },
    },
    "/rpc/get_quote_methods_by_method_id": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "mid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_quote_methods_by_method_id"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                mid: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["mid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_quote_methods_by_method_id"],
      },
    },
    "/rpc/get_permission_companies": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "claim",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_permission_companies"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                claim: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["claim"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_permission_companies"],
      },
    },
    "/rpc/get_my_claim": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "claim",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_my_claim"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                claim: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["claim"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_my_claim"],
      },
    },
    "/rpc/create_rfq_from_model_v1": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "company_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "customer_part_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "email",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "model_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "sequence_number",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "unit_of_measure",
            required: true,
            type: "string",
          },
          {
            format: "json",
            in: "query",
            name: "notes",
            required: false,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) create_rfq_from_model_v1"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company_id: {
                  format: "text",
                  type: "string",
                },
                customer_part_id: {
                  format: "text",
                  type: "string",
                },
                email: {
                  format: "text",
                  type: "string",
                },
                model_id: {
                  format: "text",
                  type: "string",
                },
                notes: {
                  format: "json",
                },
                sequence_number: {
                  format: "text",
                  type: "string",
                },
                unit_of_measure: {
                  format: "text",
                  type: "string",
                },
              },
              required: [
                "company_id",
                "customer_part_id",
                "email",
                "model_id",
                "sequence_number",
                "unit_of_measure",
              ],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) create_rfq_from_model_v1"],
      },
    },
    "/rpc/create_rfq_from_models_v1": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "company_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "email",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "sequence_number",
            required: true,
            type: "string",
          },
          {
            format: "json[]",
            in: "query",
            name: "model_data",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) create_rfq_from_models_v1"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company_id: {
                  format: "text",
                  type: "string",
                },
                email: {
                  format: "text",
                  type: "string",
                },
                model_data: {
                  format: "json[]",
                  items: {},
                  type: "array",
                },
                sequence_number: {
                  format: "text",
                  type: "string",
                },
              },
              required: [
                "company_id",
                "email",
                "sequence_number",
                "model_data",
              ],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) create_rfq_from_models_v1"],
      },
    },
    "/rpc/get_item_quantities": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "location_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_item_quantities"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                location_id: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["location_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_item_quantities"],
      },
    },
    "/rpc/get_job_operations_by_work_center": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "work_center_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "location_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_operations_by_work_center"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                location_id: {
                  format: "text",
                  type: "string",
                },
                work_center_id: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["work_center_id", "location_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_job_operations_by_work_center"],
      },
    },
    "/rpc/get_method_tree": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "uid",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_method_tree"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                uid: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["uid"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_method_tree"],
      },
    },
    "/rpc/get_active_job_count": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "employee_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "company_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_active_job_count"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company_id: {
                  format: "text",
                  type: "string",
                },
                employee_id: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["employee_id", "company_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_active_job_count"],
      },
    },
    "/rpc/users_for_groups": {
      get: {
        parameters: [
          {
            format: "text[]",
            in: "query",
            name: "groups",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) users_for_groups"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                groups: {
                  format: "text[]",
                  items: {
                    type: "string",
                  },
                  type: "array",
                },
              },
              required: ["groups"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) users_for_groups"],
      },
    },
    "/rpc/get_recent_job_operations_by_employee": {
      get: {
        parameters: [
          {
            format: "text",
            in: "query",
            name: "employee_id",
            required: true,
            type: "string",
          },
          {
            format: "text",
            in: "query",
            name: "company_id",
            required: true,
            type: "string",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_recent_job_operations_by_employee"],
      },
      post: {
        parameters: [
          {
            in: "body",
            name: "args",
            required: true,
            schema: {
              properties: {
                company_id: {
                  format: "text",
                  type: "string",
                },
                employee_id: {
                  format: "text",
                  type: "string",
                },
              },
              required: ["employee_id", "company_id"],
              type: "object",
            },
          },
          {
            $ref: "#/parameters/preferParams",
          },
        ],
        produces: [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json",
        ],
        responses: {
          "200": {
            description: "OK",
          },
        },
        tags: ["(rpc) get_recent_job_operations_by_employee"],
      },
    },
  },
  definitions: {
    purchaseInvoiceStatusHistory: {
      required: ["id", "invoiceId", "status", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseInvoice.id`.<fk table='purchaseInvoice' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          enum: [
            "Draft",
            "Pending",
            "Submitted",
            "Return",
            "Debit Note Issued",
            "Paid",
            "Partially Paid",
            "Overdue",
            "Voided",
          ],
          format: 'public."purchaseInvoiceStatus"',
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    itemInventory: {
      required: [
        "id",
        "itemId",
        "companyId",
        "quantityOnHand",
        "quantityOnPurchase",
        "quantityOnSalesOrder",
        "quantityOnProductionOrder",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        quantityOnHand: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityOnPurchase: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityOnSalesOrder: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityOnProductionOrder: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    userPermission: {
      required: ["id"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        permissions: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    supplierAccount: {
      required: ["id", "supplierId", "companyId"],
      properties: {
        id: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    supplierType: {
      required: [
        "id",
        "name",
        "protected",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        protected: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    customerType: {
      required: [
        "id",
        "name",
        "protected",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        protected: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    shippingTerm: {
      required: ["id", "name", "active", "companyId", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    customerAccount: {
      required: ["id", "customerId", "companyId"],
      properties: {
        id: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    accountDefault: {
      required: [
        "companyId",
        "salesAccount",
        "salesDiscountAccount",
        "costOfGoodsSoldAccount",
        "purchaseAccount",
        "directCostAppliedAccount",
        "overheadCostAppliedAccount",
        "purchaseVarianceAccount",
        "inventoryAdjustmentVarianceAccount",
        "materialVarianceAccount",
        "capacityVarianceAccount",
        "overheadAccount",
        "maintenanceAccount",
        "assetDepreciationExpenseAccount",
        "assetGainsAndLossesAccount",
        "serviceChargeAccount",
        "interestAccount",
        "supplierPaymentDiscountAccount",
        "customerPaymentDiscountAccount",
        "roundingAccount",
        "assetAquisitionCostAccount",
        "assetAquisitionCostOnDisposalAccount",
        "accumulatedDepreciationAccount",
        "accumulatedDepreciationOnDisposalAccount",
        "inventoryAccount",
        "inventoryInterimAccrualAccount",
        "workInProgressAccount",
        "receivablesAccount",
        "inventoryShippedNotInvoicedAccount",
        "inventoryInvoicedNotReceivedAccount",
        "bankCashAccount",
        "bankLocalCurrencyAccount",
        "bankForeignCurrencyAccount",
        "prepaymentAccount",
        "payablesAccount",
        "inventoryReceivedNotInvoicedAccount",
        "salesTaxPayableAccount",
        "purchaseTaxPayableAccount",
        "reverseChargeSalesTaxPayableAccount",
        "retainedEarningsAccount",
      ],
      properties: {
        companyId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesAccount: {
          format: "text",
          type: "string",
        },
        salesDiscountAccount: {
          format: "text",
          type: "string",
        },
        costOfGoodsSoldAccount: {
          format: "text",
          type: "string",
        },
        purchaseAccount: {
          format: "text",
          type: "string",
        },
        directCostAppliedAccount: {
          format: "text",
          type: "string",
        },
        overheadCostAppliedAccount: {
          format: "text",
          type: "string",
        },
        purchaseVarianceAccount: {
          format: "text",
          type: "string",
        },
        inventoryAdjustmentVarianceAccount: {
          format: "text",
          type: "string",
        },
        materialVarianceAccount: {
          format: "text",
          type: "string",
        },
        capacityVarianceAccount: {
          format: "text",
          type: "string",
        },
        overheadAccount: {
          format: "text",
          type: "string",
        },
        maintenanceAccount: {
          format: "text",
          type: "string",
        },
        assetDepreciationExpenseAccount: {
          format: "text",
          type: "string",
        },
        assetGainsAndLossesAccount: {
          format: "text",
          type: "string",
        },
        serviceChargeAccount: {
          format: "text",
          type: "string",
        },
        interestAccount: {
          format: "text",
          type: "string",
        },
        supplierPaymentDiscountAccount: {
          format: "text",
          type: "string",
        },
        customerPaymentDiscountAccount: {
          format: "text",
          type: "string",
        },
        roundingAccount: {
          format: "text",
          type: "string",
        },
        assetAquisitionCostAccount: {
          format: "text",
          type: "string",
        },
        assetAquisitionCostOnDisposalAccount: {
          format: "text",
          type: "string",
        },
        accumulatedDepreciationAccount: {
          format: "text",
          type: "string",
        },
        accumulatedDepreciationOnDisposalAccount: {
          format: "text",
          type: "string",
        },
        inventoryAccount: {
          format: "text",
          type: "string",
        },
        inventoryInterimAccrualAccount: {
          format: "text",
          type: "string",
        },
        workInProgressAccount: {
          format: "text",
          type: "string",
        },
        receivablesAccount: {
          format: "text",
          type: "string",
        },
        inventoryShippedNotInvoicedAccount: {
          format: "text",
          type: "string",
        },
        inventoryInvoicedNotReceivedAccount: {
          format: "text",
          type: "string",
        },
        bankCashAccount: {
          format: "text",
          type: "string",
        },
        bankLocalCurrencyAccount: {
          format: "text",
          type: "string",
        },
        bankForeignCurrencyAccount: {
          format: "text",
          type: "string",
        },
        prepaymentAccount: {
          format: "text",
          type: "string",
        },
        payablesAccount: {
          format: "text",
          type: "string",
        },
        inventoryReceivedNotInvoicedAccount: {
          format: "text",
          type: "string",
        },
        salesTaxPayableAccount: {
          format: "text",
          type: "string",
        },
        purchaseTaxPayableAccount: {
          format: "text",
          type: "string",
        },
        reverseChargeSalesTaxPayableAccount: {
          format: "text",
          type: "string",
        },
        retainedEarningsAccount: {
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    service: {
      required: [
        "id",
        "serviceType",
        "approved",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        serviceType: {
          enum: ["Internal", "External"],
          format: 'public."serviceType"',
          type: "string",
        },
        approved: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        fromDate: {
          format: "date",
          type: "string",
        },
        toDate: {
          format: "date",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    employeeTypePermission: {
      required: [
        "employeeTypeId",
        "module",
        "create",
        "delete",
        "update",
        "view",
        "createdAt",
      ],
      properties: {
        employeeTypeId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `employeeType.id`.<fk table='employeeType' column='id'/>",
          format: "text",
          type: "string",
        },
        module: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          enum: [
            "Accounting",
            "Documents",
            "Invoicing",
            "Inventory",
            "Items",
            "Messaging",
            "Parts",
            "People",
            "Production",
            "Purchasing",
            "Resources",
            "Sales",
            "Settings",
            "Users",
          ],
          format: "public.module",
          type: "string",
        },
        create: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        delete: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        update: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        view: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    purchaseOrderPayment: {
      required: ["id", "paymentComplete", "companyId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierContactId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierContact.id`.<fk table='supplierContact' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentTermId: {
          description:
            "Note:\nThis is a Foreign Key to `paymentTerm.id`.<fk table='paymentTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentComplete: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    tag: {
      required: ["name", "table", "companyId", "createdAt", "createdBy"],
      properties: {
        name: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        table: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    holiday: {
      required: ["id", "name", "date", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        date: {
          format: "date",
          type: "string",
        },
        year: {
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp without time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp without time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    quotes: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          format: "integer",
          type: "integer",
        },
        dueDate: {
          format: "date",
          type: "string",
        },
        expirationDate: {
          format: "date",
          type: "string",
        },
        status: {
          enum: [
            "Draft",
            "Sent",
            "Ordered",
            "Partial",
            "Lost",
            "Cancelled",
            "Expired",
          ],
          format: 'public."quoteStatus"',
          type: "string",
        },
        salesPersonId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        estimatorId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        customerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        customerReference: {
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        externalNotes: {
          format: "json",
        },
        internalNotes: {
          format: "json",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        exchangeRateUpdatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalLinkId: {
          description:
            "Note:\nThis is a Foreign Key to `externalLink.id`.<fk table='externalLink' column='id'/>",
          format: "uuid",
          type: "string",
        },
        digitalQuoteAcceptedBy: {
          format: "text",
          type: "string",
        },
        digitalQuoteAcceptedByEmail: {
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        itemType: {
          enum: [
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."itemType"',
          type: "string",
        },
        locationName: {
          format: "text",
          type: "string",
        },
        lines: {
          format: "bigint",
          type: "integer",
        },
        completedLines: {
          format: "bigint",
          type: "integer",
        },
        favorite: {
          format: "boolean",
          type: "boolean",
        },
        salesRfqId: {
          description:
            "Note:\nThis is a Foreign Key to `salesRfq.id`.<fk table='salesRfq' column='id'/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingCost: {
          format: "numeric",
          type: "number",
        },
      },
      type: "object",
    },
    documentExtensions: {
      properties: {
        extension: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    customerPayment: {
      required: ["customerId", "companyId"],
      properties: {
        customerId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentTermId: {
          description:
            "Note:\nThis is a Foreign Key to `paymentTerm.id`.<fk table='paymentTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    postingGroupPurchasing: {
      required: [
        "id",
        "payablesAccount",
        "purchaseAccount",
        "purchaseDiscountAccount",
        "purchaseCreditAccount",
        "purchasePrepaymentAccount",
        "purchaseTaxPayableAccount",
        "companyId",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierType.id`.<fk table='supplierType' column='id'/>",
          format: "text",
          type: "string",
        },
        itemPostingGroupId: {
          description:
            "Note:\nThis is a Foreign Key to `itemPostingGroup.id`.<fk table='itemPostingGroup' column='id'/>",
          format: "text",
          type: "string",
        },
        payablesAccount: {
          format: "text",
          type: "string",
        },
        purchaseAccount: {
          format: "text",
          type: "string",
        },
        purchaseDiscountAccount: {
          format: "text",
          type: "string",
        },
        purchaseCreditAccount: {
          format: "text",
          type: "string",
        },
        purchasePrepaymentAccount: {
          format: "text",
          type: "string",
        },
        purchaseTaxPayableAccount: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    accountSubcategory: {
      required: [
        "id",
        "name",
        "accountCategoryId",
        "active",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        accountCategoryId: {
          description:
            "Note:\nThis is a Foreign Key to `accountCategory.id`.<fk table='accountCategory' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    material: {
      required: ["id", "approved", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        materialFormId: {
          description:
            "Note:\nThis is a Foreign Key to `materialForm.id`.<fk table='materialForm' column='id'/>",
          format: "text",
          type: "string",
        },
        materialSubstanceId: {
          description:
            "Note:\nThis is a Foreign Key to `materialSubstance.id`.<fk table='materialSubstance' column='id'/>",
          format: "text",
          type: "string",
        },
        grade: {
          format: "text",
          type: "string",
        },
        dimensions: {
          format: "text",
          type: "string",
        },
        finish: {
          format: "text",
          type: "string",
        },
        approved: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    supplierPayment: {
      required: ["supplierId", "companyId"],
      properties: {
        supplierId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierContactId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierContact.id`.<fk table='supplierContact' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentTermId: {
          description:
            "Note:\nThis is a Foreign Key to `paymentTerm.id`.<fk table='paymentTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    methodOperationTool: {
      required: [
        "id",
        "operationId",
        "toolId",
        "quantity",
        "companyId",
        "createdAt",
        "createdBy",
        "updatedAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        operationId: {
          description:
            "Note:\nThis is a Foreign Key to `methodOperation.id`.<fk table='methodOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        toolId: {
          description:
            "Note:\nThis is a Foreign Key to `tool.itemId`.<fk table='tool' column='itemId'/>",
          format: "text",
          type: "string",
        },
        quantity: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    currencyCode: {
      required: ["code", "name"],
      properties: {
        code: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    methodMaterial: {
      required: [
        "id",
        "makeMethodId",
        "methodType",
        "itemType",
        "itemId",
        "quantity",
        "unitOfMeasureCode",
        "companyId",
        "createdAt",
        "createdBy",
        "itemReadableId",
        "order",
        "scrapQuantity",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        makeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `makeMethod.id`.<fk table='makeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        methodType: {
          default: "Buy",
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        materialMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `makeMethod.id`.<fk table='makeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        itemType: {
          default: "Material",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric",
          type: "number",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        order: {
          default: 1,
          format: "double precision",
          type: "number",
        },
        methodOperationId: {
          description:
            "Note:\nThis is a Foreign Key to `methodOperation.id`.<fk table='methodOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        scrapQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        productionQuantity: {
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    processes: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        defaultStandardFactor: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        processType: {
          enum: ["Inside", "Outside", "Inside and Outside"],
          format: 'public."processType"',
          type: "string",
        },
        workCenters: {
          format: "jsonb",
        },
        suppliers: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    process: {
      required: [
        "id",
        "name",
        "defaultStandardFactor",
        "companyId",
        "createdBy",
        "createdAt",
        "processType",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        defaultStandardFactor: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        processType: {
          default: "Inside",
          enum: ["Inside", "Outside", "Inside and Outside"],
          format: 'public."processType"',
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    quoteMaterial: {
      required: [
        "id",
        "quoteId",
        "quoteLineId",
        "itemId",
        "itemReadableId",
        "itemType",
        "methodType",
        "order",
        "description",
        "quantity",
        "unitCost",
        "companyId",
        "createdAt",
        "createdBy",
        "quoteMakeMethodId",
        "scrapQuantity",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          default: "Part",
          format: "text",
          type: "string",
        },
        methodType: {
          default: "Make",
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        order: {
          default: 1,
          format: "double precision",
          type: "number",
        },
        description: {
          format: "text",
          type: "string",
        },
        quantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        unitCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        quoteMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteMakeMethod.id`.<fk table='quoteMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteOperationId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteOperation.id`.<fk table='quoteOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        scrapQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        productionQuantity: {
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    contractorAbility: {
      required: ["contractorId", "abilityId", "createdBy", "createdAt"],
      properties: {
        contractorId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `contractor.id`.<fk table='contractor' column='id'/>",
          format: "text",
          type: "string",
        },
        abilityId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `ability.id`.<fk table='ability' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    salesOrderLines: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        salesOrderLineType: {
          enum: [
            "Comment",
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
            "Fixed Asset",
          ],
          format: 'public."salesOrderLineType"',
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        accountNumber: {
          format: "text",
          type: "string",
        },
        assetId: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        saleQuantity: {
          format: "numeric",
          type: "number",
        },
        quantityToSend: {
          format: "numeric",
          type: "number",
        },
        quantitySent: {
          format: "numeric",
          type: "number",
        },
        quantityToInvoice: {
          format: "numeric",
          type: "number",
        },
        quantityInvoiced: {
          format: "numeric",
          type: "number",
        },
        unitPrice: {
          format: "numeric",
          type: "number",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        locationId: {
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        setupPrice: {
          format: "numeric",
          type: "number",
        },
        sentComplete: {
          format: "boolean",
          type: "boolean",
        },
        invoicedComplete: {
          format: "boolean",
          type: "boolean",
        },
        requiresInspection: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        status: {
          enum: ["Ordered", "In Progress", "Completed"],
          format: 'public."salesOrderLineStatus"',
          type: "string",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        promisedDate: {
          format: "date",
          type: "string",
        },
        addOnCost: {
          format: "numeric",
          type: "number",
        },
        methodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        convertedUnitPrice: {
          format: "numeric",
          type: "number",
        },
        convertedAddOnCost: {
          format: "numeric",
          type: "number",
        },
        shippingCost: {
          format: "numeric",
          type: "number",
        },
        convertedShippingCost: {
          format: "numeric",
          type: "number",
        },
        taxPercent: {
          format: "numeric",
          type: "number",
        },
        notes: {
          format: "jsonb",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        modelId: {
          format: "text",
          type: "string",
        },
        autodeskUrn: {
          format: "text",
          type: "string",
        },
        modelPath: {
          format: "text",
          type: "string",
        },
        modelName: {
          format: "text",
          type: "string",
        },
        modelSize: {
          format: "bigint",
          type: "integer",
        },
        unitCost: {
          format: "numeric",
          type: "number",
        },
        customerPartId: {
          format: "text",
          type: "string",
        },
        customerPartRevision: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    jobOperation: {
      required: [
        "id",
        "jobId",
        "order",
        "processId",
        "setupTime",
        "setupUnit",
        "laborTime",
        "laborUnit",
        "machineTime",
        "machineUnit",
        "operationOrder",
        "laborRate",
        "overheadRate",
        "operationType",
        "operationMinimumCost",
        "operationLeadTime",
        "operationUnitCost",
        "workInstruction",
        "companyId",
        "createdAt",
        "createdBy",
        "status",
        "priority",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobId: {
          description:
            "Note:\nThis is a Foreign Key to `job.id`.<fk table='job' column='id'/>",
          format: "text",
          type: "string",
        },
        jobMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `jobMakeMethod.id`.<fk table='jobMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        order: {
          default: 1,
          format: "double precision",
          type: "number",
        },
        processId: {
          description:
            "Note:\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        workCenterId: {
          description:
            "Note:\nThis is a Foreign Key to `workCenter.id`.<fk table='workCenter' column='id'/>",
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        setupTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        setupUnit: {
          default: "Total Hours",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        laborTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        laborUnit: {
          default: "Hours/Piece",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        machineTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        machineUnit: {
          default: "Hours/Piece",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        operationOrder: {
          default: "After Previous",
          enum: ["After Previous", "With Previous"],
          format: 'public."methodOperationOrder"',
          type: "string",
        },
        laborRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        overheadRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        machineRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        operationType: {
          default: "Inside",
          enum: ["Inside", "Outside"],
          format: 'public."operationType"',
          type: "string",
        },
        operationMinimumCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        operationLeadTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        operationUnitCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        operationSupplierProcessId: {
          format: "text",
          type: "string",
        },
        workInstruction: {
          format: "json",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        operationQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityComplete: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityScrapped: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityReworked: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        status: {
          default: "Todo",
          enum: [
            "Canceled",
            "Done",
            "In Progress",
            "Paused",
            "Ready",
            "Todo",
            "Waiting",
          ],
          format: 'public."jobOperationStatus"',
          type: "string",
        },
        priority: {
          default: 1,
          format: "double precision",
          type: "number",
        },
      },
      type: "object",
    },
    journalLine: {
      required: [
        "id",
        "journalId",
        "accountNumber",
        "amount",
        "quantity",
        "journalLineReference",
        "accrual",
        "companyId",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        journalId: {
          format: "integer",
          type: "integer",
        },
        accountNumber: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        amount: {
          format: "numeric",
          type: "number",
        },
        quantity: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        documentType: {
          enum: [
            "Receipt",
            "Invoice",
            "Credit Memo",
            "Blanket Order",
            "Return Order",
          ],
          format: 'public."journalLineDocumentType"',
          type: "string",
        },
        documentId: {
          format: "text",
          type: "string",
        },
        externalDocumentId: {
          format: "text",
          type: "string",
        },
        journalLineReference: {
          format: "text",
          type: "string",
        },
        documentLineReference: {
          format: "text",
          type: "string",
        },
        accrual: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    purchaseOrderLines: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        purchaseOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseOrder.id`.<fk table='purchaseOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        purchaseOrderLineType: {
          enum: [
            "Comment",
            "G/L Account",
            "Fixed Asset",
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."purchaseOrderLineType"',
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        accountNumber: {
          format: "text",
          type: "string",
        },
        assetId: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        purchaseQuantity: {
          format: "numeric",
          type: "number",
        },
        quantityToReceive: {
          format: "numeric",
          type: "number",
        },
        quantityReceived: {
          format: "numeric",
          type: "number",
        },
        quantityToInvoice: {
          format: "numeric",
          type: "number",
        },
        quantityInvoiced: {
          format: "numeric",
          type: "number",
        },
        unitPrice: {
          format: "numeric",
          type: "number",
        },
        inventoryUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        purchaseUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        locationId: {
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        setupPrice: {
          format: "numeric",
          type: "number",
        },
        receivedComplete: {
          format: "boolean",
          type: "boolean",
        },
        invoicedComplete: {
          format: "boolean",
          type: "boolean",
        },
        requiresInspection: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        conversionFactor: {
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        itemName: {
          format: "text",
          type: "string",
        },
        itemDescription: {
          format: "text",
          type: "string",
        },
        supplierPartId: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    materialForm: {
      required: ["id", "name", "createdBy", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    item: {
      required: [
        "id",
        "readableId",
        "name",
        "type",
        "replenishmentSystem",
        "itemTrackingType",
        "active",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        readableId: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        type: {
          enum: [
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."itemType"',
          type: "string",
        },
        replenishmentSystem: {
          default: "Buy",
          enum: ["Buy", "Make", "Buy and Make"],
          format: 'public."itemReplenishmentSystem"',
          type: "string",
        },
        defaultMethodType: {
          default: "Buy",
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        itemTrackingType: {
          enum: ["Inventory", "Non-Inventory"],
          format: 'public."itemTrackingType"',
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    receipt: {
      required: [
        "id",
        "receiptId",
        "status",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        receiptId: {
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        sourceDocument: {
          enum: [
            "Sales Order",
            "Sales Invoice",
            "Sales Return Order",
            "Purchase Order",
            "Purchase Invoice",
            "Purchase Return Order",
            "Inbound Transfer",
            "Outbound Transfer",
            "Manufacturing Consumption",
            "Manufacturing Output",
          ],
          format: 'public."receiptSourceDocument"',
          type: "string",
        },
        sourceDocumentId: {
          format: "text",
          type: "string",
        },
        sourceDocumentReadableId: {
          format: "text",
          type: "string",
        },
        externalDocumentId: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          default: "Draft",
          enum: ["Draft", "Pending", "Posted"],
          format: 'public."receiptStatus"',
          type: "string",
        },
        postingDate: {
          format: "date",
          type: "string",
        },
        invoiced: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    purchaseOrderTransaction: {
      required: ["id", "purchaseOrderId", "type", "userId", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        purchaseOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseOrder.id`.<fk table='purchaseOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        type: {
          enum: [
            "Edit",
            "Favorite",
            "Unfavorite",
            "Approved",
            "Reject",
            "Request Approval",
          ],
          format: 'public."purchaseOrderTransactionType"',
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    supplierLocation: {
      required: ["id", "supplierId", "addressId", "name"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        addressId: {
          description:
            "Note:\nThis is a Foreign Key to `address.id`.<fk table='address' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        name: {
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    contractor: {
      required: [
        "id",
        "hoursPerWeek",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        hoursPerWeek: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    jobOperationsWithMakeMethods: {
      properties: {
        makeMethodId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobId: {
          description:
            "Note:\nThis is a Foreign Key to `job.id`.<fk table='job' column='id'/>",
          format: "text",
          type: "string",
        },
        jobMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `jobMakeMethod.id`.<fk table='jobMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        order: {
          format: "double precision",
          type: "number",
        },
        processId: {
          description:
            "Note:\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        workCenterId: {
          description:
            "Note:\nThis is a Foreign Key to `workCenter.id`.<fk table='workCenter' column='id'/>",
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        setupTime: {
          format: "numeric",
          type: "number",
        },
        setupUnit: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        laborTime: {
          format: "numeric",
          type: "number",
        },
        laborUnit: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        machineTime: {
          format: "numeric",
          type: "number",
        },
        machineUnit: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        operationOrder: {
          enum: ["After Previous", "With Previous"],
          format: 'public."methodOperationOrder"',
          type: "string",
        },
        laborRate: {
          format: "numeric",
          type: "number",
        },
        overheadRate: {
          format: "numeric",
          type: "number",
        },
        machineRate: {
          format: "numeric",
          type: "number",
        },
        operationType: {
          enum: ["Inside", "Outside"],
          format: 'public."operationType"',
          type: "string",
        },
        operationMinimumCost: {
          format: "numeric",
          type: "number",
        },
        operationLeadTime: {
          format: "numeric",
          type: "number",
        },
        operationUnitCost: {
          format: "numeric",
          type: "number",
        },
        operationSupplierProcessId: {
          format: "text",
          type: "string",
        },
        workInstruction: {
          format: "json",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        operationQuantity: {
          format: "numeric",
          type: "number",
        },
        quantityComplete: {
          format: "numeric",
          type: "number",
        },
        quantityScrapped: {
          format: "numeric",
          type: "number",
        },
        quantityReworked: {
          format: "numeric",
          type: "number",
        },
        status: {
          enum: [
            "Canceled",
            "Done",
            "In Progress",
            "Paused",
            "Ready",
            "Todo",
            "Waiting",
          ],
          format: 'public."jobOperationStatus"',
          type: "string",
        },
      },
      type: "object",
    },
    customerLocation: {
      required: ["id", "customerId", "addressId", "name"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        addressId: {
          description:
            "Note:\nThis is a Foreign Key to `address.id`.<fk table='address' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        name: {
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    membership: {
      required: ["id", "groupId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "integer",
          type: "integer",
        },
        groupId: {
          description:
            "Note:\nThis is a Foreign Key to `group.id`.<fk table='group' column='id'/>",
          format: "text",
          type: "string",
        },
        memberGroupId: {
          description:
            "Note:\nThis is a Foreign Key to `group.id`.<fk table='group' column='id'/>",
          format: "text",
          type: "string",
        },
        memberUserId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    postingGroupSales: {
      required: [
        "id",
        "receivablesAccount",
        "salesAccount",
        "salesDiscountAccount",
        "salesCreditAccount",
        "salesPrepaymentAccount",
        "salesTaxPayableAccount",
        "companyId",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        customerTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `customerType.id`.<fk table='customerType' column='id'/>",
          format: "text",
          type: "string",
        },
        itemPostingGroupId: {
          description:
            "Note:\nThis is a Foreign Key to `itemPostingGroup.id`.<fk table='itemPostingGroup' column='id'/>",
          format: "text",
          type: "string",
        },
        receivablesAccount: {
          format: "text",
          type: "string",
        },
        salesAccount: {
          format: "text",
          type: "string",
        },
        salesDiscountAccount: {
          format: "text",
          type: "string",
        },
        salesCreditAccount: {
          format: "text",
          type: "string",
        },
        salesPrepaymentAccount: {
          format: "text",
          type: "string",
        },
        salesTaxPayableAccount: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    search: {
      required: ["id", "name", "link"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "bigint",
          type: "integer",
        },
        name: {
          format: "text",
          type: "string",
        },
        description: {
          default: "",
          format: "text",
          type: "string",
        },
        entity: {
          enum: [
            "Resource",
            "Person",
            "Customer",
            "Supplier",
            "Job",
            "Part",
            "Purchase Order",
            "Lead",
            "Opportunity",
            "Quotation",
            "Sales Order",
            "Request for Quotation",
            "Sales Invoice",
            "Purchase Invoice",
            "Document",
            "Sales RFQ",
            "Service",
            "Tool",
            "Consumable",
            "Material",
            "Fixture",
          ],
          format: 'public."searchEntity"',
          type: "string",
        },
        uuid: {
          format: "text",
          type: "string",
        },
        link: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        fts: {
          format: "tsvector",
          type: "string",
        },
      },
      type: "object",
    },
    journal: {
      required: ["id", "companyId", "postingDate", "createdAt"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "integer",
          type: "integer",
        },
        description: {
          format: "text",
          type: "string",
        },
        accountingPeriodId: {
          description:
            "Note:\nThis is a Foreign Key to `accountingPeriod.id`.<fk table='accountingPeriod' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        postingDate: {
          default: "CURRENT_DATE",
          format: "date",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    modules: {
      properties: {
        name: {
          enum: [
            "Accounting",
            "Documents",
            "Invoicing",
            "Inventory",
            "Items",
            "Messaging",
            "Parts",
            "People",
            "Production",
            "Purchasing",
            "Resources",
            "Sales",
            "Settings",
            "Users",
          ],
          format: "public.module",
          type: "string",
        },
      },
      type: "object",
    },
    employeesAcrossCompanies: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        email: {
          format: "text",
          type: "string",
        },
        firstName: {
          format: "text",
          type: "string",
        },
        lastName: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        avatarUrl: {
          format: "text",
          type: "string",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    purchaseInvoicePriceChange: {
      required: [
        "id",
        "invoiceId",
        "invoiceLineId",
        "previousPrice",
        "newPrice",
        "previousQuantity",
        "newQuantity",
        "updatedBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseInvoice.id`.<fk table='purchaseInvoice' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceLineId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseInvoiceLine.id`.<fk table='purchaseInvoiceLine' column='id'/>",
          format: "text",
          type: "string",
        },
        previousPrice: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        newPrice: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        previousQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        newQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    currencies: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        code: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        decimalPlaces: {
          format: "integer",
          type: "integer",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        name: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    shift: {
      required: [
        "id",
        "name",
        "startTime",
        "endTime",
        "locationId",
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        startTime: {
          format: "time without time zone",
          type: "string",
        },
        endTime: {
          format: "time without time zone",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        sunday: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        monday: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        tuesday: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        wednesday: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        thursday: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        friday: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        saturday: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp without time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp without time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    integration: {
      required: ["id", "jsonschema"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jsonschema: {
          format: "json",
        },
      },
      type: "object",
    },
    customFieldTables: {
      properties: {
        table: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        module: {
          enum: [
            "Accounting",
            "Documents",
            "Invoicing",
            "Inventory",
            "Items",
            "Messaging",
            "Parts",
            "People",
            "Production",
            "Purchasing",
            "Resources",
            "Sales",
            "Settings",
            "Users",
          ],
          format: "public.module",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        fields: {
          format: "json",
        },
      },
      type: "object",
    },
    documents: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        path: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        size: {
          format: "integer",
          type: "integer",
        },
        extension: {
          format: "text",
          type: "string",
        },
        type: {
          enum: [
            "Archive",
            "Document",
            "Presentation",
            "PDF",
            "Spreadsheet",
            "Text",
            "Image",
            "Video",
            "Audio",
            "Other",
            "Model",
          ],
          format: 'public."documentType"',
          type: "string",
        },
        readGroups: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        writeGroups: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        sourceDocument: {
          enum: [
            "Job",
            "Part",
            "Purchase Order",
            "Purchase Invoice",
            "Purchase Return Order",
            "Quote",
            "Receipt",
            "Request for Quote",
            "Sales Order",
            "Sales Invoice",
            "Sales Return Order",
            "Service",
            "Shipment",
            "Material",
            "Tool",
            "Fixture",
            "Consumable",
          ],
          format: 'public."documentSourceType"',
          type: "string",
        },
        sourceDocumentId: {
          format: "text",
          type: "string",
        },
        labels: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        favorite: {
          format: "boolean",
          type: "boolean",
        },
        lastActivityAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    companies: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        taxId: {
          format: "text",
          type: "string",
        },
        addressLine1: {
          format: "text",
          type: "string",
        },
        addressLine2: {
          format: "text",
          type: "string",
        },
        city: {
          format: "text",
          type: "string",
        },
        stateProvince: {
          format: "text",
          type: "string",
        },
        postalCode: {
          format: "text",
          type: "string",
        },
        countryCode: {
          format: "text",
          type: "string",
        },
        phone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        email: {
          format: "text",
          type: "string",
        },
        website: {
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        baseCurrencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        logoDarkIcon: {
          format: "text",
          type: "string",
        },
        logoLightIcon: {
          format: "text",
          type: "string",
        },
        logoDark: {
          format: "text",
          type: "string",
        },
        logoLight: {
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        role: {
          enum: ["customer", "employee", "supplier"],
          format: "public.role",
          type: "string",
        },
        employeeType: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    purchaseOrder: {
      required: [
        "id",
        "purchaseOrderId",
        "revisionId",
        "type",
        "status",
        "orderDate",
        "supplierId",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        purchaseOrderId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        type: {
          enum: ["Purchase", "Return"],
          format: 'public."purchaseOrderType"',
          type: "string",
        },
        status: {
          default: "Draft",
          enum: [
            "Draft",
            "To Review",
            "Rejected",
            "To Receive",
            "To Receive and Invoice",
            "To Invoice",
            "Completed",
            "Closed",
          ],
          format: 'public."purchaseOrderStatus"',
          type: "string",
        },
        orderDate: {
          default: "CURRENT_DATE",
          format: "date",
          type: "string",
        },
        notes: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierContactId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierContact.id`.<fk table='supplierContact' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierReference: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        closedAt: {
          format: "date",
          type: "string",
        },
        closedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        exchangeRateUpdatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    company: {
      required: ["id", "name", "baseCurrencyCode"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        taxId: {
          format: "text",
          type: "string",
        },
        addressLine1: {
          format: "text",
          type: "string",
        },
        addressLine2: {
          format: "text",
          type: "string",
        },
        city: {
          format: "text",
          type: "string",
        },
        stateProvince: {
          format: "text",
          type: "string",
        },
        postalCode: {
          format: "text",
          type: "string",
        },
        countryCode: {
          format: "text",
          type: "string",
        },
        phone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        email: {
          format: "text",
          type: "string",
        },
        website: {
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        baseCurrencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        logoDarkIcon: {
          format: "text",
          type: "string",
        },
        logoLightIcon: {
          format: "text",
          type: "string",
        },
        logoDark: {
          format: "text",
          type: "string",
        },
        logoLight: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    jobOperationTool: {
      required: [
        "id",
        "operationId",
        "toolId",
        "quantity",
        "companyId",
        "createdAt",
        "createdBy",
        "updatedAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        operationId: {
          description:
            "Note:\nThis is a Foreign Key to `jobOperation.id`.<fk table='jobOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        toolId: {
          description:
            "Note:\nThis is a Foreign Key to `tool.itemId`.<fk table='tool' column='itemId'/>",
          format: "text",
          type: "string",
        },
        quantity: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    userAttributeCategory: {
      required: ["id", "name", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        public: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        protected: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    salesOrderLine: {
      required: [
        "id",
        "salesOrderId",
        "salesOrderLineType",
        "sentComplete",
        "invoicedComplete",
        "requiresInspection",
        "companyId",
        "createdAt",
        "createdBy",
        "status",
        "addOnCost",
        "methodType",
        "shippingCost",
        "taxPercent",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        salesOrderLineType: {
          enum: [
            "Comment",
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
            "Fixed Asset",
          ],
          format: 'public."salesOrderLineType"',
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        accountNumber: {
          format: "text",
          type: "string",
        },
        assetId: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        saleQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityToSend: {
          format: "numeric",
          type: "number",
        },
        quantitySent: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityToInvoice: {
          format: "numeric",
          type: "number",
        },
        quantityInvoiced: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        unitPrice: {
          format: "numeric",
          type: "number",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        locationId: {
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        setupPrice: {
          format: "numeric",
          type: "number",
        },
        sentComplete: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        invoicedComplete: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        requiresInspection: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        status: {
          default: "Ordered",
          enum: ["Ordered", "In Progress", "Completed"],
          format: 'public."salesOrderLineStatus"',
          type: "string",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        promisedDate: {
          format: "date",
          type: "string",
        },
        addOnCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        methodType: {
          default: "Make",
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        exchangeRate: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        convertedUnitPrice: {
          format: "numeric",
          type: "number",
        },
        convertedAddOnCost: {
          format: "numeric",
          type: "number",
        },
        shippingCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        convertedShippingCost: {
          format: "numeric",
          type: "number",
        },
        taxPercent: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        notes: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    salesOrderTransaction: {
      required: ["id", "salesOrderId", "type", "userId", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        type: {
          enum: [
            "Edit",
            "Favorite",
            "Unfavorite",
            "Approved",
            "Reject",
            "Request Approval",
          ],
          format: 'public."salesOrderTransactionType"',
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    country: {
      required: ["name", "alpha2", "alpha3"],
      properties: {
        name: {
          format: "text",
          type: "string",
        },
        alpha2: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "character",
          maxLength: 2,
          type: "string",
        },
        alpha3: {
          format: "character",
          maxLength: 3,
          type: "string",
        },
      },
      type: "object",
    },
    jobMakeMethod: {
      required: [
        "id",
        "jobId",
        "itemId",
        "quantityPerParent",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobId: {
          description:
            "Note:\nThis is a Foreign Key to `job.id`.<fk table='job' column='id'/>",
          format: "text",
          type: "string",
        },
        parentMaterialId: {
          description:
            "Note:\nThis is a Foreign Key to `jobMaterial.id`.<fk table='jobMaterial' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        quantityPerParent: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    contact: {
      required: ["id", "email", "companyId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        firstName: {
          format: "text",
          type: "string",
        },
        lastName: {
          format: "text",
          type: "string",
        },
        email: {
          format: "text",
          type: "string",
        },
        title: {
          format: "text",
          type: "string",
        },
        mobilePhone: {
          format: "text",
          type: "string",
        },
        homePhone: {
          format: "text",
          type: "string",
        },
        workPhone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        fullName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    userDefaults: {
      properties: {
        userId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    jobMaterial: {
      required: [
        "id",
        "jobId",
        "itemId",
        "itemReadableId",
        "itemType",
        "methodType",
        "order",
        "description",
        "quantity",
        "scrapQuantity",
        "unitCost",
        "companyId",
        "createdAt",
        "createdBy",
        "jobMakeMethodId",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobId: {
          description:
            "Note:\nThis is a Foreign Key to `job.id`.<fk table='job' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          default: "Part",
          format: "text",
          type: "string",
        },
        methodType: {
          default: "Make",
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        order: {
          default: 1,
          format: "double precision",
          type: "number",
        },
        description: {
          format: "text",
          type: "string",
        },
        quantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        scrapQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        unitCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        jobMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `jobMakeMethod.id`.<fk table='jobMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        jobOperationId: {
          description:
            "Note:\nThis is a Foreign Key to `jobOperation.id`.<fk table='jobOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        estimatedQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        defaultShelf: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        quantityIssued: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityToIssue: {
          format: "numeric",
          type: "number",
        },
      },
      type: "object",
    },
    purchaseOrderSuppliers: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    workCenters: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        laborRate: {
          format: "numeric",
          type: "number",
        },
        defaultStandardFactor: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        requiredAbilityId: {
          description:
            "Note:\nThis is a Foreign Key to `ability.id`.<fk table='ability' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        machineRate: {
          format: "numeric",
          type: "number",
        },
        overheadRate: {
          format: "numeric",
          type: "number",
        },
        locationName: {
          format: "text",
          type: "string",
        },
        processes: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    costLedger: {
      required: [
        "id",
        "entryNumber",
        "postingDate",
        "itemLedgerType",
        "costLedgerType",
        "adjustment",
        "quantity",
        "cost",
        "costPostedToGL",
        "companyId",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        entryNumber: {
          format: "integer",
          type: "integer",
        },
        postingDate: {
          default: "CURRENT_DATE",
          format: "date",
          type: "string",
        },
        itemLedgerType: {
          enum: [
            "Purchase",
            "Sale",
            "Positive Adjmt.",
            "Negative Adjmt.",
            "Transfer",
            "Consumption",
            "Output",
            "Assembly Consumption",
            "Assembly Output",
          ],
          format: 'public."itemLedgerType"',
          type: "string",
        },
        costLedgerType: {
          enum: [
            "Direct Cost",
            "Revaluation",
            "Rounding",
            "Indirect Cost",
            "Variance",
            "Total",
          ],
          format: 'public."costLedgerType"',
          type: "string",
        },
        adjustment: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        documentType: {
          enum: [
            "Sales Shipment",
            "Sales Invoice",
            "Sales Return Receipt",
            "Sales Credit Memo",
            "Purchase Receipt",
            "Purchase Invoice",
            "Purchase Return Shipment",
            "Purchase Credit Memo",
            "Transfer Shipment",
            "Transfer Receipt",
            "Service Shipment",
            "Service Invoice",
            "Service Credit Memo",
            "Posted Assembly",
            "Inventory Receipt",
            "Inventory Shipment",
            "Direct Transfer",
            "Job Consumption",
            "Job Receipt",
          ],
          format: 'public."itemLedgerDocumentType"',
          type: "string",
        },
        documentId: {
          format: "text",
          type: "string",
        },
        externalDocumentId: {
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        quantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        cost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        costPostedToGL: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    purchaseOrderLine: {
      required: [
        "id",
        "purchaseOrderId",
        "purchaseOrderLineType",
        "receivedComplete",
        "invoicedComplete",
        "requiresInspection",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        purchaseOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseOrder.id`.<fk table='purchaseOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        purchaseOrderLineType: {
          enum: [
            "Comment",
            "G/L Account",
            "Fixed Asset",
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."purchaseOrderLineType"',
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        accountNumber: {
          format: "text",
          type: "string",
        },
        assetId: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        purchaseQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityToReceive: {
          format: "numeric",
          type: "number",
        },
        quantityReceived: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityToInvoice: {
          format: "numeric",
          type: "number",
        },
        quantityInvoiced: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        unitPrice: {
          format: "numeric",
          type: "number",
        },
        inventoryUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        purchaseUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        locationId: {
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        setupPrice: {
          format: "numeric",
          type: "number",
        },
        receivedComplete: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        invoicedComplete: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        requiresInspection: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        conversionFactor: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    salesOrderShipment: {
      required: ["id", "dropShipment", "companyId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingMethod.id`.<fk table='shippingMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingTermId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingTerm.id`.<fk table='shippingTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        receiptRequestedDate: {
          format: "date",
          type: "string",
        },
        receiptPromisedDate: {
          format: "date",
          type: "string",
        },
        deliveryDate: {
          format: "date",
          type: "string",
        },
        notes: {
          format: "text",
          type: "string",
        },
        trackingNumber: {
          format: "text",
          type: "string",
        },
        dropShipment: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierId: {
          format: "text",
          type: "string",
        },
        supplierLocationId: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
      },
      type: "object",
    },
    employeeSummary: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        avatarUrl: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        title: {
          format: "text",
          type: "string",
        },
        startDate: {
          format: "date",
          type: "string",
        },
        departmentName: {
          format: "text",
          type: "string",
        },
        locationName: {
          format: "text",
          type: "string",
        },
        managerName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    shelf: {
      required: [
        "id",
        "locationId",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
        "name",
      ],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        warehouseId: {
          description:
            "Note:\nThis is a Foreign Key to `warehouse.id`.<fk table='warehouse' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        name: {
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    supplierLedger: {
      required: [
        "id",
        "entryNumber",
        "postingDate",
        "supplierId",
        "amount",
        "companyId",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        entryNumber: {
          format: "integer",
          type: "integer",
        },
        postingDate: {
          default: "CURRENT_DATE",
          format: "date",
          type: "string",
        },
        documentType: {
          enum: [
            "Payment",
            "Invoice",
            "Credit Memo",
            "Finance Charge Memo",
            "Reminder",
            "Refund",
          ],
          format: 'public."supplierLedgerDocumentType"',
          type: "string",
        },
        documentId: {
          format: "text",
          type: "string",
        },
        externalDocumentId: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        amount: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    holidayYears: {
      properties: {
        year: {
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    itemUnitSalePrice: {
      required: [
        "itemId",
        "unitSalePrice",
        "currencyCode",
        "salesBlocked",
        "priceIncludesTax",
        "allowInvoiceDiscount",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        unitSalePrice: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        currencyCode: {
          format: "text",
          type: "string",
        },
        salesUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        salesBlocked: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        priceIncludesTax: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        allowInvoiceDiscount: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    job: {
      required: [
        "id",
        "jobId",
        "itemId",
        "unitOfMeasureCode",
        "locationId",
        "status",
        "deadlineType",
        "quantity",
        "scrapQuantity",
        "quantityComplete",
        "quantityShipped",
        "quantityReceivedToInventory",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobId: {
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          default: "Draft",
          enum: [
            "Draft",
            "Ready",
            "In Progress",
            "Paused",
            "Completed",
            "Cancelled",
          ],
          format: 'public."jobStatus"',
          type: "string",
        },
        dueDate: {
          format: "date",
          type: "string",
        },
        deadlineType: {
          default: "No Deadline",
          enum: ["No Deadline", "ASAP", "Soft Deadline", "Hard Deadline"],
          format: 'public."deadlineType"',
          type: "string",
        },
        quantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        scrapQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        productionQuantity: {
          format: "numeric",
          type: "number",
        },
        quantityComplete: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityShipped: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        quantityReceivedToInventory: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        salesOrderLineId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrderLine.id`.<fk table='salesOrderLine' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "jsonb",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    purchaseOrderFavorite: {
      required: ["purchaseOrderId", "userId"],
      properties: {
        purchaseOrderId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `purchaseOrder.id`.<fk table='purchaseOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    scrapReason: {
      required: ["id", "name", "companyId", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    consumables: {
      properties: {
        active: {
          format: "boolean",
          type: "boolean",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        defaultMethodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        itemTrackingType: {
          enum: ["Inventory", "Non-Inventory"],
          format: 'public."itemTrackingType"',
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        replenishmentSystem: {
          enum: ["Buy", "Make", "Buy and Make"],
          format: 'public."itemReplenishmentSystem"',
          type: "string",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "jsonb",
        },
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        approved: {
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        supplierIds: {
          format: "text",
          type: "string",
        },
        unitOfMeasure: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    quoteFavorite: {
      required: ["quoteId", "userId"],
      properties: {
        quoteId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    shifts: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        startTime: {
          format: "time without time zone",
          type: "string",
        },
        endTime: {
          format: "time without time zone",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        sunday: {
          format: "boolean",
          type: "boolean",
        },
        monday: {
          format: "boolean",
          type: "boolean",
        },
        tuesday: {
          format: "boolean",
          type: "boolean",
        },
        wednesday: {
          format: "boolean",
          type: "boolean",
        },
        thursday: {
          format: "boolean",
          type: "boolean",
        },
        friday: {
          format: "boolean",
          type: "boolean",
        },
        saturday: {
          format: "boolean",
          type: "boolean",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp without time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp without time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        locationName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    purchaseOrderLocations: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierName: {
          format: "text",
          type: "string",
        },
        supplierAddressLine1: {
          format: "text",
          type: "string",
        },
        supplierAddressLine2: {
          format: "text",
          type: "string",
        },
        supplierCity: {
          format: "text",
          type: "string",
        },
        supplierStateProvince: {
          format: "text",
          type: "string",
        },
        supplierPostalCode: {
          format: "text",
          type: "string",
        },
        supplierCountryCode: {
          description:
            "Note:\nThis is a Foreign Key to `country.alpha2`.<fk table='country' column='alpha2'/>",
          format: "text",
          type: "string",
        },
        supplierCountryName: {
          format: "text",
          type: "string",
        },
        deliveryName: {
          format: "text",
          type: "string",
        },
        deliveryAddressLine1: {
          format: "text",
          type: "string",
        },
        deliveryAddressLine2: {
          format: "text",
          type: "string",
        },
        deliveryCity: {
          format: "text",
          type: "string",
        },
        deliveryStateProvince: {
          format: "text",
          type: "string",
        },
        deliveryPostalCode: {
          format: "text",
          type: "string",
        },
        deliveryCountryCode: {
          format: "text",
          type: "string",
        },
        deliveryCountryName: {
          format: "text",
          type: "string",
        },
        dropShipment: {
          format: "boolean",
          type: "boolean",
        },
        customerName: {
          format: "text",
          type: "string",
        },
        customerAddressLine1: {
          format: "text",
          type: "string",
        },
        customerAddressLine2: {
          format: "text",
          type: "string",
        },
        customerCity: {
          format: "text",
          type: "string",
        },
        customerStateProvince: {
          format: "text",
          type: "string",
        },
        customerPostalCode: {
          format: "text",
          type: "string",
        },
        customerCountryCode: {
          description:
            "Note:\nThis is a Foreign Key to `country.alpha2`.<fk table='country' column='alpha2'/>",
          format: "text",
          type: "string",
        },
        customerCountryName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    quoteLines: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteRevisionId: {
          format: "integer",
          type: "integer",
        },
        status: {
          enum: ["Not Started", "In Progress", "Complete", "No Quote"],
          format: 'public."quoteLineStatus"',
          type: "string",
        },
        estimatorId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        customerPartId: {
          format: "text",
          type: "string",
        },
        customerPartRevision: {
          format: "text",
          type: "string",
        },
        methodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "json",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric[]",
          items: {
            type: "number",
          },
          type: "array",
        },
        additionalCharges: {
          format: "jsonb",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        noQuoteReason: {
          format: "text",
          type: "string",
        },
        taxPercent: {
          format: "numeric",
          type: "number",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        modelId: {
          format: "text",
          type: "string",
        },
        autodeskUrn: {
          format: "text",
          type: "string",
        },
        modelPath: {
          format: "text",
          type: "string",
        },
        modelName: {
          format: "text",
          type: "string",
        },
        modelSize: {
          format: "bigint",
          type: "integer",
        },
        unitCost: {
          format: "numeric",
          type: "number",
        },
      },
      type: "object",
    },
    customer: {
      required: ["id", "name", "companyId", "createdAt", "taxPercent"],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        customerTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `customerType.id`.<fk table='customerType' column='id'/>",
          format: "text",
          type: "string",
        },
        customerStatusId: {
          description:
            "Note:\nThis is a Foreign Key to `customerStatus.id`.<fk table='customerStatus' column='id'/>",
          format: "text",
          type: "string",
        },
        taxId: {
          format: "text",
          type: "string",
        },
        accountManagerId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        logo: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        phone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        website: {
          format: "text",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        taxPercent: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    note: {
      required: [
        "id",
        "documentId",
        "note",
        "noteRichText",
        "active",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        documentId: {
          format: "text",
          type: "string",
        },
        note: {
          format: "text",
          type: "string",
        },
        noteRichText: {
          format: "jsonb",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    workCenter: {
      required: [
        "id",
        "name",
        "laborRate",
        "defaultStandardFactor",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
        "machineRate",
        "overheadRate",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        laborRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        defaultStandardFactor: {
          default: "Minutes/Piece",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        requiredAbilityId: {
          description:
            "Note:\nThis is a Foreign Key to `ability.id`.<fk table='ability' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        machineRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        overheadRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    tool: {
      required: ["id", "approved", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        approved: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    accountCategories: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        category: {
          format: "text",
          type: "string",
        },
        class: {
          enum: ["Asset", "Liability", "Equity", "Revenue", "Expense"],
          format: 'public."glAccountClass"',
          type: "string",
        },
        incomeBalance: {
          enum: ["Balance Sheet", "Income Statement"],
          format: 'public."glIncomeBalance"',
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        subCategoriesCount: {
          format: "bigint",
          type: "integer",
        },
      },
      type: "object",
    },
    quotePayment: {
      required: ["id", "companyId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentTermId: {
          description:
            "Note:\nThis is a Foreign Key to `paymentTerm.id`.<fk table='paymentTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    accountCategory: {
      required: [
        "id",
        "category",
        "class",
        "incomeBalance",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        category: {
          format: "text",
          type: "string",
        },
        class: {
          enum: ["Asset", "Liability", "Equity", "Revenue", "Expense"],
          format: 'public."glAccountClass"',
          type: "string",
        },
        incomeBalance: {
          enum: ["Balance Sheet", "Income Statement"],
          format: 'public."glIncomeBalance"',
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    salesOrders: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          format: "integer",
          type: "integer",
        },
        status: {
          enum: [
            "Draft",
            "Needs Approval",
            "Confirmed",
            "In Progress",
            "Completed",
            "Invoiced",
            "Cancelled",
            "Closed",
          ],
          format: 'public."salesOrderStatus"',
          type: "string",
        },
        orderDate: {
          format: "date",
          type: "string",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        customerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        customerReference: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        closedAt: {
          format: "date",
          type: "string",
        },
        closedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        exchangeRateUpdatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalNotes: {
          format: "json",
        },
        internalNotes: {
          format: "json",
        },
        salesPersonId: {
          format: "text",
          type: "string",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        itemType: {
          enum: [
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."itemType"',
          type: "string",
        },
        orderTotal: {
          format: "numeric",
          type: "number",
        },
        jobs: {
          format: "json[]",
          items: {},
          type: "array",
        },
        shippingMethodName: {
          format: "text",
          type: "string",
        },
        shippingTermName: {
          format: "text",
          type: "string",
        },
        paymentTermName: {
          format: "text",
          type: "string",
        },
        receiptRequestedDate: {
          format: "date",
          type: "string",
        },
        receiptPromisedDate: {
          format: "date",
          type: "string",
        },
        dropShipment: {
          format: "boolean",
          type: "boolean",
        },
        shippingCost: {
          format: "numeric",
          type: "number",
        },
        locationName: {
          format: "text",
          type: "string",
        },
        favorite: {
          format: "boolean",
          type: "boolean",
        },
      },
      type: "object",
    },
    supplier: {
      required: ["id", "name", "companyId", "createdAt"],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        supplierTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierType.id`.<fk table='supplierType' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierStatusId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierStatus.id`.<fk table='supplierStatus' column='id'/>",
          format: "text",
          type: "string",
        },
        taxId: {
          format: "text",
          type: "string",
        },
        accountManagerId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        logo: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        phone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        website: {
          format: "text",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    customFieldTable: {
      required: ["table", "module", "name"],
      properties: {
        table: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        module: {
          enum: [
            "Accounting",
            "Documents",
            "Invoicing",
            "Inventory",
            "Items",
            "Messaging",
            "Parts",
            "People",
            "Production",
            "Purchasing",
            "Resources",
            "Sales",
            "Settings",
            "Users",
          ],
          format: "public.module",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    shippingMethod: {
      required: [
        "id",
        "name",
        "carrier",
        "active",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        carrier: {
          default: "Other",
          enum: ["UPS", "FedEx", "USPS", "DHL", "Other"],
          format: 'public."shippingCarrier"',
          type: "string",
        },
        carrierAccountId: {
          format: "text",
          type: "string",
        },
        trackingUrl: {
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    methodOperation: {
      required: [
        "id",
        "makeMethodId",
        "order",
        "operationOrder",
        "description",
        "companyId",
        "createdAt",
        "createdBy",
        "processId",
        "setupTime",
        "setupUnit",
        "laborTime",
        "laborUnit",
        "machineTime",
        "machineUnit",
        "operationType",
        "workInstruction",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        makeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `makeMethod.id`.<fk table='makeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        order: {
          default: 1,
          format: "double precision",
          type: "number",
        },
        operationOrder: {
          default: "After Previous",
          enum: ["After Previous", "With Previous"],
          format: 'public."methodOperationOrder"',
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        processId: {
          description:
            "Note:\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        workCenterId: {
          description:
            "Note:\nThis is a Foreign Key to `workCenter.id`.<fk table='workCenter' column='id'/>",
          format: "text",
          type: "string",
        },
        setupTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        setupUnit: {
          default: "Total Hours",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        laborTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        laborUnit: {
          default: "Hours/Piece",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        machineTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        machineUnit: {
          default: "Hours/Piece",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        operationType: {
          default: "Inside",
          enum: ["Inside", "Outside"],
          format: 'public."operationType"',
          type: "string",
        },
        operationSupplierProcessId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierProcess.id`.<fk table='supplierProcess' column='id'/>",
          format: "text",
          type: "string",
        },
        workInstruction: {
          format: "json",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    salesOrderPayment: {
      required: ["id", "paymentComplete", "companyId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceCustomerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentTermId: {
          description:
            "Note:\nThis is a Foreign Key to `paymentTerm.id`.<fk table='paymentTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentComplete: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    sequence: {
      required: ["id", "table", "name", "next", "size", "step", "companyId"],
      properties: {
        id: {
          format: "text",
          type: "string",
        },
        table: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        prefix: {
          format: "text",
          type: "string",
        },
        suffix: {
          format: "text",
          type: "string",
        },
        next: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        size: {
          default: 5,
          format: "integer",
          type: "integer",
        },
        step: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    oauthClient: {
      required: [
        "id",
        "name",
        "clientId",
        "clientSecret",
        "redirectUris",
        "companyId",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        clientId: {
          format: "text",
          type: "string",
        },
        clientSecret: {
          format: "text",
          type: "string",
        },
        redirectUris: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "CURRENT_TIMESTAMP",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedAt: {
          default: "CURRENT_TIMESTAMP",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    supplierPart: {
      required: [
        "id",
        "itemId",
        "supplierId",
        "conversionFactor",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierPartId: {
          format: "text",
          type: "string",
        },
        supplierUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        minimumOrderQuantity: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        conversionFactor: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        unitPrice: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    ability: {
      required: [
        "id",
        "name",
        "curve",
        "shadowWeeks",
        "active",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        curve: {
          format: "jsonb",
        },
        shadowWeeks: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    salesRfqLine: {
      required: [
        "id",
        "salesRfqId",
        "unitOfMeasureCode",
        "order",
        "companyId",
        "createdBy",
        "customerPartId",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesRfqId: {
          description:
            "Note:\nThis is a Foreign Key to `salesRfq.id`.<fk table='salesRfq' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric[]",
          items: {
            type: "number",
          },
          type: "array",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        order: {
          default: 0,
          format: "double precision",
          type: "number",
        },
        internalNotes: {
          format: "json",
        },
        externalNotes: {
          format: "json",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        customerPartId: {
          format: "text",
          type: "string",
        },
        customerPartRevision: {
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    purchaseInvoice: {
      required: [
        "id",
        "invoiceId",
        "status",
        "currencyCode",
        "exchangeRate",
        "subtotal",
        "totalDiscount",
        "totalAmount",
        "totalTax",
        "balance",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceId: {
          format: "text",
          type: "string",
        },
        status: {
          default: "Draft",
          enum: [
            "Draft",
            "Pending",
            "Submitted",
            "Return",
            "Debit Note Issued",
            "Paid",
            "Partially Paid",
            "Overdue",
            "Voided",
          ],
          format: 'public."purchaseInvoiceStatus"',
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierReference: {
          format: "text",
          type: "string",
        },
        invoiceSupplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceSupplierContactId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierContact.id`.<fk table='supplierContact' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentTermId: {
          description:
            "Note:\nThis is a Foreign Key to `paymentTerm.id`.<fk table='paymentTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        currencyCode: {
          format: "text",
          type: "string",
        },
        exchangeRate: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        postingDate: {
          format: "date",
          type: "string",
        },
        dateIssued: {
          format: "date",
          type: "string",
        },
        dateDue: {
          format: "date",
          type: "string",
        },
        datePaid: {
          format: "date",
          type: "string",
        },
        subtotal: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        totalDiscount: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        totalAmount: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        totalTax: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        balance: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    customerStatus: {
      required: ["id", "name", "companyId", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    quoteMakeMethod: {
      required: [
        "id",
        "quoteId",
        "quoteLineId",
        "itemId",
        "quantityPerParent",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        parentMaterialId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteMaterial.id`.<fk table='quoteMaterial' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        quantityPerParent: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    employees: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        email: {
          format: "text",
          type: "string",
        },
        firstName: {
          format: "text",
          type: "string",
        },
        lastName: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        avatarUrl: {
          format: "text",
          type: "string",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        employeeTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `employeeType.id`.<fk table='employeeType' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    quoteOperationsWithMakeMethods: {
      properties: {
        makeMethodId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteMakeMethod.id`.<fk table='quoteMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        order: {
          format: "double precision",
          type: "number",
        },
        description: {
          format: "text",
          type: "string",
        },
        operationOrder: {
          enum: ["After Previous", "With Previous"],
          format: 'public."methodOperationOrder"',
          type: "string",
        },
        laborRate: {
          format: "numeric",
          type: "number",
        },
        overheadRate: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        processId: {
          description:
            "Note:\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        workCenterId: {
          description:
            "Note:\nThis is a Foreign Key to `workCenter.id`.<fk table='workCenter' column='id'/>",
          format: "text",
          type: "string",
        },
        setupTime: {
          format: "numeric",
          type: "number",
        },
        setupUnit: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        laborTime: {
          format: "numeric",
          type: "number",
        },
        laborUnit: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        machineTime: {
          format: "numeric",
          type: "number",
        },
        machineUnit: {
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        machineRate: {
          format: "numeric",
          type: "number",
        },
        operationType: {
          enum: ["Inside", "Outside"],
          format: 'public."operationType"',
          type: "string",
        },
        operationMinimumCost: {
          format: "numeric",
          type: "number",
        },
        operationLeadTime: {
          format: "numeric",
          type: "number",
        },
        operationUnitCost: {
          format: "numeric",
          type: "number",
        },
        operationSupplierProcessId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierProcess.id`.<fk table='supplierProcess' column='id'/>",
          format: "text",
          type: "string",
        },
        workInstruction: {
          format: "json",
        },
      },
      type: "object",
    },
    oauthToken: {
      required: [
        "id",
        "accessToken",
        "refreshToken",
        "clientId",
        "userId",
        "companyId",
        "expiresAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        accessToken: {
          format: "text",
          type: "string",
        },
        refreshToken: {
          format: "text",
          type: "string",
        },
        clientId: {
          description:
            "Note:\nThis is a Foreign Key to `oauthClient.clientId`.<fk table='oauthClient' column='clientId'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "CURRENT_TIMESTAMP",
          format: "timestamp with time zone",
          type: "string",
        },
        expiresAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    supplierStatus: {
      required: ["id", "name", "companyId", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    terms: {
      required: ["id"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        purchasingTerms: {
          format: "json",
        },
        salesTerms: {
          format: "json",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    employeeShift: {
      required: ["id", "employeeId", "shiftId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        employeeId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        shiftId: {
          description:
            "Note:\nThis is a Foreign Key to `shift.id`.<fk table='shift' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    quote: {
      required: [
        "id",
        "quoteId",
        "revisionId",
        "status",
        "customerId",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        dueDate: {
          format: "date",
          type: "string",
        },
        expirationDate: {
          format: "date",
          type: "string",
        },
        status: {
          default: "Draft",
          enum: [
            "Draft",
            "Sent",
            "Ordered",
            "Partial",
            "Lost",
            "Cancelled",
            "Expired",
          ],
          format: 'public."quoteStatus"',
          type: "string",
        },
        salesPersonId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        estimatorId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        customerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        customerReference: {
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        externalNotes: {
          format: "json",
        },
        internalNotes: {
          format: "json",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        exchangeRateUpdatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalLinkId: {
          description:
            "Note:\nThis is a Foreign Key to `externalLink.id`.<fk table='externalLink' column='id'/>",
          format: "uuid",
          type: "string",
        },
        digitalQuoteAcceptedBy: {
          format: "text",
          type: "string",
        },
        digitalQuoteAcceptedByEmail: {
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    user: {
      required: ["id", "email", "firstName", "lastName", "about", "createdAt"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        email: {
          format: "text",
          type: "string",
        },
        firstName: {
          format: "text",
          type: "string",
        },
        lastName: {
          format: "text",
          type: "string",
        },
        fullName: {
          format: "text",
          type: "string",
        },
        about: {
          default: "",
          format: "text",
          type: "string",
        },
        avatarUrl: {
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        developer: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        admin: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
      },
      type: "object",
    },
    quoteShipment: {
      required: ["id", "companyId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingMethod.id`.<fk table='shippingMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingTermId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingTerm.id`.<fk table='shippingTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        receiptRequestedDate: {
          format: "date",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        shippingCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
      },
      type: "object",
    },
    modelUpload: {
      required: ["id", "modelPath", "companyId", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        size: {
          format: "bigint",
          type: "integer",
        },
        modelPath: {
          format: "text",
          type: "string",
        },
        autodeskUrn: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    purchaseOrderStatusHistory: {
      required: ["id", "purchaseOrderId", "status", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        purchaseOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseOrder.id`.<fk table='purchaseOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          enum: [
            "Draft",
            "To Review",
            "Rejected",
            "To Receive",
            "To Receive and Invoice",
            "To Invoice",
            "Completed",
            "Closed",
          ],
          format: 'public."purchaseOrderStatus"',
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    contractors: {
      properties: {
        supplierContactId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        hoursPerWeek: {
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        supplierId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierName: {
          format: "text",
          type: "string",
        },
        fullName: {
          format: "text",
          type: "string",
        },
        firstName: {
          format: "text",
          type: "string",
        },
        lastName: {
          format: "text",
          type: "string",
        },
        email: {
          format: "text",
          type: "string",
        },
        abilityIds: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    salesOrderStatusHistory: {
      required: ["id", "salesOrderId", "status", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          enum: [
            "Draft",
            "Needs Approval",
            "Confirmed",
            "In Progress",
            "Completed",
            "Invoiced",
            "Cancelled",
            "Closed",
          ],
          format: 'public."salesOrderStatus"',
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    jobs: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobId: {
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          enum: [
            "Draft",
            "Ready",
            "In Progress",
            "Paused",
            "Completed",
            "Cancelled",
          ],
          format: 'public."jobStatus"',
          type: "string",
        },
        dueDate: {
          format: "date",
          type: "string",
        },
        deadlineType: {
          enum: ["No Deadline", "ASAP", "Soft Deadline", "Hard Deadline"],
          format: 'public."deadlineType"',
          type: "string",
        },
        quantity: {
          format: "numeric",
          type: "number",
        },
        scrapQuantity: {
          format: "numeric",
          type: "number",
        },
        productionQuantity: {
          format: "numeric",
          type: "number",
        },
        quantityComplete: {
          format: "numeric",
          type: "number",
        },
        quantityShipped: {
          format: "numeric",
          type: "number",
        },
        quantityReceivedToInventory: {
          format: "numeric",
          type: "number",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        salesOrderLineId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrderLine.id`.<fk table='salesOrderLine' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "jsonb",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        name: {
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          enum: [
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."itemType"',
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        itemTrackingType: {
          enum: ["Inventory", "Non-Inventory"],
          format: 'public."itemTrackingType"',
          type: "string",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        replenishmentSystem: {
          enum: ["Buy", "Make", "Buy and Make"],
          format: 'public."itemReplenishmentSystem"',
          type: "string",
        },
        modelId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        autodeskUrn: {
          format: "text",
          type: "string",
        },
        modelPath: {
          format: "text",
          type: "string",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        modelName: {
          format: "text",
          type: "string",
        },
        modelSize: {
          format: "bigint",
          type: "integer",
        },
        salesOrderReadableId: {
          format: "text",
          type: "string",
        },
        quoteReadableId: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    customField: {
      required: [
        "id",
        "name",
        "sortOrder",
        "table",
        "dataTypeId",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        sortOrder: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        table: {
          description:
            "Note:\nThis is a Foreign Key to `customFieldTable.table`.<fk table='customFieldTable' column='table'/>",
          format: "text",
          type: "string",
        },
        dataTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `attributeDataType.id`.<fk table='attributeDataType' column='id'/>",
          format: "integer",
          type: "integer",
        },
        listOptions: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    quoteCustomerDetails: {
      properties: {
        quoteId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        customerName: {
          format: "text",
          type: "string",
        },
        contactName: {
          format: "text",
          type: "string",
        },
        contactEmail: {
          format: "text",
          type: "string",
        },
        customerAddressLine1: {
          format: "text",
          type: "string",
        },
        customerAddressLine2: {
          format: "text",
          type: "string",
        },
        customerCity: {
          format: "text",
          type: "string",
        },
        customerStateProvince: {
          format: "text",
          type: "string",
        },
        customerPostalCode: {
          format: "text",
          type: "string",
        },
        customerCountryCode: {
          description:
            "Note:\nThis is a Foreign Key to `country.alpha2`.<fk table='country' column='alpha2'/>",
          format: "text",
          type: "string",
        },
        customerCountryName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    pickMethod: {
      required: ["itemId", "locationId", "companyId", "createdBy", "createdAt"],
      properties: {
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        defaultShelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    group: {
      required: [
        "id",
        "name",
        "isIdentityGroup",
        "isEmployeeTypeGroup",
        "isCustomerOrgGroup",
        "isCustomerTypeGroup",
        "isSupplierTypeGroup",
        "isSupplierOrgGroup",
        "createdAt",
      ],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        isIdentityGroup: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isEmployeeTypeGroup: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isCustomerOrgGroup: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isCustomerTypeGroup: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isSupplierTypeGroup: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isSupplierOrgGroup: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    parts: {
      properties: {
        active: {
          format: "boolean",
          type: "boolean",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        defaultMethodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        itemTrackingType: {
          enum: ["Inventory", "Non-Inventory"],
          format: 'public."itemTrackingType"',
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        replenishmentSystem: {
          enum: ["Buy", "Make", "Buy and Make"],
          format: 'public."itemReplenishmentSystem"',
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "jsonb",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        modelId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        autodeskUrn: {
          format: "text",
          type: "string",
        },
        modelPath: {
          format: "text",
          type: "string",
        },
        modelName: {
          format: "text",
          type: "string",
        },
        modelSize: {
          format: "bigint",
          type: "integer",
        },
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        approved: {
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        fromDate: {
          format: "date",
          type: "string",
        },
        toDate: {
          format: "date",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        supplierIds: {
          format: "text",
          type: "string",
        },
        unitOfMeasure: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    receiptLine: {
      required: [
        "id",
        "receiptId",
        "itemId",
        "orderQuantity",
        "outstandingQuantity",
        "receivedQuantity",
        "unitOfMeasure",
        "unitPrice",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        receiptId: {
          description:
            "Note:\nThis is a Foreign Key to `receipt.id`.<fk table='receipt' column='id'/>",
          format: "text",
          type: "string",
        },
        lineId: {
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        orderQuantity: {
          format: "numeric",
          type: "number",
        },
        outstandingQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        receivedQuantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        unitOfMeasure: {
          format: "text",
          type: "string",
        },
        unitPrice: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        conversionFactor: {
          default: 1,
          format: "numeric",
          type: "number",
        },
      },
      type: "object",
    },
    quoteLinePrice: {
      required: [
        "quoteId",
        "quoteLineId",
        "quantity",
        "leadTime",
        "discountPercent",
        "createdAt",
        "createdBy",
        "unitPrice",
        "shippingCost",
      ],
      properties: {
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        quantity: {
          default: 1,
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "numeric",
          type: "number",
        },
        leadTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        discountPercent: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        unitPrice: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        exchangeRate: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        convertedUnitPrice: {
          format: "numeric",
          type: "number",
        },
        netUnitPrice: {
          format: "numeric",
          type: "number",
        },
        convertedNetUnitPrice: {
          format: "numeric",
          type: "number",
        },
        netExtendedPrice: {
          format: "numeric",
          type: "number",
        },
        convertedNetExtendedPrice: {
          format: "numeric",
          type: "number",
        },
        shippingCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        convertedShippingCost: {
          format: "numeric",
          type: "number",
        },
      },
      type: "object",
    },
    makeMethod: {
      required: ["id", "itemId", "companyId", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    groups: {
      properties: {
        id: {
          format: "text",
          type: "string",
        },
        isEmployeeTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        isCustomerOrgGroup: {
          format: "boolean",
          type: "boolean",
        },
        isCustomerTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        isSupplierOrgGroup: {
          format: "boolean",
          type: "boolean",
        },
        isSupplierTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        parentId: {
          format: "text",
          type: "string",
        },
        users: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    purchaseOrderDelivery: {
      required: ["id", "dropShipment", "companyId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingMethod.id`.<fk table='shippingMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingTermId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingTerm.id`.<fk table='shippingTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        receiptRequestedDate: {
          format: "date",
          type: "string",
        },
        receiptPromisedDate: {
          format: "date",
          type: "string",
        },
        deliveryDate: {
          format: "date",
          type: "string",
        },
        notes: {
          format: "text",
          type: "string",
        },
        trackingNumber: {
          format: "text",
          type: "string",
        },
        dropShipment: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    warehouse: {
      required: [
        "id",
        "name",
        "locationId",
        "requiresPick",
        "requiresPutAway",
        "requiresBin",
        "requiresReceive",
        "requiresShipment",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        requiresPick: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        requiresPutAway: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        requiresBin: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        requiresReceive: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        requiresShipment: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    itemLedger: {
      required: [
        "id",
        "entryNumber",
        "postingDate",
        "entryType",
        "itemId",
        "quantity",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        entryNumber: {
          format: "integer",
          type: "integer",
        },
        postingDate: {
          default: "CURRENT_DATE",
          format: "date",
          type: "string",
        },
        entryType: {
          enum: [
            "Purchase",
            "Sale",
            "Positive Adjmt.",
            "Negative Adjmt.",
            "Transfer",
            "Consumption",
            "Output",
            "Assembly Consumption",
            "Assembly Output",
          ],
          format: 'public."itemLedgerType"',
          type: "string",
        },
        documentType: {
          enum: [
            "Sales Shipment",
            "Sales Invoice",
            "Sales Return Receipt",
            "Sales Credit Memo",
            "Purchase Receipt",
            "Purchase Invoice",
            "Purchase Return Shipment",
            "Purchase Credit Memo",
            "Transfer Shipment",
            "Transfer Receipt",
            "Service Shipment",
            "Service Invoice",
            "Service Credit Memo",
            "Posted Assembly",
            "Inventory Receipt",
            "Inventory Shipment",
            "Direct Transfer",
            "Job Consumption",
            "Job Receipt",
          ],
          format: 'public."itemLedgerDocumentType"',
          type: "string",
        },
        documentId: {
          format: "text",
          type: "string",
        },
        externalDocumentId: {
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          default: "system",
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        documentLineId: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    salesRfqFavorite: {
      required: ["rfqId", "userId"],
      properties: {
        rfqId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `salesRfq.id`.<fk table='salesRfq' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    externalLink: {
      required: ["id", "documentType", "documentId", "createdAt", "companyId"],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "uuid",
          type: "string",
        },
        documentType: {
          enum: ["Quote"],
          format: 'public."externalLinkDocumentType"',
          type: "string",
        },
        documentId: {
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        expiresAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    quoteOperationTool: {
      required: [
        "id",
        "operationId",
        "toolId",
        "quantity",
        "companyId",
        "createdAt",
        "createdBy",
        "updatedAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        operationId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteOperation.id`.<fk table='quoteOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        toolId: {
          description:
            "Note:\nThis is a Foreign Key to `tool.itemId`.<fk table='tool' column='itemId'/>",
          format: "text",
          type: "string",
        },
        quantity: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    supplierContact: {
      required: ["id", "supplierId", "contactId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        contactId: {
          description:
            "Note:\nThis is a Foreign Key to `contact.id`.<fk table='contact' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    integrations: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jsonschema: {
          format: "json",
        },
        companyId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        metadata: {
          format: "json",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
      },
      type: "object",
    },
    groups_recursive: {
      properties: {
        groupId: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        parentId: {
          format: "text",
          type: "string",
        },
        isIdentityGroup: {
          format: "boolean",
          type: "boolean",
        },
        isEmployeeTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        isCustomerOrgGroup: {
          format: "boolean",
          type: "boolean",
        },
        isCustomerTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        isSupplierOrgGroup: {
          format: "boolean",
          type: "boolean",
        },
        isSupplierTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        user: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    purchaseInvoices: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceId: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierReference: {
          format: "text",
          type: "string",
        },
        invoiceSupplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        postingDate: {
          format: "date",
          type: "string",
        },
        dateIssued: {
          format: "date",
          type: "string",
        },
        dateDue: {
          format: "date",
          type: "string",
        },
        datePaid: {
          format: "date",
          type: "string",
        },
        paymentTermId: {
          description:
            "Note:\nThis is a Foreign Key to `paymentTerm.id`.<fk table='paymentTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        currencyCode: {
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        subtotal: {
          format: "numeric",
          type: "number",
        },
        totalDiscount: {
          format: "numeric",
          type: "number",
        },
        totalAmount: {
          format: "numeric",
          type: "number",
        },
        totalTax: {
          format: "numeric",
          type: "number",
        },
        balance: {
          format: "numeric",
          type: "number",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          enum: [
            "Draft",
            "Pending",
            "Submitted",
            "Return",
            "Debit Note Issued",
            "Paid",
            "Partially Paid",
            "Overdue",
            "Voided",
          ],
          format: 'public."purchaseInvoiceStatus"',
          type: "string",
        },
        paymentTermName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    customerContact: {
      required: ["id", "customerId", "contactId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        contactId: {
          description:
            "Note:\nThis is a Foreign Key to `contact.id`.<fk table='contact' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    accountingPeriod: {
      required: [
        "id",
        "startDate",
        "endDate",
        "status",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        startDate: {
          format: "date",
          type: "string",
        },
        endDate: {
          format: "date",
          type: "string",
        },
        status: {
          default: "Inactive",
          enum: ["Inactive", "Active"],
          format: 'public."accountingPeriodStatus"',
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        closedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        closedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    purchaseInvoicePaymentRelation: {
      required: ["id", "invoiceId", "paymentId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseInvoice.id`.<fk table='purchaseInvoice' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentId: {
          description:
            "Note:\nThis is a Foreign Key to `purchasePayment.id`.<fk table='purchasePayment' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    itemPlanning: {
      required: [
        "itemId",
        "locationId",
        "reorderingPolicy",
        "critical",
        "safetyStockQuantity",
        "safetyStockLeadTime",
        "demandAccumulationPeriod",
        "demandReschedulingPeriod",
        "demandAccumulationIncludesInventory",
        "reorderPoint",
        "reorderQuantity",
        "reorderMaximumInventory",
        "minimumOrderQuantity",
        "maximumOrderQuantity",
        "orderMultiple",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        reorderingPolicy: {
          default: "Demand-Based Reorder",
          enum: [
            "Manual Reorder",
            "Demand-Based Reorder",
            "Fixed Reorder Quantity",
            "Maximum Quantity",
          ],
          format: 'public."itemReorderingPolicy"',
          type: "string",
        },
        critical: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        safetyStockQuantity: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        safetyStockLeadTime: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        demandAccumulationPeriod: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        demandReschedulingPeriod: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        demandAccumulationIncludesInventory: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        reorderPoint: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        reorderQuantity: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        reorderMaximumInventory: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        minimumOrderQuantity: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        maximumOrderQuantity: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        orderMultiple: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    employeeJob: {
      required: ["id", "companyId"],
      properties: {
        id: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shiftId: {
          description:
            "Note:\nThis is a Foreign Key to `shift.id`.<fk table='shift' column='id'/>",
          format: "text",
          type: "string",
        },
        managerId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        title: {
          format: "text",
          type: "string",
        },
        startDate: {
          format: "date",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp without time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        departmentId: {
          description:
            "Note:\nThis is a Foreign Key to `department.id`.<fk table='department' column='id'/>",
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    account: {
      required: [
        "id",
        "number",
        "name",
        "type",
        "incomeBalance",
        "directPosting",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        number: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        type: {
          enum: ["Posting", "Total", "Begin Total", "End Total"],
          format: 'public."glAccountType"',
          type: "string",
        },
        class: {
          enum: ["Asset", "Liability", "Equity", "Revenue", "Expense"],
          format: 'public."glAccountClass"',
          type: "string",
        },
        accountCategoryId: {
          description:
            "Note:\nThis is a Foreign Key to `accountCategory.id`.<fk table='accountCategory' column='id'/>",
          format: "text",
          type: "string",
        },
        accountSubcategoryId: {
          format: "text",
          type: "string",
        },
        incomeBalance: {
          enum: ["Balance Sheet", "Income Statement"],
          format: 'public."glIncomeBalance"',
          type: "string",
        },
        consolidatedRate: {
          enum: ["Average", "Current", "Historical"],
          format: 'public."glConsolidatedRate"',
          type: "string",
        },
        directPosting: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    companyIntegration: {
      required: ["id", "metadata", "companyId", "active", "updatedAt"],
      properties: {
        id: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `integration.id`.<fk table='integration' column='id'/>",
          format: "text",
          type: "string",
        },
        metadata: {
          format: "json",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        updatedAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    salesRfqLines: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesRfqId: {
          description:
            "Note:\nThis is a Foreign Key to `salesRfq.id`.<fk table='salesRfq' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric[]",
          items: {
            type: "number",
          },
          type: "array",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        order: {
          format: "double precision",
          type: "number",
        },
        internalNotes: {
          format: "json",
        },
        externalNotes: {
          format: "json",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        customerPartId: {
          format: "text",
          type: "string",
        },
        customerPartRevision: {
          format: "text",
          type: "string",
        },
        modelId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        autodeskUrn: {
          format: "text",
          type: "string",
        },
        modelPath: {
          format: "text",
          type: "string",
        },
        modelName: {
          format: "text",
          type: "string",
        },
        modelSize: {
          format: "bigint",
          type: "integer",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        itemName: {
          format: "text",
          type: "string",
        },
        methodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          enum: [
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."itemType"',
          type: "string",
        },
      },
      type: "object",
    },
    companySettings: {
      required: [
        "id",
        "digitalQuoteEnabled",
        "digitalQuoteNotificationGroup",
        "digitalQuoteIncludesPurchaseOrders",
      ],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        digitalQuoteEnabled: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        digitalQuoteNotificationGroup: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        digitalQuoteIncludesPurchaseOrders: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
      },
      type: "object",
    },
    externalLinkMessage: {
      required: ["id", "externalLinkId", "message", "createdAt", "companyId"],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "uuid",
          type: "string",
        },
        externalLinkId: {
          description:
            "Note:\nThis is a Foreign Key to `externalLink.id`.<fk table='externalLink' column='id'/>",
          format: "uuid",
          type: "string",
        },
        message: {
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    jobFavorite: {
      required: ["jobId", "userId"],
      properties: {
        jobId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `job.id`.<fk table='job' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    documentTransaction: {
      required: ["id", "documentId", "type", "userId", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        documentId: {
          description:
            "Note:\nThis is a Foreign Key to `document.id`.<fk table='document' column='id'/>",
          format: "text",
          type: "string",
        },
        type: {
          enum: [
            "Download",
            "Edit",
            "Favorite",
            "Label",
            "Unfavorite",
            "Upload",
          ],
          format: 'public."documentTransactionType"',
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    materialSubstance: {
      required: ["id", "name", "createdBy", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    workCenterProcess: {
      required: [
        "workCenterId",
        "processId",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        workCenterId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `workCenter.id`.<fk table='workCenter' column='id'/>",
          format: "text",
          type: "string",
        },
        processId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    partners: {
      properties: {
        id: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        hoursPerWeek: {
          format: "integer",
          type: "integer",
        },
        abilityId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `ability.id`.<fk table='ability' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        supplierLocationId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        abilityName: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierName: {
          format: "text",
          type: "string",
        },
        city: {
          format: "text",
          type: "string",
        },
        state: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    consumable: {
      required: ["id", "approved", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        approved: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    location: {
      required: [
        "id",
        "name",
        "addressLine1",
        "city",
        "stateProvince",
        "postalCode",
        "timezone",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        addressLine1: {
          format: "text",
          type: "string",
        },
        addressLine2: {
          format: "text",
          type: "string",
        },
        city: {
          format: "text",
          type: "string",
        },
        stateProvince: {
          format: "text",
          type: "string",
        },
        postalCode: {
          format: "text",
          type: "string",
        },
        countryCode: {
          format: "text",
          type: "string",
        },
        timezone: {
          format: "text",
          type: "string",
        },
        latitude: {
          format: "numeric",
          type: "number",
        },
        longitude: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp without time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp without time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    employeeAbility: {
      required: [
        "id",
        "employeeId",
        "abilityId",
        "active",
        "trainingDays",
        "companyId",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        employeeId: {
          format: "text",
          type: "string",
        },
        abilityId: {
          description:
            "Note:\nThis is a Foreign Key to `ability.id`.<fk table='ability' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        lastTrainingDate: {
          format: "date",
          type: "string",
        },
        trainingDays: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        trainingCompleted: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    quoteOperation: {
      required: [
        "id",
        "quoteId",
        "quoteLineId",
        "order",
        "operationOrder",
        "laborRate",
        "overheadRate",
        "companyId",
        "createdAt",
        "createdBy",
        "processId",
        "setupTime",
        "setupUnit",
        "laborTime",
        "laborUnit",
        "machineTime",
        "machineUnit",
        "operationType",
        "operationMinimumCost",
        "operationLeadTime",
        "operationUnitCost",
        "workInstruction",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteMakeMethod.id`.<fk table='quoteMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        order: {
          default: 1,
          format: "double precision",
          type: "number",
        },
        description: {
          format: "text",
          type: "string",
        },
        operationOrder: {
          default: "After Previous",
          enum: ["After Previous", "With Previous"],
          format: 'public."methodOperationOrder"',
          type: "string",
        },
        laborRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        overheadRate: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        processId: {
          description:
            "Note:\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        workCenterId: {
          description:
            "Note:\nThis is a Foreign Key to `workCenter.id`.<fk table='workCenter' column='id'/>",
          format: "text",
          type: "string",
        },
        setupTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        setupUnit: {
          default: "Total Hours",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        laborTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        laborUnit: {
          default: "Hours/Piece",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        machineTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        machineUnit: {
          default: "Hours/Piece",
          enum: [
            "Hours/Piece",
            "Hours/100 Pieces",
            "Hours/1000 Pieces",
            "Minutes/Piece",
            "Minutes/100 Pieces",
            "Minutes/1000 Pieces",
            "Pieces/Hour",
            "Pieces/Minute",
            "Seconds/Piece",
            "Total Hours",
            "Total Minutes",
          ],
          format: "public.factor",
          type: "string",
        },
        machineRate: {
          format: "numeric",
          type: "number",
        },
        operationType: {
          default: "Inside",
          enum: ["Inside", "Outside"],
          format: 'public."operationType"',
          type: "string",
        },
        operationMinimumCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        operationLeadTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        operationUnitCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        operationSupplierProcessId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierProcess.id`.<fk table='supplierProcess' column='id'/>",
          format: "text",
          type: "string",
        },
        workInstruction: {
          format: "json",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    salesRfq: {
      required: ["id", "rfqId", "revisionId", "status", "rfqDate", "companyId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        rfqId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        status: {
          default: "Draft",
          enum: ["Draft", "Ready for Quote", "Closed", "Quoted"],
          format: 'public."salesRfqStatus"',
          type: "string",
        },
        employeeId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        customerReference: {
          format: "text",
          type: "string",
        },
        rfqDate: {
          default: "CURRENT_DATE",
          format: "date",
          type: "string",
        },
        expirationDate: {
          format: "date",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        externalNotes: {
          format: "json",
        },
        internalNotes: {
          format: "json",
        },
        salesPersonId: {
          format: "text",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    paymentTerm: {
      required: [
        "id",
        "name",
        "daysDue",
        "daysDiscount",
        "discountPercentage",
        "calculationMethod",
        "active",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        daysDue: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        daysDiscount: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        discountPercentage: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        calculationMethod: {
          default: "Net",
          enum: ["Net", "End of Month", "Day of Month"],
          format: 'public."paymentTermCalculationMethod"',
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    apiKey: {
      required: ["id", "name", "key", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        key: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    salesOrderCustomers: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    opportunity: {
      required: ["id", "companyId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesRfqId: {
          description:
            "Note:\nThis is a Foreign Key to `salesRfq.id`.<fk table='salesRfq' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        purchaseOrderDocumentPath: {
          format: "text",
          type: "string",
        },
        requestForQuoteDocumentPath: {
          format: "text",
          type: "string",
        },
        salesRfqCompletedDate: {
          format: "timestamp with time zone",
          type: "string",
        },
        quoteCompletedDate: {
          format: "timestamp with time zone",
          type: "string",
        },
        salesOrderCompletedDate: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    documentLabels: {
      properties: {
        label: {
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    groupMembers: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "integer",
          type: "integer",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        isIdentityGroup: {
          format: "boolean",
          type: "boolean",
        },
        isEmployeeTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        isCustomerOrgGroup: {
          format: "boolean",
          type: "boolean",
        },
        isCustomerTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        isSupplierOrgGroup: {
          format: "boolean",
          type: "boolean",
        },
        isSupplierTypeGroup: {
          format: "boolean",
          type: "boolean",
        },
        groupId: {
          description:
            "Note:\nThis is a Foreign Key to `group.id`.<fk table='group' column='id'/>",
          format: "text",
          type: "string",
        },
        memberGroupId: {
          description:
            "Note:\nThis is a Foreign Key to `group.id`.<fk table='group' column='id'/>",
          format: "text",
          type: "string",
        },
        memberUserId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        user: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    salesOrder: {
      required: [
        "id",
        "salesOrderId",
        "revisionId",
        "status",
        "orderDate",
        "currencyCode",
        "customerId",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        status: {
          default: "Draft",
          enum: [
            "Draft",
            "Needs Approval",
            "Confirmed",
            "In Progress",
            "Completed",
            "Invoiced",
            "Cancelled",
            "Closed",
          ],
          format: 'public."salesOrderStatus"',
          type: "string",
        },
        orderDate: {
          default: "CURRENT_DATE",
          format: "date",
          type: "string",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        customerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        customerReference: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        closedAt: {
          format: "date",
          type: "string",
        },
        closedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        exchangeRateUpdatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalNotes: {
          format: "json",
        },
        internalNotes: {
          format: "json",
        },
        salesPersonId: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    userAttributeValue: {
      required: ["id", "userAttributeId", "userId", "createdAt", "createdBy"],
      properties: {
        id: {
          default: "public.xid()",
          format: "text",
          type: "string",
        },
        userAttributeId: {
          description:
            "Note:\nThis is a Foreign Key to `userAttribute.id`.<fk table='userAttribute' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        valueBoolean: {
          format: "boolean",
          type: "boolean",
        },
        valueDate: {
          format: "date",
          type: "string",
        },
        valueNumeric: {
          format: "numeric",
          type: "number",
        },
        valueText: {
          format: "text",
          type: "string",
        },
        valueUser: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    unitOfMeasure: {
      required: [
        "id",
        "code",
        "name",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        code: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    documentFavorite: {
      required: ["documentId", "userId"],
      properties: {
        documentId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `document.id`.<fk table='document' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    partner: {
      required: [
        "id",
        "hoursPerWeek",
        "abilityId",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        hoursPerWeek: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        abilityId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `ability.id`.<fk table='ability' column='id'/>",
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    address: {
      required: ["id", "companyId"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        addressLine1: {
          format: "text",
          type: "string",
        },
        addressLine2: {
          format: "text",
          type: "string",
        },
        city: {
          format: "text",
          type: "string",
        },
        stateProvince: {
          format: "text",
          type: "string",
        },
        postalCode: {
          format: "text",
          type: "string",
        },
        countryCode: {
          description:
            "Note:\nThis is a Foreign Key to `country.alpha2`.<fk table='country' column='alpha2'/>",
          format: "text",
          type: "string",
        },
        phone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    part: {
      required: [
        "id",
        "itemId",
        "approved",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        approved: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        fromDate: {
          format: "date",
          type: "string",
        },
        toDate: {
          format: "date",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    customerPartToItem: {
      required: ["customerId", "customerPartId", "itemId", "companyId", "id"],
      properties: {
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerPartId: {
          format: "text",
          type: "string",
        },
        customerPartRevision: {
          default: "",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    materials: {
      properties: {
        active: {
          format: "boolean",
          type: "boolean",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        defaultMethodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        itemTrackingType: {
          enum: ["Inventory", "Non-Inventory"],
          format: 'public."itemTrackingType"',
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        replenishmentSystem: {
          enum: ["Buy", "Make", "Buy and Make"],
          format: 'public."itemReplenishmentSystem"',
          type: "string",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "jsonb",
        },
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        materialFormId: {
          description:
            "Note:\nThis is a Foreign Key to `materialForm.id`.<fk table='materialForm' column='id'/>",
          format: "text",
          type: "string",
        },
        materialSubstanceId: {
          description:
            "Note:\nThis is a Foreign Key to `materialSubstance.id`.<fk table='materialSubstance' column='id'/>",
          format: "text",
          type: "string",
        },
        grade: {
          format: "text",
          type: "string",
        },
        dimensions: {
          format: "text",
          type: "string",
        },
        finish: {
          format: "text",
          type: "string",
        },
        approved: {
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        materialForm: {
          format: "text",
          type: "string",
        },
        materialSubstance: {
          format: "text",
          type: "string",
        },
        supplierIds: {
          format: "text",
          type: "string",
        },
        unitOfMeasure: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    employeeType: {
      required: ["id", "name", "companyId", "protected", "createdAt"],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        protected: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    itemReplenishment: {
      required: [
        "itemId",
        "purchasingLeadTime",
        "conversionFactor",
        "purchasingBlocked",
        "manufacturingBlocked",
        "requiresConfiguration",
        "companyId",
        "createdBy",
        "createdAt",
        "scrapPercentage",
      ],
      properties: {
        itemId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        preferredSupplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        purchasingLeadTime: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        purchasingUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        conversionFactor: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        purchasingBlocked: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        manufacturingBlocked: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        requiresConfiguration: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        lotSize: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        scrapPercentage: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    documentLabel: {
      required: ["documentId", "userId", "label"],
      properties: {
        documentId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `document.id`.<fk table='document' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        label: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    supplierShipping: {
      required: ["supplierId", "companyId"],
      properties: {
        supplierId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        shippingSupplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingSupplierLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingSupplierContactId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierContact.id`.<fk table='supplierContact' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingTermId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingTerm.id`.<fk table='shippingTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingMethod.id`.<fk table='shippingMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    productionQuantity: {
      required: [
        "id",
        "jobOperationId",
        "type",
        "quantity",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobOperationId: {
          description:
            "Note:\nThis is a Foreign Key to `jobOperation.id`.<fk table='jobOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        type: {
          default: "Production",
          enum: ["Rework", "Scrap", "Production"],
          format: 'public."productionQuantityType"',
          type: "string",
        },
        quantity: {
          format: "integer",
          type: "integer",
        },
        setupProductionEventId: {
          description:
            "Note:\nThis is a Foreign Key to `productionEvent.id`.<fk table='productionEvent' column='id'/>",
          format: "text",
          type: "string",
        },
        laborProductionEventId: {
          description:
            "Note:\nThis is a Foreign Key to `productionEvent.id`.<fk table='productionEvent' column='id'/>",
          format: "text",
          type: "string",
        },
        machineProductionEventId: {
          description:
            "Note:\nThis is a Foreign Key to `productionEvent.id`.<fk table='productionEvent' column='id'/>",
          format: "text",
          type: "string",
        },
        notes: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
        scrapReasonId: {
          description:
            "Note:\nThis is a Foreign Key to `scrapReason.id`.<fk table='scrapReason' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    customerShipping: {
      required: ["customerId", "companyId"],
      properties: {
        customerId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        shippingCustomerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingCustomerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingCustomerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingTermId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingTerm.id`.<fk table='shippingTerm' column='id'/>",
          format: "text",
          type: "string",
        },
        shippingMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `shippingMethod.id`.<fk table='shippingMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    fiscalYearSettings: {
      required: ["companyId", "startMonth", "taxStartMonth", "updatedBy"],
      properties: {
        companyId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        startMonth: {
          default: "January",
          enum: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
          format: "public.month",
          type: "string",
        },
        taxStartMonth: {
          default: "January",
          enum: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
          format: "public.month",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    itemCost: {
      required: [
        "itemId",
        "costingMethod",
        "standardCost",
        "unitCost",
        "costIsAdjusted",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemPostingGroupId: {
          description:
            "Note:\nThis is a Foreign Key to `itemPostingGroup.id`.<fk table='itemPostingGroup' column='id'/>",
          format: "text",
          type: "string",
        },
        costingMethod: {
          enum: ["Standard", "Average", "LIFO", "FIFO"],
          format: 'public."itemCostingMethod"',
          type: "string",
        },
        standardCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        unitCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        costIsAdjusted: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    salesOrderLocations: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        customerName: {
          format: "text",
          type: "string",
        },
        customerAddressLine1: {
          format: "text",
          type: "string",
        },
        customerAddressLine2: {
          format: "text",
          type: "string",
        },
        customerCity: {
          format: "text",
          type: "string",
        },
        customerStateProvince: {
          format: "text",
          type: "string",
        },
        customerPostalCode: {
          format: "text",
          type: "string",
        },
        customerCountryCode: {
          description:
            "Note:\nThis is a Foreign Key to `country.alpha2`.<fk table='country' column='alpha2'/>",
          format: "text",
          type: "string",
        },
        customerCountryName: {
          format: "text",
          type: "string",
        },
        paymentCustomerName: {
          format: "text",
          type: "string",
        },
        paymentAddressLine1: {
          format: "text",
          type: "string",
        },
        paymentAddressLine2: {
          format: "text",
          type: "string",
        },
        paymentCity: {
          format: "text",
          type: "string",
        },
        paymentStateProvince: {
          format: "text",
          type: "string",
        },
        paymentPostalCode: {
          format: "text",
          type: "string",
        },
        paymentCountryCode: {
          description:
            "Note:\nThis is a Foreign Key to `country.alpha2`.<fk table='country' column='alpha2'/>",
          format: "text",
          type: "string",
        },
        paymentCountryName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    feedback: {
      required: ["id", "location", "userId", "feedback"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        location: {
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        feedback: {
          format: "text",
          type: "string",
        },
        attachmentPath: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    oauthCode: {
      required: [
        "id",
        "code",
        "clientId",
        "userId",
        "companyId",
        "redirectUri",
        "expiresAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        code: {
          format: "text",
          type: "string",
        },
        clientId: {
          description:
            "Note:\nThis is a Foreign Key to `oauthClient.clientId`.<fk table='oauthClient' column='clientId'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        redirectUri: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "CURRENT_TIMESTAMP",
          format: "timestamp with time zone",
          type: "string",
        },
        expiresAt: {
          format: "timestamp with time zone",
          type: "string",
        },
      },
      type: "object",
    },
    tools: {
      properties: {
        active: {
          format: "boolean",
          type: "boolean",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        defaultMethodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        itemTrackingType: {
          enum: ["Inventory", "Non-Inventory"],
          format: 'public."itemTrackingType"',
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        replenishmentSystem: {
          enum: ["Buy", "Make", "Buy and Make"],
          format: 'public."itemReplenishmentSystem"',
          type: "string",
        },
        thumbnailPath: {
          format: "text",
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "jsonb",
        },
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          format: "text",
          type: "string",
        },
        approved: {
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        supplierIds: {
          format: "text",
          type: "string",
        },
        unitOfMeasure: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    quoteMaterialWithMakeMethodId: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteLineId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteLine.id`.<fk table='quoteLine' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          format: "text",
          type: "string",
        },
        methodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        order: {
          format: "double precision",
          type: "number",
        },
        description: {
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric",
          type: "number",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        unitCost: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        quoteMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteMakeMethod.id`.<fk table='quoteMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteOperationId: {
          description:
            "Note:\nThis is a Foreign Key to `quoteOperation.id`.<fk table='quoteOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteMaterialMakeMethodId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    suppliers: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        supplierTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierType.id`.<fk table='supplierType' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierStatusId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierStatus.id`.<fk table='supplierStatus' column='id'/>",
          format: "text",
          type: "string",
        },
        taxId: {
          format: "text",
          type: "string",
        },
        accountManagerId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        logo: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        phone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        website: {
          format: "text",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        type: {
          format: "text",
          type: "string",
        },
        status: {
          format: "text",
          type: "string",
        },
        orderCount: {
          format: "bigint",
          type: "integer",
        },
        partCount: {
          format: "bigint",
          type: "integer",
        },
      },
      type: "object",
    },
    purchaseOrders: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        purchaseOrderId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          format: "integer",
          type: "integer",
        },
        type: {
          enum: ["Purchase", "Return"],
          format: 'public."purchaseOrderType"',
          type: "string",
        },
        status: {
          enum: [
            "Draft",
            "To Review",
            "Rejected",
            "To Receive",
            "To Receive and Invoice",
            "To Invoice",
            "Completed",
            "Closed",
          ],
          format: 'public."purchaseOrderStatus"',
          type: "string",
        },
        orderDate: {
          format: "date",
          type: "string",
        },
        notes: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierLocation.id`.<fk table='supplierLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierContactId: {
          description:
            "Note:\nThis is a Foreign Key to `supplierContact.id`.<fk table='supplierContact' column='id'/>",
          format: "text",
          type: "string",
        },
        supplierReference: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        closedAt: {
          format: "date",
          type: "string",
        },
        closedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          format: "numeric",
          type: "number",
        },
        exchangeRateUpdatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        shippingMethodName: {
          format: "text",
          type: "string",
        },
        shippingTermName: {
          format: "text",
          type: "string",
        },
        paymentTermName: {
          format: "text",
          type: "string",
        },
        receiptRequestedDate: {
          format: "date",
          type: "string",
        },
        receiptPromisedDate: {
          format: "date",
          type: "string",
        },
        dropShipment: {
          format: "boolean",
          type: "boolean",
        },
        locationId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        locationName: {
          format: "text",
          type: "string",
        },
        favorite: {
          format: "boolean",
          type: "boolean",
        },
      },
      type: "object",
    },
    purchasePayment: {
      required: [
        "id",
        "paymentId",
        "supplierId",
        "currencyCode",
        "exchangeRate",
        "totalAmount",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        paymentId: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        paymentDate: {
          format: "date",
          type: "string",
        },
        currencyCode: {
          format: "text",
          type: "string",
        },
        exchangeRate: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        totalAmount: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
      },
      type: "object",
    },
    customers: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        customerTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `customerType.id`.<fk table='customerType' column='id'/>",
          format: "text",
          type: "string",
        },
        customerStatusId: {
          description:
            "Note:\nThis is a Foreign Key to `customerStatus.id`.<fk table='customerStatus' column='id'/>",
          format: "text",
          type: "string",
        },
        taxId: {
          format: "text",
          type: "string",
        },
        accountManagerId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        logo: {
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        currencyCode: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        phone: {
          format: "text",
          type: "string",
        },
        fax: {
          format: "text",
          type: "string",
        },
        website: {
          format: "text",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        taxPercent: {
          format: "numeric",
          type: "number",
        },
        type: {
          format: "text",
          type: "string",
        },
        status: {
          format: "text",
          type: "string",
        },
        orderCount: {
          format: "bigint",
          type: "integer",
        },
      },
      type: "object",
    },
    salesOrderFavorite: {
      required: ["salesOrderId", "userId"],
      properties: {
        salesOrderId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    fixture: {
      required: ["id", "approved", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        approved: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        approvedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        externalId: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    document: {
      required: [
        "id",
        "path",
        "name",
        "size",
        "type",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "extensions.uuid_generate_v4()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        path: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        description: {
          default: "",
          format: "text",
          type: "string",
        },
        size: {
          format: "integer",
          type: "integer",
        },
        extension: {
          format: "text",
          type: "string",
        },
        type: {
          enum: [
            "Archive",
            "Document",
            "Presentation",
            "PDF",
            "Spreadsheet",
            "Text",
            "Image",
            "Video",
            "Audio",
            "Other",
            "Model",
          ],
          format: 'public."documentType"',
          type: "string",
        },
        readGroups: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        writeGroups: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        sourceDocument: {
          enum: [
            "Job",
            "Part",
            "Purchase Order",
            "Purchase Invoice",
            "Purchase Return Order",
            "Quote",
            "Receipt",
            "Request for Quote",
            "Sales Order",
            "Sales Invoice",
            "Sales Return Order",
            "Service",
            "Shipment",
            "Material",
            "Tool",
            "Fixture",
            "Consumable",
          ],
          format: 'public."documentSourceType"',
          type: "string",
        },
        sourceDocumentId: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    receipts: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        receiptId: {
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        sourceDocument: {
          enum: [
            "Sales Order",
            "Sales Invoice",
            "Sales Return Order",
            "Purchase Order",
            "Purchase Invoice",
            "Purchase Return Order",
            "Inbound Transfer",
            "Outbound Transfer",
            "Manufacturing Consumption",
            "Manufacturing Output",
          ],
          format: 'public."receiptSourceDocument"',
          type: "string",
        },
        sourceDocumentId: {
          format: "text",
          type: "string",
        },
        sourceDocumentReadableId: {
          format: "text",
          type: "string",
        },
        externalDocumentId: {
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        status: {
          enum: ["Draft", "Pending", "Posted"],
          format: 'public."receiptStatus"',
          type: "string",
        },
        postingDate: {
          format: "date",
          type: "string",
        },
        invoiced: {
          format: "boolean",
          type: "boolean",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        locationName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    attributeDataType: {
      required: [
        "id",
        "label",
        "isBoolean",
        "isDate",
        "isList",
        "isNumeric",
        "isText",
        "isUser",
      ],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "integer",
          type: "integer",
        },
        label: {
          format: "text",
          type: "string",
        },
        isBoolean: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isDate: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isList: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isNumeric: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isText: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        isUser: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
      },
      type: "object",
    },
    quoteLine: {
      required: [
        "id",
        "quoteId",
        "quoteRevisionId",
        "status",
        "itemId",
        "itemType",
        "description",
        "methodType",
        "companyId",
        "createdBy",
        "taxPercent",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        quoteRevisionId: {
          default: 0,
          format: "integer",
          type: "integer",
        },
        status: {
          default: "Not Started",
          enum: ["Not Started", "In Progress", "Complete", "No Quote"],
          format: 'public."quoteLineStatus"',
          type: "string",
        },
        estimatorId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          default: "Part",
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        customerPartId: {
          format: "text",
          type: "string",
        },
        customerPartRevision: {
          format: "text",
          type: "string",
        },
        methodType: {
          default: "Make",
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        notes: {
          format: "json",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        modelUploadId: {
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric[]",
          items: {
            type: "number",
          },
          type: "array",
        },
        additionalCharges: {
          format: "jsonb",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        noQuoteReason: {
          format: "text",
          type: "string",
        },
        taxPercent: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    jobMaterialWithMakeMethodId: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobId: {
          description:
            "Note:\nThis is a Foreign Key to `job.id`.<fk table='job' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        itemType: {
          format: "text",
          type: "string",
        },
        methodType: {
          enum: ["Buy", "Make", "Pick"],
          format: 'public."methodType"',
          type: "string",
        },
        order: {
          format: "double precision",
          type: "number",
        },
        description: {
          format: "text",
          type: "string",
        },
        quantity: {
          format: "numeric",
          type: "number",
        },
        scrapQuantity: {
          format: "numeric",
          type: "number",
        },
        unitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        unitCost: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        jobMakeMethodId: {
          description:
            "Note:\nThis is a Foreign Key to `jobMakeMethod.id`.<fk table='jobMakeMethod' column='id'/>",
          format: "text",
          type: "string",
        },
        jobOperationId: {
          description:
            "Note:\nThis is a Foreign Key to `jobOperation.id`.<fk table='jobOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        estimatedQuantity: {
          format: "numeric",
          type: "number",
        },
        jobMaterialMakeMethodId: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    currency: {
      required: [
        "id",
        "code",
        "exchangeRate",
        "decimalPlaces",
        "active",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        code: {
          description:
            "Note:\nThis is a Foreign Key to `currencyCode.code`.<fk table='currencyCode' column='code'/>",
          format: "text",
          type: "string",
        },
        exchangeRate: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        decimalPlaces: {
          default: 2,
          format: "integer",
          type: "integer",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    productionEvent: {
      required: [
        "id",
        "jobOperationId",
        "startTime",
        "companyId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        jobOperationId: {
          description:
            "Note:\nThis is a Foreign Key to `jobOperation.id`.<fk table='jobOperation' column='id'/>",
          format: "text",
          type: "string",
        },
        type: {
          enum: ["Setup", "Labor", "Machine"],
          format: 'public."productionEventType"',
          type: "string",
        },
        startTime: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        endTime: {
          format: "timestamp with time zone",
          type: "string",
        },
        duration: {
          format: "integer",
          type: "integer",
        },
        employeeId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        workCenterId: {
          description:
            "Note:\nThis is a Foreign Key to `workCenter.id`.<fk table='workCenter' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        notes: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    accounts: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        number: {
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        type: {
          enum: ["Posting", "Total", "Begin Total", "End Total"],
          format: 'public."glAccountType"',
          type: "string",
        },
        class: {
          enum: ["Asset", "Liability", "Equity", "Revenue", "Expense"],
          format: 'public."glAccountClass"',
          type: "string",
        },
        accountCategoryId: {
          description:
            "Note:\nThis is a Foreign Key to `accountCategory.id`.<fk table='accountCategory' column='id'/>",
          format: "text",
          type: "string",
        },
        accountSubcategoryId: {
          format: "text",
          type: "string",
        },
        incomeBalance: {
          enum: ["Balance Sheet", "Income Statement"],
          format: 'public."glIncomeBalance"',
          type: "string",
        },
        consolidatedRate: {
          enum: ["Average", "Current", "Historical"],
          format: 'public."glConsolidatedRate"',
          type: "string",
        },
        directPosting: {
          format: "boolean",
          type: "boolean",
        },
        active: {
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        accountCategory: {
          format: "text",
          type: "string",
        },
        accountSubCategory: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    supplierProcesses: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        processId: {
          description:
            "Note:\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        minimumCost: {
          format: "numeric",
          type: "number",
        },
        leadTime: {
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        processName: {
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    postingGroupInventory: {
      required: [
        "id",
        "costOfGoodsSoldAccount",
        "inventoryAccount",
        "inventoryInterimAccrualAccount",
        "inventoryReceivedNotInvoicedAccount",
        "inventoryInvoicedNotReceivedAccount",
        "inventoryShippedNotInvoicedAccount",
        "workInProgressAccount",
        "directCostAppliedAccount",
        "overheadAccount",
        "overheadCostAppliedAccount",
        "purchaseVarianceAccount",
        "inventoryAdjustmentVarianceAccount",
        "materialVarianceAccount",
        "capacityVarianceAccount",
        "companyId",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        itemPostingGroupId: {
          description:
            "Note:\nThis is a Foreign Key to `itemPostingGroup.id`.<fk table='itemPostingGroup' column='id'/>",
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        costOfGoodsSoldAccount: {
          format: "text",
          type: "string",
        },
        inventoryAccount: {
          format: "text",
          type: "string",
        },
        inventoryInterimAccrualAccount: {
          format: "text",
          type: "string",
        },
        inventoryReceivedNotInvoicedAccount: {
          format: "text",
          type: "string",
        },
        inventoryInvoicedNotReceivedAccount: {
          format: "text",
          type: "string",
        },
        inventoryShippedNotInvoicedAccount: {
          format: "text",
          type: "string",
        },
        workInProgressAccount: {
          format: "text",
          type: "string",
        },
        directCostAppliedAccount: {
          format: "text",
          type: "string",
        },
        overheadAccount: {
          format: "text",
          type: "string",
        },
        overheadCostAppliedAccount: {
          format: "text",
          type: "string",
        },
        purchaseVarianceAccount: {
          format: "text",
          type: "string",
        },
        inventoryAdjustmentVarianceAccount: {
          format: "text",
          type: "string",
        },
        materialVarianceAccount: {
          format: "text",
          type: "string",
        },
        capacityVarianceAccount: {
          format: "text",
          type: "string",
        },
        companyId: {
          format: "text",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    userToCompany: {
      required: ["userId", "companyId", "role"],
      properties: {
        userId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        role: {
          enum: ["customer", "employee", "supplier"],
          format: "public.role",
          type: "string",
        },
      },
      type: "object",
    },
    userAttribute: {
      required: [
        "id",
        "name",
        "sortOrder",
        "userAttributeCategoryId",
        "attributeDataTypeId",
        "createdAt",
        "createdBy",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        sortOrder: {
          default: 1,
          format: "integer",
          type: "integer",
        },
        userAttributeCategoryId: {
          description:
            "Note:\nThis is a Foreign Key to `userAttributeCategory.id`.<fk table='userAttributeCategory' column='id'/>",
          format: "text",
          type: "string",
        },
        attributeDataTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `attributeDataType.id`.<fk table='attributeDataType' column='id'/>",
          format: "integer",
          type: "integer",
        },
        listOptions: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
        canSelfManage: {
          default: false,
          format: "boolean",
          type: "boolean",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    supplierProcess: {
      required: [
        "id",
        "supplierId",
        "processId",
        "minimumCost",
        "leadTime",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        supplierId: {
          description:
            "Note:\nThis is a Foreign Key to `supplier.id`.<fk table='supplier' column='id'/>",
          format: "text",
          type: "string",
        },
        processId: {
          description:
            "Note:\nThis is a Foreign Key to `process.id`.<fk table='process' column='id'/>",
          format: "text",
          type: "string",
        },
        minimumCost: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        leadTime: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    employee: {
      required: ["id", "companyId", "employeeTypeId"],
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Primary Key.<pk/>\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        employeeTypeId: {
          description:
            "Note:\nThis is a Foreign Key to `employeeType.id`.<fk table='employeeType' column='id'/>",
          format: "text",
          type: "string",
        },
      },
      type: "object",
    },
    itemPostingGroup: {
      required: ["id", "name", "active", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        active: {
          default: true,
          format: "boolean",
          type: "boolean",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    department: {
      required: ["id", "name", "companyId", "createdBy", "createdAt"],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        name: {
          format: "text",
          type: "string",
        },
        parentDepartmentId: {
          description:
            "Note:\nThis is a Foreign Key to `department.id`.<fk table='department' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp without time zone",
          type: "string",
        },
        updatedBy: {
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp without time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    purchaseInvoiceLine: {
      required: [
        "id",
        "invoiceId",
        "invoiceLineType",
        "quantity",
        "unitPrice",
        "currencyCode",
        "exchangeRate",
        "companyId",
        "createdBy",
        "createdAt",
      ],
      properties: {
        id: {
          default: "public.xid()",
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        invoiceId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseInvoice.id`.<fk table='purchaseInvoice' column='id'/>",
          format: "text",
          type: "string",
        },
        invoiceLineType: {
          enum: [
            "Comment",
            "G/L Account",
            "Fixed Asset",
            "Part",
            "Material",
            "Tool",
            "Service",
            "Consumable",
            "Fixture",
          ],
          format: 'public."payableLineType"',
          type: "string",
        },
        purchaseOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseOrder.id`.<fk table='purchaseOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        purchaseOrderLineId: {
          description:
            "Note:\nThis is a Foreign Key to `purchaseOrderLine.id`.<fk table='purchaseOrderLine' column='id'/>",
          format: "text",
          type: "string",
        },
        itemId: {
          description:
            "Note:\nThis is a Foreign Key to `item.id`.<fk table='item' column='id'/>",
          format: "text",
          type: "string",
        },
        itemReadableId: {
          format: "text",
          type: "string",
        },
        serviceId: {
          format: "text",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        shelfId: {
          description:
            "Note:\nThis is a Foreign Key to `shelf.id`.<fk table='shelf' column='id'/>",
          format: "text",
          type: "string",
        },
        accountNumber: {
          format: "text",
          type: "string",
        },
        assetId: {
          format: "text",
          type: "string",
        },
        description: {
          format: "text",
          type: "string",
        },
        quantity: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        unitPrice: {
          default: 0,
          format: "numeric",
          type: "number",
        },
        totalAmount: {
          format: "numeric",
          type: "number",
        },
        currencyCode: {
          format: "text",
          type: "string",
        },
        exchangeRate: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        inventoryUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        purchaseUnitOfMeasureCode: {
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        createdAt: {
          default: "now()",
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        conversionFactor: {
          default: 1,
          format: "numeric",
          type: "number",
        },
        tags: {
          format: "text[]",
          items: {
            type: "string",
          },
          type: "array",
        },
      },
      type: "object",
    },
    salesRfqs: {
      properties: {
        id: {
          description: "Note:\nThis is a Primary Key.<pk/>",
          format: "text",
          type: "string",
        },
        rfqId: {
          format: "text",
          type: "string",
        },
        revisionId: {
          format: "integer",
          type: "integer",
        },
        status: {
          enum: ["Draft", "Ready for Quote", "Closed", "Quoted"],
          format: 'public."salesRfqStatus"',
          type: "string",
        },
        employeeId: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customerId: {
          description:
            "Note:\nThis is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>",
          format: "text",
          type: "string",
        },
        customerContactId: {
          description:
            "Note:\nThis is a Foreign Key to `customerContact.id`.<fk table='customerContact' column='id'/>",
          format: "text",
          type: "string",
        },
        customerReference: {
          format: "text",
          type: "string",
        },
        rfqDate: {
          format: "date",
          type: "string",
        },
        expirationDate: {
          format: "date",
          type: "string",
        },
        locationId: {
          description:
            "Note:\nThis is a Foreign Key to `location.id`.<fk table='location' column='id'/>",
          format: "text",
          type: "string",
        },
        assignee: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        companyId: {
          description:
            "Note:\nThis is a Foreign Key to `company.id`.<fk table='company' column='id'/>",
          format: "text",
          type: "string",
        },
        customFields: {
          format: "jsonb",
        },
        createdAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        createdBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        updatedAt: {
          format: "timestamp with time zone",
          type: "string",
        },
        updatedBy: {
          description:
            "Note:\nThis is a Foreign Key to `user.id`.<fk table='user' column='id'/>",
          format: "text",
          type: "string",
        },
        customerLocationId: {
          description:
            "Note:\nThis is a Foreign Key to `customerLocation.id`.<fk table='customerLocation' column='id'/>",
          format: "text",
          type: "string",
        },
        externalNotes: {
          format: "json",
        },
        internalNotes: {
          format: "json",
        },
        salesPersonId: {
          format: "text",
          type: "string",
        },
        locationName: {
          format: "text",
          type: "string",
        },
        quoteId: {
          description:
            "Note:\nThis is a Foreign Key to `quote.id`.<fk table='quote' column='id'/>",
          format: "text",
          type: "string",
        },
        salesOrderId: {
          description:
            "Note:\nThis is a Foreign Key to `salesOrder.id`.<fk table='salesOrder' column='id'/>",
          format: "text",
          type: "string",
        },
        favorite: {
          format: "boolean",
          type: "boolean",
        },
      },
      type: "object",
    },
  },
  parameters: {
    preferParams: {
      name: "Prefer",
      description: "Preference",
      required: false,
      enum: ["params=single-object"],
      in: "header",
      type: "string",
    },
    preferReturn: {
      name: "Prefer",
      description: "Preference",
      required: false,
      enum: ["return=representation", "return=minimal", "return=none"],
      in: "header",
      type: "string",
    },
    preferCount: {
      name: "Prefer",
      description: "Preference",
      required: false,
      enum: ["count=none"],
      in: "header",
      type: "string",
    },
    preferPost: {
      name: "Prefer",
      description: "Preference",
      required: false,
      enum: [
        "return=representation",
        "return=minimal",
        "return=none",
        "resolution=ignore-duplicates",
        "resolution=merge-duplicates",
      ],
      in: "header",
      type: "string",
    },
    select: {
      name: "select",
      description: "Filtering Columns",
      required: false,
      in: "query",
      type: "string",
    },
    on_conflict: {
      name: "on_conflict",
      description: "On Conflict",
      required: false,
      in: "query",
      type: "string",
    },
    order: {
      name: "order",
      description: "Ordering",
      required: false,
      in: "query",
      type: "string",
    },
    range: {
      name: "Range",
      description: "Limiting and Pagination",
      required: false,
      in: "header",
      type: "string",
    },
    rangeUnit: {
      name: "Range-Unit",
      description: "Limiting and Pagination",
      required: false,
      default: "items",
      in: "header",
      type: "string",
    },
    offset: {
      name: "offset",
      description: "Limiting and Pagination",
      required: false,
      in: "query",
      type: "string",
    },
    limit: {
      name: "limit",
      description: "Limiting and Pagination",
      required: false,
      in: "query",
      type: "string",
    },
    "body.purchaseInvoiceStatusHistory": {
      name: "purchaseInvoiceStatusHistory",
      description: "purchaseInvoiceStatusHistory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseInvoiceStatusHistory",
      },
    },
    "rowFilter.purchaseInvoiceStatusHistory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceStatusHistory.invoiceId": {
      name: "invoiceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceStatusHistory.status": {
      name: "status",
      required: false,
      format: 'public."purchaseInvoiceStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceStatusHistory.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.itemInventory": {
      name: "itemInventory",
      description: "itemInventory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/itemInventory",
      },
    },
    "rowFilter.itemInventory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.quantityOnHand": {
      name: "quantityOnHand",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.quantityOnPurchase": {
      name: "quantityOnPurchase",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.quantityOnSalesOrder": {
      name: "quantityOnSalesOrder",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.quantityOnProductionOrder": {
      name: "quantityOnProductionOrder",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemInventory.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.userPermission": {
      name: "userPermission",
      description: "userPermission",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/userPermission",
      },
    },
    "rowFilter.userPermission.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userPermission.permissions": {
      name: "permissions",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.supplierAccount": {
      name: "supplierAccount",
      description: "supplierAccount",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierAccount",
      },
    },
    "rowFilter.supplierAccount.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierAccount.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierAccount.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.supplierType": {
      name: "supplierType",
      description: "supplierType",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierType",
      },
    },
    "rowFilter.supplierType.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.protected": {
      name: "protected",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierType.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.customerType": {
      name: "customerType",
      description: "customerType",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerType",
      },
    },
    "rowFilter.customerType.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.protected": {
      name: "protected",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customerType.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.shippingTerm": {
      name: "shippingTerm",
      description: "shippingTerm",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/shippingTerm",
      },
    },
    "rowFilter.shippingTerm.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingTerm.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.customerAccount": {
      name: "customerAccount",
      description: "customerAccount",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerAccount",
      },
    },
    "rowFilter.customerAccount.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerAccount.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerAccount.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.accountDefault": {
      name: "accountDefault",
      description: "accountDefault",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/accountDefault",
      },
    },
    "rowFilter.accountDefault.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.salesAccount": {
      name: "salesAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.salesDiscountAccount": {
      name: "salesDiscountAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.costOfGoodsSoldAccount": {
      name: "costOfGoodsSoldAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.purchaseAccount": {
      name: "purchaseAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.directCostAppliedAccount": {
      name: "directCostAppliedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.overheadCostAppliedAccount": {
      name: "overheadCostAppliedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.purchaseVarianceAccount": {
      name: "purchaseVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.inventoryAdjustmentVarianceAccount": {
      name: "inventoryAdjustmentVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.materialVarianceAccount": {
      name: "materialVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.capacityVarianceAccount": {
      name: "capacityVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.overheadAccount": {
      name: "overheadAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.maintenanceAccount": {
      name: "maintenanceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.assetDepreciationExpenseAccount": {
      name: "assetDepreciationExpenseAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.assetGainsAndLossesAccount": {
      name: "assetGainsAndLossesAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.serviceChargeAccount": {
      name: "serviceChargeAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.interestAccount": {
      name: "interestAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.supplierPaymentDiscountAccount": {
      name: "supplierPaymentDiscountAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.customerPaymentDiscountAccount": {
      name: "customerPaymentDiscountAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.roundingAccount": {
      name: "roundingAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.assetAquisitionCostAccount": {
      name: "assetAquisitionCostAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.assetAquisitionCostOnDisposalAccount": {
      name: "assetAquisitionCostOnDisposalAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.accumulatedDepreciationAccount": {
      name: "accumulatedDepreciationAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.accumulatedDepreciationOnDisposalAccount": {
      name: "accumulatedDepreciationOnDisposalAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.inventoryAccount": {
      name: "inventoryAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.inventoryInterimAccrualAccount": {
      name: "inventoryInterimAccrualAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.workInProgressAccount": {
      name: "workInProgressAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.receivablesAccount": {
      name: "receivablesAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.inventoryShippedNotInvoicedAccount": {
      name: "inventoryShippedNotInvoicedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.inventoryInvoicedNotReceivedAccount": {
      name: "inventoryInvoicedNotReceivedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.bankCashAccount": {
      name: "bankCashAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.bankLocalCurrencyAccount": {
      name: "bankLocalCurrencyAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.bankForeignCurrencyAccount": {
      name: "bankForeignCurrencyAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.prepaymentAccount": {
      name: "prepaymentAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.payablesAccount": {
      name: "payablesAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.inventoryReceivedNotInvoicedAccount": {
      name: "inventoryReceivedNotInvoicedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.salesTaxPayableAccount": {
      name: "salesTaxPayableAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.purchaseTaxPayableAccount": {
      name: "purchaseTaxPayableAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.reverseChargeSalesTaxPayableAccount": {
      name: "reverseChargeSalesTaxPayableAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.retainedEarningsAccount": {
      name: "retainedEarningsAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountDefault.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.service": {
      name: "service",
      description: "service",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/service",
      },
    },
    "rowFilter.service.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.service.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.service.serviceType": {
      name: "serviceType",
      required: false,
      format: 'public."serviceType"',
      in: "query",
      type: "string",
    },
    "rowFilter.service.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.service.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.service.fromDate": {
      name: "fromDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.service.toDate": {
      name: "toDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.service.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.service.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.service.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.service.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.service.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.service.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.service.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.employeeTypePermission": {
      name: "employeeTypePermission",
      description: "employeeTypePermission",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employeeTypePermission",
      },
    },
    "rowFilter.employeeTypePermission.employeeTypeId": {
      name: "employeeTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeTypePermission.module": {
      name: "module",
      required: false,
      format: "public.module",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeTypePermission.create": {
      name: "create",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeTypePermission.delete": {
      name: "delete",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeTypePermission.update": {
      name: "update",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeTypePermission.view": {
      name: "view",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeTypePermission.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeTypePermission.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderPayment": {
      name: "purchaseOrderPayment",
      description: "purchaseOrderPayment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderPayment",
      },
    },
    "rowFilter.purchaseOrderPayment.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.invoiceSupplierId": {
      name: "invoiceSupplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.invoiceSupplierLocationId": {
      name: "invoiceSupplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.invoiceSupplierContactId": {
      name: "invoiceSupplierContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.paymentTermId": {
      name: "paymentTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.paymentComplete": {
      name: "paymentComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderPayment.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.tag": {
      name: "tag",
      description: "tag",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/tag",
      },
    },
    "rowFilter.tag.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tag.table": {
      name: "table",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tag.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tag.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.tag.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.holiday": {
      name: "holiday",
      description: "holiday",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/holiday",
      },
    },
    "rowFilter.holiday.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.date": {
      name: "date",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.year": {
      name: "year",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.holiday.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.quotes": {
      name: "quotes",
      description: "quotes",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quotes",
      },
    },
    "rowFilter.quotes.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.dueDate": {
      name: "dueDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.expirationDate": {
      name: "expirationDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.status": {
      name: "status",
      required: false,
      format: 'public."quoteStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.salesPersonId": {
      name: "salesPersonId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.estimatorId": {
      name: "estimatorId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.customerContactId": {
      name: "customerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.customerReference": {
      name: "customerReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.exchangeRateUpdatedAt": {
      name: "exchangeRateUpdatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.externalLinkId": {
      name: "externalLinkId",
      required: false,
      format: "uuid",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.digitalQuoteAcceptedBy": {
      name: "digitalQuoteAcceptedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.digitalQuoteAcceptedByEmail": {
      name: "digitalQuoteAcceptedByEmail",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.itemType": {
      name: "itemType",
      required: false,
      format: 'public."itemType"',
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.lines": {
      name: "lines",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.completedLines": {
      name: "completedLines",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.favorite": {
      name: "favorite",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.salesRfqId": {
      name: "salesRfqId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotes.shippingCost": {
      name: "shippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "body.documentExtensions": {
      name: "documentExtensions",
      description: "documentExtensions",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/documentExtensions",
      },
    },
    "rowFilter.documentExtensions.extension": {
      name: "extension",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.customerPayment": {
      name: "customerPayment",
      description: "customerPayment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerPayment",
      },
    },
    "rowFilter.customerPayment.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPayment.invoiceCustomerId": {
      name: "invoiceCustomerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPayment.invoiceCustomerLocationId": {
      name: "invoiceCustomerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPayment.invoiceCustomerContactId": {
      name: "invoiceCustomerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPayment.paymentTermId": {
      name: "paymentTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPayment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPayment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPayment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.postingGroupPurchasing": {
      name: "postingGroupPurchasing",
      description: "postingGroupPurchasing",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/postingGroupPurchasing",
      },
    },
    "rowFilter.postingGroupPurchasing.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.supplierTypeId": {
      name: "supplierTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.itemPostingGroupId": {
      name: "itemPostingGroupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.payablesAccount": {
      name: "payablesAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.purchaseAccount": {
      name: "purchaseAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.purchaseDiscountAccount": {
      name: "purchaseDiscountAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.purchaseCreditAccount": {
      name: "purchaseCreditAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.purchasePrepaymentAccount": {
      name: "purchasePrepaymentAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.purchaseTaxPayableAccount": {
      name: "purchaseTaxPayableAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupPurchasing.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.accountSubcategory": {
      name: "accountSubcategory",
      description: "accountSubcategory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/accountSubcategory",
      },
    },
    "rowFilter.accountSubcategory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.accountCategoryId": {
      name: "accountCategoryId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.accountSubcategory.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.material": {
      name: "material",
      description: "material",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/material",
      },
    },
    "rowFilter.material.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.materialFormId": {
      name: "materialFormId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.materialSubstanceId": {
      name: "materialSubstanceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.grade": {
      name: "grade",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.dimensions": {
      name: "dimensions",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.finish": {
      name: "finish",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.material.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.material.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.material.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.material.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.material.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.material.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.supplierPayment": {
      name: "supplierPayment",
      description: "supplierPayment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierPayment",
      },
    },
    "rowFilter.supplierPayment.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.invoiceSupplierId": {
      name: "invoiceSupplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.invoiceSupplierLocationId": {
      name: "invoiceSupplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.invoiceSupplierContactId": {
      name: "invoiceSupplierContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.paymentTermId": {
      name: "paymentTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPayment.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.methodOperationTool": {
      name: "methodOperationTool",
      description: "methodOperationTool",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/methodOperationTool",
      },
    },
    "rowFilter.methodOperationTool.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.operationId": {
      name: "operationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.toolId": {
      name: "toolId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.quantity": {
      name: "quantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperationTool.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.currencyCode": {
      name: "currencyCode",
      description: "currencyCode",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/currencyCode",
      },
    },
    "rowFilter.currencyCode.code": {
      name: "code",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currencyCode.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.methodMaterial": {
      name: "methodMaterial",
      description: "methodMaterial",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/methodMaterial",
      },
    },
    "rowFilter.methodMaterial.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.makeMethodId": {
      name: "makeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.materialMakeMethodId": {
      name: "materialMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.itemType": {
      name: "itemType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.methodOperationId": {
      name: "methodOperationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.scrapQuantity": {
      name: "scrapQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.productionQuantity": {
      name: "productionQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.methodMaterial.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.processes": {
      name: "processes",
      description: "processes",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/processes",
      },
    },
    "rowFilter.processes.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.defaultStandardFactor": {
      name: "defaultStandardFactor",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.processType": {
      name: "processType",
      required: false,
      format: 'public."processType"',
      in: "query",
      type: "string",
    },
    "rowFilter.processes.workCenters": {
      name: "workCenters",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.processes.suppliers": {
      name: "suppliers",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.process": {
      name: "process",
      description: "process",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/process",
      },
    },
    "rowFilter.process.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.process.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.process.defaultStandardFactor": {
      name: "defaultStandardFactor",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.process.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.process.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.process.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.process.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.process.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.process.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.process.processType": {
      name: "processType",
      required: false,
      format: 'public."processType"',
      in: "query",
      type: "string",
    },
    "rowFilter.process.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.quoteMaterial": {
      name: "quoteMaterial",
      description: "quoteMaterial",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteMaterial",
      },
    },
    "rowFilter.quoteMaterial.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.itemType": {
      name: "itemType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.unitCost": {
      name: "unitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.quoteMakeMethodId": {
      name: "quoteMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.quoteOperationId": {
      name: "quoteOperationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.scrapQuantity": {
      name: "scrapQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.productionQuantity": {
      name: "productionQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterial.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.contractorAbility": {
      name: "contractorAbility",
      description: "contractorAbility",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/contractorAbility",
      },
    },
    "rowFilter.contractorAbility.contractorId": {
      name: "contractorId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractorAbility.abilityId": {
      name: "abilityId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractorAbility.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractorAbility.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.salesOrderLines": {
      name: "salesOrderLines",
      description: "salesOrderLines",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderLines",
      },
    },
    "rowFilter.salesOrderLines.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.salesOrderLineType": {
      name: "salesOrderLineType",
      required: false,
      format: 'public."salesOrderLineType"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.accountNumber": {
      name: "accountNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.assetId": {
      name: "assetId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.saleQuantity": {
      name: "saleQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.quantityToSend": {
      name: "quantityToSend",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.quantitySent": {
      name: "quantitySent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.quantityToInvoice": {
      name: "quantityToInvoice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.quantityInvoiced": {
      name: "quantityInvoiced",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.setupPrice": {
      name: "setupPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.sentComplete": {
      name: "sentComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.invoicedComplete": {
      name: "invoicedComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.requiresInspection": {
      name: "requiresInspection",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.status": {
      name: "status",
      required: false,
      format: 'public."salesOrderLineStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.promisedDate": {
      name: "promisedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.addOnCost": {
      name: "addOnCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.convertedUnitPrice": {
      name: "convertedUnitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.convertedAddOnCost": {
      name: "convertedAddOnCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.shippingCost": {
      name: "shippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.convertedShippingCost": {
      name: "convertedShippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.taxPercent": {
      name: "taxPercent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.modelId": {
      name: "modelId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.autodeskUrn": {
      name: "autodeskUrn",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.modelPath": {
      name: "modelPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.modelName": {
      name: "modelName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.modelSize": {
      name: "modelSize",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.unitCost": {
      name: "unitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.customerPartId": {
      name: "customerPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLines.customerPartRevision": {
      name: "customerPartRevision",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.jobOperation": {
      name: "jobOperation",
      description: "jobOperation",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobOperation",
      },
    },
    "rowFilter.jobOperation.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.jobMakeMethodId": {
      name: "jobMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.workCenterId": {
      name: "workCenterId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.setupTime": {
      name: "setupTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.setupUnit": {
      name: "setupUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.laborTime": {
      name: "laborTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.laborUnit": {
      name: "laborUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.machineTime": {
      name: "machineTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.machineUnit": {
      name: "machineUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.operationOrder": {
      name: "operationOrder",
      required: false,
      format: 'public."methodOperationOrder"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.laborRate": {
      name: "laborRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.overheadRate": {
      name: "overheadRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.machineRate": {
      name: "machineRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.operationType": {
      name: "operationType",
      required: false,
      format: 'public."operationType"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.operationMinimumCost": {
      name: "operationMinimumCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.operationLeadTime": {
      name: "operationLeadTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.operationUnitCost": {
      name: "operationUnitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.operationSupplierProcessId": {
      name: "operationSupplierProcessId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.workInstruction": {
      name: "workInstruction",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.operationQuantity": {
      name: "operationQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.quantityComplete": {
      name: "quantityComplete",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.quantityScrapped": {
      name: "quantityScrapped",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.quantityReworked": {
      name: "quantityReworked",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.status": {
      name: "status",
      required: false,
      format: 'public."jobOperationStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperation.priority": {
      name: "priority",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "body.journalLine": {
      name: "journalLine",
      description: "journalLine",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/journalLine",
      },
    },
    "rowFilter.journalLine.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.journalId": {
      name: "journalId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.accountNumber": {
      name: "accountNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.amount": {
      name: "amount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.documentType": {
      name: "documentType",
      required: false,
      format: 'public."journalLineDocumentType"',
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.externalDocumentId": {
      name: "externalDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.journalLineReference": {
      name: "journalLineReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.documentLineReference": {
      name: "documentLineReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.accrual": {
      name: "accrual",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.journalLine.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderLines": {
      name: "purchaseOrderLines",
      description: "purchaseOrderLines",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderLines",
      },
    },
    "rowFilter.purchaseOrderLines.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.purchaseOrderLineType": {
      name: "purchaseOrderLineType",
      required: false,
      format: 'public."purchaseOrderLineType"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.accountNumber": {
      name: "accountNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.assetId": {
      name: "assetId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.purchaseQuantity": {
      name: "purchaseQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.quantityToReceive": {
      name: "quantityToReceive",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.quantityReceived": {
      name: "quantityReceived",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.quantityToInvoice": {
      name: "quantityToInvoice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.quantityInvoiced": {
      name: "quantityInvoiced",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.inventoryUnitOfMeasureCode": {
      name: "inventoryUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.purchaseUnitOfMeasureCode": {
      name: "purchaseUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.setupPrice": {
      name: "setupPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.receivedComplete": {
      name: "receivedComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.invoicedComplete": {
      name: "invoicedComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.requiresInspection": {
      name: "requiresInspection",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.conversionFactor": {
      name: "conversionFactor",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.itemName": {
      name: "itemName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.itemDescription": {
      name: "itemDescription",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLines.supplierPartId": {
      name: "supplierPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.materialForm": {
      name: "materialForm",
      description: "materialForm",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/materialForm",
      },
    },
    "rowFilter.materialForm.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.materialForm.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.item": {
      name: "item",
      description: "item",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/item",
      },
    },
    "rowFilter.item.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.readableId": {
      name: "readableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.type": {
      name: "type",
      required: false,
      format: 'public."itemType"',
      in: "query",
      type: "string",
    },
    "rowFilter.item.replenishmentSystem": {
      name: "replenishmentSystem",
      required: false,
      format: 'public."itemReplenishmentSystem"',
      in: "query",
      type: "string",
    },
    "rowFilter.item.defaultMethodType": {
      name: "defaultMethodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.item.itemTrackingType": {
      name: "itemTrackingType",
      required: false,
      format: 'public."itemTrackingType"',
      in: "query",
      type: "string",
    },
    "rowFilter.item.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.item.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.item.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.item.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.item.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.item.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.receipt": {
      name: "receipt",
      description: "receipt",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/receipt",
      },
    },
    "rowFilter.receipt.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.receiptId": {
      name: "receiptId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.sourceDocument": {
      name: "sourceDocument",
      required: false,
      format: 'public."receiptSourceDocument"',
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.sourceDocumentId": {
      name: "sourceDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.sourceDocumentReadableId": {
      name: "sourceDocumentReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.externalDocumentId": {
      name: "externalDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.status": {
      name: "status",
      required: false,
      format: 'public."receiptStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.invoiced": {
      name: "invoiced",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.receipt.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderTransaction": {
      name: "purchaseOrderTransaction",
      description: "purchaseOrderTransaction",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderTransaction",
      },
    },
    "rowFilter.purchaseOrderTransaction.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderTransaction.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderTransaction.type": {
      name: "type",
      required: false,
      format: 'public."purchaseOrderTransactionType"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderTransaction.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderTransaction.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.supplierLocation": {
      name: "supplierLocation",
      description: "supplierLocation",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierLocation",
      },
    },
    "rowFilter.supplierLocation.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLocation.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLocation.addressId": {
      name: "addressId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLocation.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLocation.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLocation.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.contractor": {
      name: "contractor",
      description: "contractor",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/contractor",
      },
    },
    "rowFilter.contractor.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.hoursPerWeek": {
      name: "hoursPerWeek",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.contractor.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.jobOperationsWithMakeMethods": {
      name: "jobOperationsWithMakeMethods",
      description: "jobOperationsWithMakeMethods",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobOperationsWithMakeMethods",
      },
    },
    "rowFilter.jobOperationsWithMakeMethods.makeMethodId": {
      name: "makeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.jobMakeMethodId": {
      name: "jobMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.workCenterId": {
      name: "workCenterId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.setupTime": {
      name: "setupTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.setupUnit": {
      name: "setupUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.laborTime": {
      name: "laborTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.laborUnit": {
      name: "laborUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.machineTime": {
      name: "machineTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.machineUnit": {
      name: "machineUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.operationOrder": {
      name: "operationOrder",
      required: false,
      format: 'public."methodOperationOrder"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.laborRate": {
      name: "laborRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.overheadRate": {
      name: "overheadRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.machineRate": {
      name: "machineRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.operationType": {
      name: "operationType",
      required: false,
      format: 'public."operationType"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.operationMinimumCost": {
      name: "operationMinimumCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.operationLeadTime": {
      name: "operationLeadTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.operationUnitCost": {
      name: "operationUnitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.operationSupplierProcessId": {
      name: "operationSupplierProcessId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.workInstruction": {
      name: "workInstruction",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.operationQuantity": {
      name: "operationQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.quantityComplete": {
      name: "quantityComplete",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.quantityScrapped": {
      name: "quantityScrapped",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.quantityReworked": {
      name: "quantityReworked",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationsWithMakeMethods.status": {
      name: "status",
      required: false,
      format: 'public."jobOperationStatus"',
      in: "query",
      type: "string",
    },
    "body.customerLocation": {
      name: "customerLocation",
      description: "customerLocation",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerLocation",
      },
    },
    "rowFilter.customerLocation.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerLocation.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerLocation.addressId": {
      name: "addressId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerLocation.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customerLocation.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerLocation.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.membership": {
      name: "membership",
      description: "membership",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/membership",
      },
    },
    "rowFilter.membership.id": {
      name: "id",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.membership.groupId": {
      name: "groupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.membership.memberGroupId": {
      name: "memberGroupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.membership.memberUserId": {
      name: "memberUserId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.postingGroupSales": {
      name: "postingGroupSales",
      description: "postingGroupSales",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/postingGroupSales",
      },
    },
    "rowFilter.postingGroupSales.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.customerTypeId": {
      name: "customerTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.itemPostingGroupId": {
      name: "itemPostingGroupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.receivablesAccount": {
      name: "receivablesAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.salesAccount": {
      name: "salesAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.salesDiscountAccount": {
      name: "salesDiscountAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.salesCreditAccount": {
      name: "salesCreditAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.salesPrepaymentAccount": {
      name: "salesPrepaymentAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.salesTaxPayableAccount": {
      name: "salesTaxPayableAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupSales.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.search": {
      name: "search",
      description: "search",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/search",
      },
    },
    "rowFilter.search.id": {
      name: "id",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.search.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.search.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.search.entity": {
      name: "entity",
      required: false,
      format: 'public."searchEntity"',
      in: "query",
      type: "string",
    },
    "rowFilter.search.uuid": {
      name: "uuid",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.search.link": {
      name: "link",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.search.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.search.fts": {
      name: "fts",
      required: false,
      format: "tsvector",
      in: "query",
      type: "string",
    },
    "body.journal": {
      name: "journal",
      description: "journal",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/journal",
      },
    },
    "rowFilter.journal.id": {
      name: "id",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.journal.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journal.accountingPeriodId": {
      name: "accountingPeriodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journal.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.journal.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.journal.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.journal.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.journal.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.modules": {
      name: "modules",
      description: "modules",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/modules",
      },
    },
    "rowFilter.modules.name": {
      name: "name",
      required: false,
      format: "public.module",
      in: "query",
      type: "string",
    },
    "body.employeesAcrossCompanies": {
      name: "employeesAcrossCompanies",
      description: "employeesAcrossCompanies",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employeesAcrossCompanies",
      },
    },
    "rowFilter.employeesAcrossCompanies.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeesAcrossCompanies.email": {
      name: "email",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeesAcrossCompanies.firstName": {
      name: "firstName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeesAcrossCompanies.lastName": {
      name: "lastName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeesAcrossCompanies.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeesAcrossCompanies.avatarUrl": {
      name: "avatarUrl",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeesAcrossCompanies.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.employeesAcrossCompanies.companyId": {
      name: "companyId",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.purchaseInvoicePriceChange": {
      name: "purchaseInvoicePriceChange",
      description: "purchaseInvoicePriceChange",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseInvoicePriceChange",
      },
    },
    "rowFilter.purchaseInvoicePriceChange.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePriceChange.invoiceId": {
      name: "invoiceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePriceChange.invoiceLineId": {
      name: "invoiceLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePriceChange.previousPrice": {
      name: "previousPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePriceChange.newPrice": {
      name: "newPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePriceChange.previousQuantity": {
      name: "previousQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePriceChange.newQuantity": {
      name: "newQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePriceChange.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.currencies": {
      name: "currencies",
      description: "currencies",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/currencies",
      },
    },
    "rowFilter.currencies.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.code": {
      name: "code",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.decimalPlaces": {
      name: "decimalPlaces",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.currencies.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.shift": {
      name: "shift",
      description: "shift",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/shift",
      },
    },
    "rowFilter.shift.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.startTime": {
      name: "startTime",
      required: false,
      format: "time without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.endTime": {
      name: "endTime",
      required: false,
      format: "time without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.sunday": {
      name: "sunday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.monday": {
      name: "monday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.tuesday": {
      name: "tuesday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.wednesday": {
      name: "wednesday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.thursday": {
      name: "thursday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.friday": {
      name: "friday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.saturday": {
      name: "saturday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.shift.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.integration": {
      name: "integration",
      description: "integration",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/integration",
      },
    },
    "rowFilter.integration.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.integration.jsonschema": {
      name: "jsonschema",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "body.customFieldTables": {
      name: "customFieldTables",
      description: "customFieldTables",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customFieldTables",
      },
    },
    "rowFilter.customFieldTables.table": {
      name: "table",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customFieldTables.module": {
      name: "module",
      required: false,
      format: "public.module",
      in: "query",
      type: "string",
    },
    "rowFilter.customFieldTables.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customFieldTables.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customFieldTables.fields": {
      name: "fields",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "body.documents": {
      name: "documents",
      description: "documents",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/documents",
      },
    },
    "rowFilter.documents.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.path": {
      name: "path",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.size": {
      name: "size",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.extension": {
      name: "extension",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.type": {
      name: "type",
      required: false,
      format: 'public."documentType"',
      in: "query",
      type: "string",
    },
    "rowFilter.documents.readGroups": {
      name: "readGroups",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.writeGroups": {
      name: "writeGroups",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.sourceDocument": {
      name: "sourceDocument",
      required: false,
      format: 'public."documentSourceType"',
      in: "query",
      type: "string",
    },
    "rowFilter.documents.sourceDocumentId": {
      name: "sourceDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.labels": {
      name: "labels",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.favorite": {
      name: "favorite",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.documents.lastActivityAt": {
      name: "lastActivityAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.companies": {
      name: "companies",
      description: "companies",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/companies",
      },
    },
    "rowFilter.companies.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.taxId": {
      name: "taxId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.addressLine1": {
      name: "addressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.addressLine2": {
      name: "addressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.city": {
      name: "city",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.stateProvince": {
      name: "stateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.postalCode": {
      name: "postalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.countryCode": {
      name: "countryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.phone": {
      name: "phone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.email": {
      name: "email",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.website": {
      name: "website",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.baseCurrencyCode": {
      name: "baseCurrencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.logoDarkIcon": {
      name: "logoDarkIcon",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.logoLightIcon": {
      name: "logoLightIcon",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.logoDark": {
      name: "logoDark",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.logoLight": {
      name: "logoLight",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.role": {
      name: "role",
      required: false,
      format: "public.role",
      in: "query",
      type: "string",
    },
    "rowFilter.companies.employeeType": {
      name: "employeeType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.purchaseOrder": {
      name: "purchaseOrder",
      description: "purchaseOrder",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrder",
      },
    },
    "rowFilter.purchaseOrder.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.type": {
      name: "type",
      required: false,
      format: 'public."purchaseOrderType"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.status": {
      name: "status",
      required: false,
      format: 'public."purchaseOrderStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.orderDate": {
      name: "orderDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.notes": {
      name: "notes",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.supplierLocationId": {
      name: "supplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.supplierContactId": {
      name: "supplierContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.supplierReference": {
      name: "supplierReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.closedAt": {
      name: "closedAt",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.closedBy": {
      name: "closedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.exchangeRateUpdatedAt": {
      name: "exchangeRateUpdatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrder.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.company": {
      name: "company",
      description: "company",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/company",
      },
    },
    "rowFilter.company.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.taxId": {
      name: "taxId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.addressLine1": {
      name: "addressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.addressLine2": {
      name: "addressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.city": {
      name: "city",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.stateProvince": {
      name: "stateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.postalCode": {
      name: "postalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.countryCode": {
      name: "countryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.phone": {
      name: "phone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.email": {
      name: "email",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.website": {
      name: "website",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.baseCurrencyCode": {
      name: "baseCurrencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.logoDarkIcon": {
      name: "logoDarkIcon",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.logoLightIcon": {
      name: "logoLightIcon",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.logoDark": {
      name: "logoDark",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.company.logoLight": {
      name: "logoLight",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.jobOperationTool": {
      name: "jobOperationTool",
      description: "jobOperationTool",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobOperationTool",
      },
    },
    "rowFilter.jobOperationTool.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.operationId": {
      name: "operationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.toolId": {
      name: "toolId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.quantity": {
      name: "quantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobOperationTool.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.userAttributeCategory": {
      name: "userAttributeCategory",
      description: "userAttributeCategory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/userAttributeCategory",
      },
    },
    "rowFilter.userAttributeCategory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.public": {
      name: "public",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.protected": {
      name: "protected",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeCategory.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.salesOrderLine": {
      name: "salesOrderLine",
      description: "salesOrderLine",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderLine",
      },
    },
    "rowFilter.salesOrderLine.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.salesOrderLineType": {
      name: "salesOrderLineType",
      required: false,
      format: 'public."salesOrderLineType"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.accountNumber": {
      name: "accountNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.assetId": {
      name: "assetId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.saleQuantity": {
      name: "saleQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.quantityToSend": {
      name: "quantityToSend",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.quantitySent": {
      name: "quantitySent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.quantityToInvoice": {
      name: "quantityToInvoice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.quantityInvoiced": {
      name: "quantityInvoiced",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.setupPrice": {
      name: "setupPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.sentComplete": {
      name: "sentComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.invoicedComplete": {
      name: "invoicedComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.requiresInspection": {
      name: "requiresInspection",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.status": {
      name: "status",
      required: false,
      format: 'public."salesOrderLineStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.promisedDate": {
      name: "promisedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.addOnCost": {
      name: "addOnCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.convertedUnitPrice": {
      name: "convertedUnitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.convertedAddOnCost": {
      name: "convertedAddOnCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.shippingCost": {
      name: "shippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.convertedShippingCost": {
      name: "convertedShippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.taxPercent": {
      name: "taxPercent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLine.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.salesOrderTransaction": {
      name: "salesOrderTransaction",
      description: "salesOrderTransaction",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderTransaction",
      },
    },
    "rowFilter.salesOrderTransaction.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderTransaction.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderTransaction.type": {
      name: "type",
      required: false,
      format: 'public."salesOrderTransactionType"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderTransaction.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderTransaction.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.country": {
      name: "country",
      description: "country",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/country",
      },
    },
    "rowFilter.country.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.country.alpha2": {
      name: "alpha2",
      required: false,
      format: "character",
      in: "query",
      type: "string",
    },
    "rowFilter.country.alpha3": {
      name: "alpha3",
      required: false,
      format: "character",
      in: "query",
      type: "string",
    },
    "body.jobMakeMethod": {
      name: "jobMakeMethod",
      description: "jobMakeMethod",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobMakeMethod",
      },
    },
    "rowFilter.jobMakeMethod.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.parentMaterialId": {
      name: "parentMaterialId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.quantityPerParent": {
      name: "quantityPerParent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMakeMethod.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.contact": {
      name: "contact",
      description: "contact",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/contact",
      },
    },
    "rowFilter.contact.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.firstName": {
      name: "firstName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.lastName": {
      name: "lastName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.email": {
      name: "email",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.title": {
      name: "title",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.mobilePhone": {
      name: "mobilePhone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.homePhone": {
      name: "homePhone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.workPhone": {
      name: "workPhone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.notes": {
      name: "notes",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.contact.fullName": {
      name: "fullName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.userDefaults": {
      name: "userDefaults",
      description: "userDefaults",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/userDefaults",
      },
    },
    "rowFilter.userDefaults.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userDefaults.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userDefaults.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.jobMaterial": {
      name: "jobMaterial",
      description: "jobMaterial",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobMaterial",
      },
    },
    "rowFilter.jobMaterial.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.itemType": {
      name: "itemType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.scrapQuantity": {
      name: "scrapQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.unitCost": {
      name: "unitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.jobMakeMethodId": {
      name: "jobMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.jobOperationId": {
      name: "jobOperationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.estimatedQuantity": {
      name: "estimatedQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.defaultShelf": {
      name: "defaultShelf",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.quantityIssued": {
      name: "quantityIssued",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterial.quantityToIssue": {
      name: "quantityToIssue",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderSuppliers": {
      name: "purchaseOrderSuppliers",
      description: "purchaseOrderSuppliers",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderSuppliers",
      },
    },
    "rowFilter.purchaseOrderSuppliers.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderSuppliers.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderSuppliers.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.workCenters": {
      name: "workCenters",
      description: "workCenters",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/workCenters",
      },
    },
    "rowFilter.workCenters.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.laborRate": {
      name: "laborRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.defaultStandardFactor": {
      name: "defaultStandardFactor",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.requiredAbilityId": {
      name: "requiredAbilityId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.machineRate": {
      name: "machineRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.overheadRate": {
      name: "overheadRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenters.processes": {
      name: "processes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.costLedger": {
      name: "costLedger",
      description: "costLedger",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/costLedger",
      },
    },
    "rowFilter.costLedger.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.entryNumber": {
      name: "entryNumber",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.itemLedgerType": {
      name: "itemLedgerType",
      required: false,
      format: 'public."itemLedgerType"',
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.costLedgerType": {
      name: "costLedgerType",
      required: false,
      format: 'public."costLedgerType"',
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.adjustment": {
      name: "adjustment",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.documentType": {
      name: "documentType",
      required: false,
      format: 'public."itemLedgerDocumentType"',
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.externalDocumentId": {
      name: "externalDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.cost": {
      name: "cost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.costPostedToGL": {
      name: "costPostedToGL",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.costLedger.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderLine": {
      name: "purchaseOrderLine",
      description: "purchaseOrderLine",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderLine",
      },
    },
    "rowFilter.purchaseOrderLine.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.purchaseOrderLineType": {
      name: "purchaseOrderLineType",
      required: false,
      format: 'public."purchaseOrderLineType"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.accountNumber": {
      name: "accountNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.assetId": {
      name: "assetId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.purchaseQuantity": {
      name: "purchaseQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.quantityToReceive": {
      name: "quantityToReceive",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.quantityReceived": {
      name: "quantityReceived",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.quantityToInvoice": {
      name: "quantityToInvoice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.quantityInvoiced": {
      name: "quantityInvoiced",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.inventoryUnitOfMeasureCode": {
      name: "inventoryUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.purchaseUnitOfMeasureCode": {
      name: "purchaseUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.setupPrice": {
      name: "setupPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.receivedComplete": {
      name: "receivedComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.invoicedComplete": {
      name: "invoicedComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.requiresInspection": {
      name: "requiresInspection",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.conversionFactor": {
      name: "conversionFactor",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLine.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.salesOrderShipment": {
      name: "salesOrderShipment",
      description: "salesOrderShipment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderShipment",
      },
    },
    "rowFilter.salesOrderShipment.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.shippingMethodId": {
      name: "shippingMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.shippingTermId": {
      name: "shippingTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.receiptRequestedDate": {
      name: "receiptRequestedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.receiptPromisedDate": {
      name: "receiptPromisedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.deliveryDate": {
      name: "deliveryDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.notes": {
      name: "notes",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.trackingNumber": {
      name: "trackingNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.dropShipment": {
      name: "dropShipment",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.supplierLocationId": {
      name: "supplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderShipment.shippingCost": {
      name: "shippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "body.employeeSummary": {
      name: "employeeSummary",
      description: "employeeSummary",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employeeSummary",
      },
    },
    "rowFilter.employeeSummary.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.avatarUrl": {
      name: "avatarUrl",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.title": {
      name: "title",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.startDate": {
      name: "startDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.departmentName": {
      name: "departmentName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeSummary.managerName": {
      name: "managerName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.shelf": {
      name: "shelf",
      description: "shelf",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/shelf",
      },
    },
    "rowFilter.shelf.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.warehouseId": {
      name: "warehouseId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shelf.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.supplierLedger": {
      name: "supplierLedger",
      description: "supplierLedger",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierLedger",
      },
    },
    "rowFilter.supplierLedger.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.entryNumber": {
      name: "entryNumber",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.documentType": {
      name: "documentType",
      required: false,
      format: 'public."supplierLedgerDocumentType"',
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.externalDocumentId": {
      name: "externalDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.amount": {
      name: "amount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierLedger.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.holidayYears": {
      name: "holidayYears",
      description: "holidayYears",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/holidayYears",
      },
    },
    "rowFilter.holidayYears.year": {
      name: "year",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.holidayYears.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.itemUnitSalePrice": {
      name: "itemUnitSalePrice",
      description: "itemUnitSalePrice",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/itemUnitSalePrice",
      },
    },
    "rowFilter.itemUnitSalePrice.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.unitSalePrice": {
      name: "unitSalePrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.salesUnitOfMeasureCode": {
      name: "salesUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.salesBlocked": {
      name: "salesBlocked",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.priceIncludesTax": {
      name: "priceIncludesTax",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.allowInvoiceDiscount": {
      name: "allowInvoiceDiscount",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.itemUnitSalePrice.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.job": {
      name: "job",
      description: "job",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/job",
      },
    },
    "rowFilter.job.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.status": {
      name: "status",
      required: false,
      format: 'public."jobStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.job.dueDate": {
      name: "dueDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.job.deadlineType": {
      name: "deadlineType",
      required: false,
      format: 'public."deadlineType"',
      in: "query",
      type: "string",
    },
    "rowFilter.job.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.job.scrapQuantity": {
      name: "scrapQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.job.productionQuantity": {
      name: "productionQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.job.quantityComplete": {
      name: "quantityComplete",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.job.quantityShipped": {
      name: "quantityShipped",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.job.quantityReceivedToInventory": {
      name: "quantityReceivedToInventory",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.job.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.salesOrderLineId": {
      name: "salesOrderLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.job.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.job.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.job.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.job.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.job.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderFavorite": {
      name: "purchaseOrderFavorite",
      description: "purchaseOrderFavorite",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderFavorite",
      },
    },
    "rowFilter.purchaseOrderFavorite.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderFavorite.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.scrapReason": {
      name: "scrapReason",
      description: "scrapReason",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/scrapReason",
      },
    },
    "rowFilter.scrapReason.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.scrapReason.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.scrapReason.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.scrapReason.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.scrapReason.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.scrapReason.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.scrapReason.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.scrapReason.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.consumables": {
      name: "consumables",
      description: "consumables",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/consumables",
      },
    },
    "rowFilter.consumables.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.defaultMethodType": {
      name: "defaultMethodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.itemTrackingType": {
      name: "itemTrackingType",
      required: false,
      format: 'public."itemTrackingType"',
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.replenishmentSystem": {
      name: "replenishmentSystem",
      required: false,
      format: 'public."itemReplenishmentSystem"',
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.supplierIds": {
      name: "supplierIds",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumables.unitOfMeasure": {
      name: "unitOfMeasure",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.quoteFavorite": {
      name: "quoteFavorite",
      description: "quoteFavorite",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteFavorite",
      },
    },
    "rowFilter.quoteFavorite.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteFavorite.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.shifts": {
      name: "shifts",
      description: "shifts",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/shifts",
      },
    },
    "rowFilter.shifts.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.startTime": {
      name: "startTime",
      required: false,
      format: "time without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.endTime": {
      name: "endTime",
      required: false,
      format: "time without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.sunday": {
      name: "sunday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.monday": {
      name: "monday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.tuesday": {
      name: "tuesday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.wednesday": {
      name: "wednesday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.thursday": {
      name: "thursday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.friday": {
      name: "friday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.saturday": {
      name: "saturday",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.shifts.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderLocations": {
      name: "purchaseOrderLocations",
      description: "purchaseOrderLocations",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderLocations",
      },
    },
    "rowFilter.purchaseOrderLocations.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierName": {
      name: "supplierName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierAddressLine1": {
      name: "supplierAddressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierAddressLine2": {
      name: "supplierAddressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierCity": {
      name: "supplierCity",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierStateProvince": {
      name: "supplierStateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierPostalCode": {
      name: "supplierPostalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierCountryCode": {
      name: "supplierCountryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.supplierCountryName": {
      name: "supplierCountryName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryName": {
      name: "deliveryName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryAddressLine1": {
      name: "deliveryAddressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryAddressLine2": {
      name: "deliveryAddressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryCity": {
      name: "deliveryCity",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryStateProvince": {
      name: "deliveryStateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryPostalCode": {
      name: "deliveryPostalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryCountryCode": {
      name: "deliveryCountryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.deliveryCountryName": {
      name: "deliveryCountryName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.dropShipment": {
      name: "dropShipment",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerName": {
      name: "customerName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerAddressLine1": {
      name: "customerAddressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerAddressLine2": {
      name: "customerAddressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerCity": {
      name: "customerCity",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerStateProvince": {
      name: "customerStateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerPostalCode": {
      name: "customerPostalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerCountryCode": {
      name: "customerCountryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderLocations.customerCountryName": {
      name: "customerCountryName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.quoteLines": {
      name: "quoteLines",
      description: "quoteLines",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteLines",
      },
    },
    "rowFilter.quoteLines.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.quoteRevisionId": {
      name: "quoteRevisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.status": {
      name: "status",
      required: false,
      format: 'public."quoteLineStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.estimatorId": {
      name: "estimatorId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.itemType": {
      name: "itemType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.customerPartId": {
      name: "customerPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.customerPartRevision": {
      name: "customerPartRevision",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.notes": {
      name: "notes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.quantity": {
      name: "quantity",
      required: false,
      format: "numeric[]",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.additionalCharges": {
      name: "additionalCharges",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.noQuoteReason": {
      name: "noQuoteReason",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.taxPercent": {
      name: "taxPercent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.modelId": {
      name: "modelId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.autodeskUrn": {
      name: "autodeskUrn",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.modelPath": {
      name: "modelPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.modelName": {
      name: "modelName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.modelSize": {
      name: "modelSize",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLines.unitCost": {
      name: "unitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "body.customer": {
      name: "customer",
      description: "customer",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customer",
      },
    },
    "rowFilter.customer.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.customerTypeId": {
      name: "customerTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.customerStatusId": {
      name: "customerStatusId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.taxId": {
      name: "taxId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.accountManagerId": {
      name: "accountManagerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.logo": {
      name: "logo",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.phone": {
      name: "phone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.website": {
      name: "website",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.taxPercent": {
      name: "taxPercent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.customer.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.note": {
      name: "note",
      description: "note",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/note",
      },
    },
    "rowFilter.note.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.note.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.note.note": {
      name: "note",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.note.noteRichText": {
      name: "noteRichText",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.note.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.note.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.note.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.note.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.note.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.workCenter": {
      name: "workCenter",
      description: "workCenter",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/workCenter",
      },
    },
    "rowFilter.workCenter.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.laborRate": {
      name: "laborRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.defaultStandardFactor": {
      name: "defaultStandardFactor",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.requiredAbilityId": {
      name: "requiredAbilityId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.machineRate": {
      name: "machineRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.overheadRate": {
      name: "overheadRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenter.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.tool": {
      name: "tool",
      description: "tool",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/tool",
      },
    },
    "rowFilter.tool.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.tool.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.accountCategories": {
      name: "accountCategories",
      description: "accountCategories",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/accountCategories",
      },
    },
    "rowFilter.accountCategories.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.category": {
      name: "category",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.class": {
      name: "class",
      required: false,
      format: 'public."glAccountClass"',
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.incomeBalance": {
      name: "incomeBalance",
      required: false,
      format: 'public."glIncomeBalance"',
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategories.subCategoriesCount": {
      name: "subCategoriesCount",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "body.quotePayment": {
      name: "quotePayment",
      description: "quotePayment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quotePayment",
      },
    },
    "rowFilter.quotePayment.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.invoiceCustomerId": {
      name: "invoiceCustomerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.invoiceCustomerLocationId": {
      name: "invoiceCustomerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.invoiceCustomerContactId": {
      name: "invoiceCustomerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.paymentTermId": {
      name: "paymentTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quotePayment.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.accountCategory": {
      name: "accountCategory",
      description: "accountCategory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/accountCategory",
      },
    },
    "rowFilter.accountCategory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.category": {
      name: "category",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.class": {
      name: "class",
      required: false,
      format: 'public."glAccountClass"',
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.incomeBalance": {
      name: "incomeBalance",
      required: false,
      format: 'public."glIncomeBalance"',
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.accountCategory.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.salesOrders": {
      name: "salesOrders",
      description: "salesOrders",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrders",
      },
    },
    "rowFilter.salesOrders.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.status": {
      name: "status",
      required: false,
      format: 'public."salesOrderStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.orderDate": {
      name: "orderDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.customerContactId": {
      name: "customerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.customerReference": {
      name: "customerReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.closedAt": {
      name: "closedAt",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.closedBy": {
      name: "closedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.exchangeRateUpdatedAt": {
      name: "exchangeRateUpdatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.salesPersonId": {
      name: "salesPersonId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.itemType": {
      name: "itemType",
      required: false,
      format: 'public."itemType"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.orderTotal": {
      name: "orderTotal",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.jobs": {
      name: "jobs",
      required: false,
      format: "json[]",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.shippingMethodName": {
      name: "shippingMethodName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.shippingTermName": {
      name: "shippingTermName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.paymentTermName": {
      name: "paymentTermName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.receiptRequestedDate": {
      name: "receiptRequestedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.receiptPromisedDate": {
      name: "receiptPromisedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.dropShipment": {
      name: "dropShipment",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.shippingCost": {
      name: "shippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrders.favorite": {
      name: "favorite",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "body.supplier": {
      name: "supplier",
      description: "supplier",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplier",
      },
    },
    "rowFilter.supplier.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.supplierTypeId": {
      name: "supplierTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.supplierStatusId": {
      name: "supplierStatusId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.taxId": {
      name: "taxId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.accountManagerId": {
      name: "accountManagerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.logo": {
      name: "logo",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.phone": {
      name: "phone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.website": {
      name: "website",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplier.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.customFieldTable": {
      name: "customFieldTable",
      description: "customFieldTable",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customFieldTable",
      },
    },
    "rowFilter.customFieldTable.table": {
      name: "table",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customFieldTable.module": {
      name: "module",
      required: false,
      format: "public.module",
      in: "query",
      type: "string",
    },
    "rowFilter.customFieldTable.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.shippingMethod": {
      name: "shippingMethod",
      description: "shippingMethod",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/shippingMethod",
      },
    },
    "rowFilter.shippingMethod.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.carrier": {
      name: "carrier",
      required: false,
      format: 'public."shippingCarrier"',
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.carrierAccountId": {
      name: "carrierAccountId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.trackingUrl": {
      name: "trackingUrl",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.shippingMethod.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.methodOperation": {
      name: "methodOperation",
      description: "methodOperation",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/methodOperation",
      },
    },
    "rowFilter.methodOperation.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.makeMethodId": {
      name: "makeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.operationOrder": {
      name: "operationOrder",
      required: false,
      format: 'public."methodOperationOrder"',
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.workCenterId": {
      name: "workCenterId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.setupTime": {
      name: "setupTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.setupUnit": {
      name: "setupUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.laborTime": {
      name: "laborTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.laborUnit": {
      name: "laborUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.machineTime": {
      name: "machineTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.machineUnit": {
      name: "machineUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.operationType": {
      name: "operationType",
      required: false,
      format: 'public."operationType"',
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.operationSupplierProcessId": {
      name: "operationSupplierProcessId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.workInstruction": {
      name: "workInstruction",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.methodOperation.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.salesOrderPayment": {
      name: "salesOrderPayment",
      description: "salesOrderPayment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderPayment",
      },
    },
    "rowFilter.salesOrderPayment.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.invoiceCustomerId": {
      name: "invoiceCustomerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.invoiceCustomerLocationId": {
      name: "invoiceCustomerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.invoiceCustomerContactId": {
      name: "invoiceCustomerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.paymentTermId": {
      name: "paymentTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.paymentComplete": {
      name: "paymentComplete",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderPayment.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.sequence": {
      name: "sequence",
      description: "sequence",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/sequence",
      },
    },
    "rowFilter.sequence.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.table": {
      name: "table",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.prefix": {
      name: "prefix",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.suffix": {
      name: "suffix",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.next": {
      name: "next",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.size": {
      name: "size",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.step": {
      name: "step",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.sequence.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.oauthClient": {
      name: "oauthClient",
      description: "oauthClient",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/oauthClient",
      },
    },
    "rowFilter.oauthClient.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthClient.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthClient.clientId": {
      name: "clientId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthClient.clientSecret": {
      name: "clientSecret",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthClient.redirectUris": {
      name: "redirectUris",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthClient.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthClient.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthClient.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.supplierPart": {
      name: "supplierPart",
      description: "supplierPart",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierPart",
      },
    },
    "rowFilter.supplierPart.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.supplierPartId": {
      name: "supplierPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.supplierUnitOfMeasureCode": {
      name: "supplierUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.minimumOrderQuantity": {
      name: "minimumOrderQuantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.conversionFactor": {
      name: "conversionFactor",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierPart.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.ability": {
      name: "ability",
      description: "ability",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/ability",
      },
    },
    "rowFilter.ability.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.curve": {
      name: "curve",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.shadowWeeks": {
      name: "shadowWeeks",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.ability.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.salesRfqLine": {
      name: "salesRfqLine",
      description: "salesRfqLine",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesRfqLine",
      },
    },
    "rowFilter.salesRfqLine.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.salesRfqId": {
      name: "salesRfqId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.quantity": {
      name: "quantity",
      required: false,
      format: "numeric[]",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.customerPartId": {
      name: "customerPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.customerPartRevision": {
      name: "customerPartRevision",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLine.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.purchaseInvoice": {
      name: "purchaseInvoice",
      description: "purchaseInvoice",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseInvoice",
      },
    },
    "rowFilter.purchaseInvoice.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.invoiceId": {
      name: "invoiceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.status": {
      name: "status",
      required: false,
      format: 'public."purchaseInvoiceStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.supplierReference": {
      name: "supplierReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.invoiceSupplierId": {
      name: "invoiceSupplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.invoiceSupplierLocationId": {
      name: "invoiceSupplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.invoiceSupplierContactId": {
      name: "invoiceSupplierContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.paymentTermId": {
      name: "paymentTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.dateIssued": {
      name: "dateIssued",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.dateDue": {
      name: "dateDue",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.datePaid": {
      name: "datePaid",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.subtotal": {
      name: "subtotal",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.totalDiscount": {
      name: "totalDiscount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.totalAmount": {
      name: "totalAmount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.totalTax": {
      name: "totalTax",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.balance": {
      name: "balance",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoice.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.customerStatus": {
      name: "customerStatus",
      description: "customerStatus",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerStatus",
      },
    },
    "rowFilter.customerStatus.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customerStatus.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.quoteMakeMethod": {
      name: "quoteMakeMethod",
      description: "quoteMakeMethod",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteMakeMethod",
      },
    },
    "rowFilter.quoteMakeMethod.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.parentMaterialId": {
      name: "parentMaterialId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.quantityPerParent": {
      name: "quantityPerParent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMakeMethod.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.employees": {
      name: "employees",
      description: "employees",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employees",
      },
    },
    "rowFilter.employees.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.email": {
      name: "email",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.firstName": {
      name: "firstName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.lastName": {
      name: "lastName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.avatarUrl": {
      name: "avatarUrl",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.employeeTypeId": {
      name: "employeeTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employees.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.quoteOperationsWithMakeMethods": {
      name: "quoteOperationsWithMakeMethods",
      description: "quoteOperationsWithMakeMethods",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteOperationsWithMakeMethods",
      },
    },
    "rowFilter.quoteOperationsWithMakeMethods.makeMethodId": {
      name: "makeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.quoteMakeMethodId": {
      name: "quoteMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.operationOrder": {
      name: "operationOrder",
      required: false,
      format: 'public."methodOperationOrder"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.laborRate": {
      name: "laborRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.overheadRate": {
      name: "overheadRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.workCenterId": {
      name: "workCenterId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.setupTime": {
      name: "setupTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.setupUnit": {
      name: "setupUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.laborTime": {
      name: "laborTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.laborUnit": {
      name: "laborUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.machineTime": {
      name: "machineTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.machineUnit": {
      name: "machineUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.machineRate": {
      name: "machineRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.operationType": {
      name: "operationType",
      required: false,
      format: 'public."operationType"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.operationMinimumCost": {
      name: "operationMinimumCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.operationLeadTime": {
      name: "operationLeadTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.operationUnitCost": {
      name: "operationUnitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.operationSupplierProcessId": {
      name: "operationSupplierProcessId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationsWithMakeMethods.workInstruction": {
      name: "workInstruction",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "body.oauthToken": {
      name: "oauthToken",
      description: "oauthToken",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/oauthToken",
      },
    },
    "rowFilter.oauthToken.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthToken.accessToken": {
      name: "accessToken",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthToken.refreshToken": {
      name: "refreshToken",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthToken.clientId": {
      name: "clientId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthToken.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthToken.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthToken.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthToken.expiresAt": {
      name: "expiresAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.supplierStatus": {
      name: "supplierStatus",
      description: "supplierStatus",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierStatus",
      },
    },
    "rowFilter.supplierStatus.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierStatus.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.terms": {
      name: "terms",
      description: "terms",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/terms",
      },
    },
    "rowFilter.terms.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.terms.purchasingTerms": {
      name: "purchasingTerms",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.terms.salesTerms": {
      name: "salesTerms",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.terms.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.terms.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.employeeShift": {
      name: "employeeShift",
      description: "employeeShift",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employeeShift",
      },
    },
    "rowFilter.employeeShift.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeShift.employeeId": {
      name: "employeeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeShift.shiftId": {
      name: "shiftId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.quote": {
      name: "quote",
      description: "quote",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quote",
      },
    },
    "rowFilter.quote.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.dueDate": {
      name: "dueDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.expirationDate": {
      name: "expirationDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.status": {
      name: "status",
      required: false,
      format: 'public."quoteStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.quote.salesPersonId": {
      name: "salesPersonId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.estimatorId": {
      name: "estimatorId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.customerContactId": {
      name: "customerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.customerReference": {
      name: "customerReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.exchangeRateUpdatedAt": {
      name: "exchangeRateUpdatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.externalLinkId": {
      name: "externalLinkId",
      required: false,
      format: "uuid",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.digitalQuoteAcceptedBy": {
      name: "digitalQuoteAcceptedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.digitalQuoteAcceptedByEmail": {
      name: "digitalQuoteAcceptedByEmail",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quote.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.user": {
      name: "user",
      description: "user",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/user",
      },
    },
    "rowFilter.user.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.user.email": {
      name: "email",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.user.firstName": {
      name: "firstName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.user.lastName": {
      name: "lastName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.user.fullName": {
      name: "fullName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.user.about": {
      name: "about",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.user.avatarUrl": {
      name: "avatarUrl",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.user.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.user.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.user.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.user.developer": {
      name: "developer",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.user.admin": {
      name: "admin",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "body.quoteShipment": {
      name: "quoteShipment",
      description: "quoteShipment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteShipment",
      },
    },
    "rowFilter.quoteShipment.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.shippingMethodId": {
      name: "shippingMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.shippingTermId": {
      name: "shippingTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.receiptRequestedDate": {
      name: "receiptRequestedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteShipment.shippingCost": {
      name: "shippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "body.modelUpload": {
      name: "modelUpload",
      description: "modelUpload",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/modelUpload",
      },
    },
    "rowFilter.modelUpload.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.size": {
      name: "size",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.modelPath": {
      name: "modelPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.autodeskUrn": {
      name: "autodeskUrn",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.modelUpload.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderStatusHistory": {
      name: "purchaseOrderStatusHistory",
      description: "purchaseOrderStatusHistory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderStatusHistory",
      },
    },
    "rowFilter.purchaseOrderStatusHistory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderStatusHistory.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderStatusHistory.status": {
      name: "status",
      required: false,
      format: 'public."purchaseOrderStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderStatusHistory.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderStatusHistory.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.contractors": {
      name: "contractors",
      description: "contractors",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/contractors",
      },
    },
    "rowFilter.contractors.supplierContactId": {
      name: "supplierContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.hoursPerWeek": {
      name: "hoursPerWeek",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.supplierName": {
      name: "supplierName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.fullName": {
      name: "fullName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.firstName": {
      name: "firstName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.lastName": {
      name: "lastName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.email": {
      name: "email",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.contractors.abilityIds": {
      name: "abilityIds",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.salesOrderStatusHistory": {
      name: "salesOrderStatusHistory",
      description: "salesOrderStatusHistory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderStatusHistory",
      },
    },
    "rowFilter.salesOrderStatusHistory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderStatusHistory.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderStatusHistory.status": {
      name: "status",
      required: false,
      format: 'public."salesOrderStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderStatusHistory.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderStatusHistory.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.jobs": {
      name: "jobs",
      description: "jobs",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobs",
      },
    },
    "rowFilter.jobs.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.status": {
      name: "status",
      required: false,
      format: 'public."jobStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.dueDate": {
      name: "dueDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.deadlineType": {
      name: "deadlineType",
      required: false,
      format: 'public."deadlineType"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.scrapQuantity": {
      name: "scrapQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.productionQuantity": {
      name: "productionQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.quantityComplete": {
      name: "quantityComplete",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.quantityShipped": {
      name: "quantityShipped",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.quantityReceivedToInventory": {
      name: "quantityReceivedToInventory",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.salesOrderLineId": {
      name: "salesOrderLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.itemType": {
      name: "itemType",
      required: false,
      format: 'public."itemType"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.itemTrackingType": {
      name: "itemTrackingType",
      required: false,
      format: 'public."itemTrackingType"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.replenishmentSystem": {
      name: "replenishmentSystem",
      required: false,
      format: 'public."itemReplenishmentSystem"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.modelId": {
      name: "modelId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.autodeskUrn": {
      name: "autodeskUrn",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.modelPath": {
      name: "modelPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.modelName": {
      name: "modelName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.modelSize": {
      name: "modelSize",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.salesOrderReadableId": {
      name: "salesOrderReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobs.quoteReadableId": {
      name: "quoteReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.customField": {
      name: "customField",
      description: "customField",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customField",
      },
    },
    "rowFilter.customField.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.sortOrder": {
      name: "sortOrder",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.table": {
      name: "table",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.dataTypeId": {
      name: "dataTypeId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.listOptions": {
      name: "listOptions",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customField.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.quoteCustomerDetails": {
      name: "quoteCustomerDetails",
      description: "quoteCustomerDetails",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteCustomerDetails",
      },
    },
    "rowFilter.quoteCustomerDetails.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerName": {
      name: "customerName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.contactName": {
      name: "contactName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.contactEmail": {
      name: "contactEmail",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerAddressLine1": {
      name: "customerAddressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerAddressLine2": {
      name: "customerAddressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerCity": {
      name: "customerCity",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerStateProvince": {
      name: "customerStateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerPostalCode": {
      name: "customerPostalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerCountryCode": {
      name: "customerCountryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteCustomerDetails.customerCountryName": {
      name: "customerCountryName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.pickMethod": {
      name: "pickMethod",
      description: "pickMethod",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/pickMethod",
      },
    },
    "rowFilter.pickMethod.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.defaultShelfId": {
      name: "defaultShelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.pickMethod.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.group": {
      name: "group",
      description: "group",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/group",
      },
    },
    "rowFilter.group.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.group.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.group.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.group.isIdentityGroup": {
      name: "isIdentityGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.group.isEmployeeTypeGroup": {
      name: "isEmployeeTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.group.isCustomerOrgGroup": {
      name: "isCustomerOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.group.isCustomerTypeGroup": {
      name: "isCustomerTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.group.isSupplierTypeGroup": {
      name: "isSupplierTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.group.isSupplierOrgGroup": {
      name: "isSupplierOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.group.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.group.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.parts": {
      name: "parts",
      description: "parts",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/parts",
      },
    },
    "rowFilter.parts.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.defaultMethodType": {
      name: "defaultMethodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.parts.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.itemTrackingType": {
      name: "itemTrackingType",
      required: false,
      format: 'public."itemTrackingType"',
      in: "query",
      type: "string",
    },
    "rowFilter.parts.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.replenishmentSystem": {
      name: "replenishmentSystem",
      required: false,
      format: 'public."itemReplenishmentSystem"',
      in: "query",
      type: "string",
    },
    "rowFilter.parts.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.modelId": {
      name: "modelId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.autodeskUrn": {
      name: "autodeskUrn",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.modelPath": {
      name: "modelPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.modelName": {
      name: "modelName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.modelSize": {
      name: "modelSize",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.fromDate": {
      name: "fromDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.toDate": {
      name: "toDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.supplierIds": {
      name: "supplierIds",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.parts.unitOfMeasure": {
      name: "unitOfMeasure",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.receiptLine": {
      name: "receiptLine",
      description: "receiptLine",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/receiptLine",
      },
    },
    "rowFilter.receiptLine.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.receiptId": {
      name: "receiptId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.lineId": {
      name: "lineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.orderQuantity": {
      name: "orderQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.outstandingQuantity": {
      name: "outstandingQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.receivedQuantity": {
      name: "receivedQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.unitOfMeasure": {
      name: "unitOfMeasure",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receiptLine.conversionFactor": {
      name: "conversionFactor",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "body.quoteLinePrice": {
      name: "quoteLinePrice",
      description: "quoteLinePrice",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteLinePrice",
      },
    },
    "rowFilter.quoteLinePrice.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.leadTime": {
      name: "leadTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.discountPercent": {
      name: "discountPercent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.convertedUnitPrice": {
      name: "convertedUnitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.netUnitPrice": {
      name: "netUnitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.convertedNetUnitPrice": {
      name: "convertedNetUnitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.netExtendedPrice": {
      name: "netExtendedPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.convertedNetExtendedPrice": {
      name: "convertedNetExtendedPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.shippingCost": {
      name: "shippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLinePrice.convertedShippingCost": {
      name: "convertedShippingCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "body.makeMethod": {
      name: "makeMethod",
      description: "makeMethod",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/makeMethod",
      },
    },
    "rowFilter.makeMethod.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.makeMethod.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.groups": {
      name: "groups",
      description: "groups",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/groups",
      },
    },
    "rowFilter.groups.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.isEmployeeTypeGroup": {
      name: "isEmployeeTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.isCustomerOrgGroup": {
      name: "isCustomerOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.isCustomerTypeGroup": {
      name: "isCustomerTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.isSupplierOrgGroup": {
      name: "isSupplierOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.isSupplierTypeGroup": {
      name: "isSupplierTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.parentId": {
      name: "parentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups.users": {
      name: "users",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.purchaseOrderDelivery": {
      name: "purchaseOrderDelivery",
      description: "purchaseOrderDelivery",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrderDelivery",
      },
    },
    "rowFilter.purchaseOrderDelivery.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.shippingMethodId": {
      name: "shippingMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.shippingTermId": {
      name: "shippingTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.receiptRequestedDate": {
      name: "receiptRequestedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.receiptPromisedDate": {
      name: "receiptPromisedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.deliveryDate": {
      name: "deliveryDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.notes": {
      name: "notes",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.trackingNumber": {
      name: "trackingNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.dropShipment": {
      name: "dropShipment",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrderDelivery.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.warehouse": {
      name: "warehouse",
      description: "warehouse",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/warehouse",
      },
    },
    "rowFilter.warehouse.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.requiresPick": {
      name: "requiresPick",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.requiresPutAway": {
      name: "requiresPutAway",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.requiresBin": {
      name: "requiresBin",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.requiresReceive": {
      name: "requiresReceive",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.requiresShipment": {
      name: "requiresShipment",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.warehouse.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.itemLedger": {
      name: "itemLedger",
      description: "itemLedger",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/itemLedger",
      },
    },
    "rowFilter.itemLedger.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.entryNumber": {
      name: "entryNumber",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.entryType": {
      name: "entryType",
      required: false,
      format: 'public."itemLedgerType"',
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.documentType": {
      name: "documentType",
      required: false,
      format: 'public."itemLedgerDocumentType"',
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.externalDocumentId": {
      name: "externalDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemLedger.documentLineId": {
      name: "documentLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.salesRfqFavorite": {
      name: "salesRfqFavorite",
      description: "salesRfqFavorite",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesRfqFavorite",
      },
    },
    "rowFilter.salesRfqFavorite.rfqId": {
      name: "rfqId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqFavorite.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.externalLink": {
      name: "externalLink",
      description: "externalLink",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/externalLink",
      },
    },
    "rowFilter.externalLink.id": {
      name: "id",
      required: false,
      format: "uuid",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLink.documentType": {
      name: "documentType",
      required: false,
      format: 'public."externalLinkDocumentType"',
      in: "query",
      type: "string",
    },
    "rowFilter.externalLink.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLink.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLink.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLink.expiresAt": {
      name: "expiresAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLink.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.quoteOperationTool": {
      name: "quoteOperationTool",
      description: "quoteOperationTool",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteOperationTool",
      },
    },
    "rowFilter.quoteOperationTool.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.operationId": {
      name: "operationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.toolId": {
      name: "toolId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.quantity": {
      name: "quantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperationTool.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.supplierContact": {
      name: "supplierContact",
      description: "supplierContact",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierContact",
      },
    },
    "rowFilter.supplierContact.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierContact.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierContact.contactId": {
      name: "contactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierContact.supplierLocationId": {
      name: "supplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierContact.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierContact.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierContact.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.integrations": {
      name: "integrations",
      description: "integrations",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/integrations",
      },
    },
    "rowFilter.integrations.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.integrations.jsonschema": {
      name: "jsonschema",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.integrations.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.integrations.metadata": {
      name: "metadata",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.integrations.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "body.groups_recursive": {
      name: "groups_recursive",
      description: "groups_recursive",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/groups_recursive",
      },
    },
    "rowFilter.groups_recursive.groupId": {
      name: "groupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.parentId": {
      name: "parentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.isIdentityGroup": {
      name: "isIdentityGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.isEmployeeTypeGroup": {
      name: "isEmployeeTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.isCustomerOrgGroup": {
      name: "isCustomerOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.isCustomerTypeGroup": {
      name: "isCustomerTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.isSupplierOrgGroup": {
      name: "isSupplierOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.isSupplierTypeGroup": {
      name: "isSupplierTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groups_recursive.user": {
      name: "user",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.purchaseInvoices": {
      name: "purchaseInvoices",
      description: "purchaseInvoices",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseInvoices",
      },
    },
    "rowFilter.purchaseInvoices.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.invoiceId": {
      name: "invoiceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.supplierReference": {
      name: "supplierReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.invoiceSupplierId": {
      name: "invoiceSupplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.dateIssued": {
      name: "dateIssued",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.dateDue": {
      name: "dateDue",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.datePaid": {
      name: "datePaid",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.paymentTermId": {
      name: "paymentTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.subtotal": {
      name: "subtotal",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.totalDiscount": {
      name: "totalDiscount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.totalAmount": {
      name: "totalAmount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.totalTax": {
      name: "totalTax",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.balance": {
      name: "balance",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.status": {
      name: "status",
      required: false,
      format: 'public."purchaseInvoiceStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoices.paymentTermName": {
      name: "paymentTermName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.customerContact": {
      name: "customerContact",
      description: "customerContact",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerContact",
      },
    },
    "rowFilter.customerContact.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerContact.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerContact.contactId": {
      name: "contactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerContact.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerContact.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerContact.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customerContact.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.accountingPeriod": {
      name: "accountingPeriod",
      description: "accountingPeriod",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/accountingPeriod",
      },
    },
    "rowFilter.accountingPeriod.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.startDate": {
      name: "startDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.endDate": {
      name: "endDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.status": {
      name: "status",
      required: false,
      format: 'public."accountingPeriodStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.closedAt": {
      name: "closedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.closedBy": {
      name: "closedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accountingPeriod.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.purchaseInvoicePaymentRelation": {
      name: "purchaseInvoicePaymentRelation",
      description: "purchaseInvoicePaymentRelation",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseInvoicePaymentRelation",
      },
    },
    "rowFilter.purchaseInvoicePaymentRelation.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePaymentRelation.invoiceId": {
      name: "invoiceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoicePaymentRelation.paymentId": {
      name: "paymentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.itemPlanning": {
      name: "itemPlanning",
      description: "itemPlanning",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/itemPlanning",
      },
    },
    "rowFilter.itemPlanning.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.reorderingPolicy": {
      name: "reorderingPolicy",
      required: false,
      format: 'public."itemReorderingPolicy"',
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.critical": {
      name: "critical",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.safetyStockQuantity": {
      name: "safetyStockQuantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.safetyStockLeadTime": {
      name: "safetyStockLeadTime",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.demandAccumulationPeriod": {
      name: "demandAccumulationPeriod",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.demandReschedulingPeriod": {
      name: "demandReschedulingPeriod",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.demandAccumulationIncludesInventory": {
      name: "demandAccumulationIncludesInventory",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.reorderPoint": {
      name: "reorderPoint",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.reorderQuantity": {
      name: "reorderQuantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.reorderMaximumInventory": {
      name: "reorderMaximumInventory",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.minimumOrderQuantity": {
      name: "minimumOrderQuantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.maximumOrderQuantity": {
      name: "maximumOrderQuantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.orderMultiple": {
      name: "orderMultiple",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPlanning.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.employeeJob": {
      name: "employeeJob",
      description: "employeeJob",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employeeJob",
      },
    },
    "rowFilter.employeeJob.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.shiftId": {
      name: "shiftId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.managerId": {
      name: "managerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.title": {
      name: "title",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.startDate": {
      name: "startDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.departmentId": {
      name: "departmentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeJob.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.account": {
      name: "account",
      description: "account",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/account",
      },
    },
    "rowFilter.account.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.number": {
      name: "number",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.type": {
      name: "type",
      required: false,
      format: 'public."glAccountType"',
      in: "query",
      type: "string",
    },
    "rowFilter.account.class": {
      name: "class",
      required: false,
      format: 'public."glAccountClass"',
      in: "query",
      type: "string",
    },
    "rowFilter.account.accountCategoryId": {
      name: "accountCategoryId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.accountSubcategoryId": {
      name: "accountSubcategoryId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.incomeBalance": {
      name: "incomeBalance",
      required: false,
      format: 'public."glIncomeBalance"',
      in: "query",
      type: "string",
    },
    "rowFilter.account.consolidatedRate": {
      name: "consolidatedRate",
      required: false,
      format: 'public."glConsolidatedRate"',
      in: "query",
      type: "string",
    },
    "rowFilter.account.directPosting": {
      name: "directPosting",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.account.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.account.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.account.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.account.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.account.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.account.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.companyIntegration": {
      name: "companyIntegration",
      description: "companyIntegration",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/companyIntegration",
      },
    },
    "rowFilter.companyIntegration.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companyIntegration.metadata": {
      name: "metadata",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.companyIntegration.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companyIntegration.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.companyIntegration.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.companyIntegration.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.salesRfqLines": {
      name: "salesRfqLines",
      description: "salesRfqLines",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesRfqLines",
      },
    },
    "rowFilter.salesRfqLines.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.salesRfqId": {
      name: "salesRfqId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.quantity": {
      name: "quantity",
      required: false,
      format: "numeric[]",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.customerPartId": {
      name: "customerPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.customerPartRevision": {
      name: "customerPartRevision",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.modelId": {
      name: "modelId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.autodeskUrn": {
      name: "autodeskUrn",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.modelPath": {
      name: "modelPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.modelName": {
      name: "modelName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.modelSize": {
      name: "modelSize",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.itemName": {
      name: "itemName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqLines.itemType": {
      name: "itemType",
      required: false,
      format: 'public."itemType"',
      in: "query",
      type: "string",
    },
    "body.companySettings": {
      name: "companySettings",
      description: "companySettings",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/companySettings",
      },
    },
    "rowFilter.companySettings.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.companySettings.digitalQuoteEnabled": {
      name: "digitalQuoteEnabled",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.companySettings.digitalQuoteNotificationGroup": {
      name: "digitalQuoteNotificationGroup",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.companySettings.digitalQuoteIncludesPurchaseOrders": {
      name: "digitalQuoteIncludesPurchaseOrders",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "body.externalLinkMessage": {
      name: "externalLinkMessage",
      description: "externalLinkMessage",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/externalLinkMessage",
      },
    },
    "rowFilter.externalLinkMessage.id": {
      name: "id",
      required: false,
      format: "uuid",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLinkMessage.externalLinkId": {
      name: "externalLinkId",
      required: false,
      format: "uuid",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLinkMessage.message": {
      name: "message",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLinkMessage.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLinkMessage.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.externalLinkMessage.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.jobFavorite": {
      name: "jobFavorite",
      description: "jobFavorite",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobFavorite",
      },
    },
    "rowFilter.jobFavorite.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobFavorite.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.documentTransaction": {
      name: "documentTransaction",
      description: "documentTransaction",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/documentTransaction",
      },
    },
    "rowFilter.documentTransaction.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documentTransaction.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documentTransaction.type": {
      name: "type",
      required: false,
      format: 'public."documentTransactionType"',
      in: "query",
      type: "string",
    },
    "rowFilter.documentTransaction.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documentTransaction.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.materialSubstance": {
      name: "materialSubstance",
      description: "materialSubstance",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/materialSubstance",
      },
    },
    "rowFilter.materialSubstance.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.materialSubstance.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.workCenterProcess": {
      name: "workCenterProcess",
      description: "workCenterProcess",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/workCenterProcess",
      },
    },
    "rowFilter.workCenterProcess.workCenterId": {
      name: "workCenterId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenterProcess.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenterProcess.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenterProcess.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenterProcess.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenterProcess.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.workCenterProcess.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.partners": {
      name: "partners",
      description: "partners",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/partners",
      },
    },
    "rowFilter.partners.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.hoursPerWeek": {
      name: "hoursPerWeek",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.abilityId": {
      name: "abilityId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.supplierLocationId": {
      name: "supplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.abilityName": {
      name: "abilityName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.supplierName": {
      name: "supplierName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.city": {
      name: "city",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partners.state": {
      name: "state",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.consumable": {
      name: "consumable",
      description: "consumable",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/consumable",
      },
    },
    "rowFilter.consumable.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.consumable.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.location": {
      name: "location",
      description: "location",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/location",
      },
    },
    "rowFilter.location.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.addressLine1": {
      name: "addressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.addressLine2": {
      name: "addressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.city": {
      name: "city",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.stateProvince": {
      name: "stateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.postalCode": {
      name: "postalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.countryCode": {
      name: "countryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.timezone": {
      name: "timezone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.latitude": {
      name: "latitude",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.location.longitude": {
      name: "longitude",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.location.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.location.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.location.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.location.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.location.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.employeeAbility": {
      name: "employeeAbility",
      description: "employeeAbility",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employeeAbility",
      },
    },
    "rowFilter.employeeAbility.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeAbility.employeeId": {
      name: "employeeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeAbility.abilityId": {
      name: "abilityId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeAbility.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeAbility.lastTrainingDate": {
      name: "lastTrainingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeAbility.trainingDays": {
      name: "trainingDays",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeAbility.trainingCompleted": {
      name: "trainingCompleted",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeAbility.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.quoteOperation": {
      name: "quoteOperation",
      description: "quoteOperation",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteOperation",
      },
    },
    "rowFilter.quoteOperation.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.quoteMakeMethodId": {
      name: "quoteMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.operationOrder": {
      name: "operationOrder",
      required: false,
      format: 'public."methodOperationOrder"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.laborRate": {
      name: "laborRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.overheadRate": {
      name: "overheadRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.workCenterId": {
      name: "workCenterId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.setupTime": {
      name: "setupTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.setupUnit": {
      name: "setupUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.laborTime": {
      name: "laborTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.laborUnit": {
      name: "laborUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.machineTime": {
      name: "machineTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.machineUnit": {
      name: "machineUnit",
      required: false,
      format: "public.factor",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.machineRate": {
      name: "machineRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.operationType": {
      name: "operationType",
      required: false,
      format: 'public."operationType"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.operationMinimumCost": {
      name: "operationMinimumCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.operationLeadTime": {
      name: "operationLeadTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.operationUnitCost": {
      name: "operationUnitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.operationSupplierProcessId": {
      name: "operationSupplierProcessId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.workInstruction": {
      name: "workInstruction",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteOperation.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.salesRfq": {
      name: "salesRfq",
      description: "salesRfq",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesRfq",
      },
    },
    "rowFilter.salesRfq.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.rfqId": {
      name: "rfqId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.status": {
      name: "status",
      required: false,
      format: 'public."salesRfqStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.employeeId": {
      name: "employeeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.customerContactId": {
      name: "customerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.customerReference": {
      name: "customerReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.rfqDate": {
      name: "rfqDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.expirationDate": {
      name: "expirationDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.salesPersonId": {
      name: "salesPersonId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfq.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.paymentTerm": {
      name: "paymentTerm",
      description: "paymentTerm",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/paymentTerm",
      },
    },
    "rowFilter.paymentTerm.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.daysDue": {
      name: "daysDue",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.daysDiscount": {
      name: "daysDiscount",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.discountPercentage": {
      name: "discountPercentage",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.calculationMethod": {
      name: "calculationMethod",
      required: false,
      format: 'public."paymentTermCalculationMethod"',
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.paymentTerm.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.apiKey": {
      name: "apiKey",
      description: "apiKey",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/apiKey",
      },
    },
    "rowFilter.apiKey.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.apiKey.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.apiKey.key": {
      name: "key",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.apiKey.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.apiKey.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.apiKey.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.salesOrderCustomers": {
      name: "salesOrderCustomers",
      description: "salesOrderCustomers",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderCustomers",
      },
    },
    "rowFilter.salesOrderCustomers.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderCustomers.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderCustomers.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.opportunity": {
      name: "opportunity",
      description: "opportunity",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/opportunity",
      },
    },
    "rowFilter.opportunity.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.salesRfqId": {
      name: "salesRfqId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.purchaseOrderDocumentPath": {
      name: "purchaseOrderDocumentPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.requestForQuoteDocumentPath": {
      name: "requestForQuoteDocumentPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.salesRfqCompletedDate": {
      name: "salesRfqCompletedDate",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.quoteCompletedDate": {
      name: "quoteCompletedDate",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.opportunity.salesOrderCompletedDate": {
      name: "salesOrderCompletedDate",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.documentLabels": {
      name: "documentLabels",
      description: "documentLabels",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/documentLabels",
      },
    },
    "rowFilter.documentLabels.label": {
      name: "label",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documentLabels.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.groupMembers": {
      name: "groupMembers",
      description: "groupMembers",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/groupMembers",
      },
    },
    "rowFilter.groupMembers.id": {
      name: "id",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.isIdentityGroup": {
      name: "isIdentityGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.isEmployeeTypeGroup": {
      name: "isEmployeeTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.isCustomerOrgGroup": {
      name: "isCustomerOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.isCustomerTypeGroup": {
      name: "isCustomerTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.isSupplierOrgGroup": {
      name: "isSupplierOrgGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.isSupplierTypeGroup": {
      name: "isSupplierTypeGroup",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.groupId": {
      name: "groupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.memberGroupId": {
      name: "memberGroupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.memberUserId": {
      name: "memberUserId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.groupMembers.user": {
      name: "user",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.salesOrder": {
      name: "salesOrder",
      description: "salesOrder",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrder",
      },
    },
    "rowFilter.salesOrder.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.status": {
      name: "status",
      required: false,
      format: 'public."salesOrderStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.orderDate": {
      name: "orderDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.customerContactId": {
      name: "customerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.customerReference": {
      name: "customerReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.closedAt": {
      name: "closedAt",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.closedBy": {
      name: "closedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.exchangeRateUpdatedAt": {
      name: "exchangeRateUpdatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrder.salesPersonId": {
      name: "salesPersonId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.userAttributeValue": {
      name: "userAttributeValue",
      description: "userAttributeValue",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/userAttributeValue",
      },
    },
    "rowFilter.userAttributeValue.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.userAttributeId": {
      name: "userAttributeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.valueBoolean": {
      name: "valueBoolean",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.valueDate": {
      name: "valueDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.valueNumeric": {
      name: "valueNumeric",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.valueText": {
      name: "valueText",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.valueUser": {
      name: "valueUser",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttributeValue.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.unitOfMeasure": {
      name: "unitOfMeasure",
      description: "unitOfMeasure",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/unitOfMeasure",
      },
    },
    "rowFilter.unitOfMeasure.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.code": {
      name: "code",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.unitOfMeasure.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.documentFavorite": {
      name: "documentFavorite",
      description: "documentFavorite",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/documentFavorite",
      },
    },
    "rowFilter.documentFavorite.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documentFavorite.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.partner": {
      name: "partner",
      description: "partner",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/partner",
      },
    },
    "rowFilter.partner.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.hoursPerWeek": {
      name: "hoursPerWeek",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.abilityId": {
      name: "abilityId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.partner.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.address": {
      name: "address",
      description: "address",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/address",
      },
    },
    "rowFilter.address.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.addressLine1": {
      name: "addressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.addressLine2": {
      name: "addressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.city": {
      name: "city",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.stateProvince": {
      name: "stateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.postalCode": {
      name: "postalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.countryCode": {
      name: "countryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.phone": {
      name: "phone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.address.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.part": {
      name: "part",
      description: "part",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/part",
      },
    },
    "rowFilter.part.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.part.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.part.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.part.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.part.fromDate": {
      name: "fromDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.part.toDate": {
      name: "toDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.part.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.part.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.part.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.part.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.part.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.part.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.part.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.part.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.customerPartToItem": {
      name: "customerPartToItem",
      description: "customerPartToItem",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerPartToItem",
      },
    },
    "rowFilter.customerPartToItem.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPartToItem.customerPartId": {
      name: "customerPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPartToItem.customerPartRevision": {
      name: "customerPartRevision",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPartToItem.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPartToItem.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerPartToItem.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.materials": {
      name: "materials",
      description: "materials",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/materials",
      },
    },
    "rowFilter.materials.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.defaultMethodType": {
      name: "defaultMethodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.materials.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.itemTrackingType": {
      name: "itemTrackingType",
      required: false,
      format: 'public."itemTrackingType"',
      in: "query",
      type: "string",
    },
    "rowFilter.materials.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.replenishmentSystem": {
      name: "replenishmentSystem",
      required: false,
      format: 'public."itemReplenishmentSystem"',
      in: "query",
      type: "string",
    },
    "rowFilter.materials.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.materialFormId": {
      name: "materialFormId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.materialSubstanceId": {
      name: "materialSubstanceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.grade": {
      name: "grade",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.dimensions": {
      name: "dimensions",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.finish": {
      name: "finish",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.materialForm": {
      name: "materialForm",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.materialSubstance": {
      name: "materialSubstance",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.supplierIds": {
      name: "supplierIds",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.materials.unitOfMeasure": {
      name: "unitOfMeasure",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.employeeType": {
      name: "employeeType",
      description: "employeeType",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employeeType",
      },
    },
    "rowFilter.employeeType.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeType.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeType.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeType.protected": {
      name: "protected",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeType.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.employeeType.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.itemReplenishment": {
      name: "itemReplenishment",
      description: "itemReplenishment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/itemReplenishment",
      },
    },
    "rowFilter.itemReplenishment.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.preferredSupplierId": {
      name: "preferredSupplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.purchasingLeadTime": {
      name: "purchasingLeadTime",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.purchasingUnitOfMeasureCode": {
      name: "purchasingUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.conversionFactor": {
      name: "conversionFactor",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.purchasingBlocked": {
      name: "purchasingBlocked",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.manufacturingBlocked": {
      name: "manufacturingBlocked",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.requiresConfiguration": {
      name: "requiresConfiguration",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.lotSize": {
      name: "lotSize",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.scrapPercentage": {
      name: "scrapPercentage",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemReplenishment.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.documentLabel": {
      name: "documentLabel",
      description: "documentLabel",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/documentLabel",
      },
    },
    "rowFilter.documentLabel.documentId": {
      name: "documentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documentLabel.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.documentLabel.label": {
      name: "label",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.supplierShipping": {
      name: "supplierShipping",
      description: "supplierShipping",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierShipping",
      },
    },
    "rowFilter.supplierShipping.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.shippingSupplierId": {
      name: "shippingSupplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.shippingSupplierLocationId": {
      name: "shippingSupplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.shippingSupplierContactId": {
      name: "shippingSupplierContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.shippingTermId": {
      name: "shippingTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.shippingMethodId": {
      name: "shippingMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierShipping.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.productionQuantity": {
      name: "productionQuantity",
      description: "productionQuantity",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/productionQuantity",
      },
    },
    "rowFilter.productionQuantity.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.jobOperationId": {
      name: "jobOperationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.type": {
      name: "type",
      required: false,
      format: 'public."productionQuantityType"',
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.quantity": {
      name: "quantity",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.setupProductionEventId": {
      name: "setupProductionEventId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.laborProductionEventId": {
      name: "laborProductionEventId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.machineProductionEventId": {
      name: "machineProductionEventId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.notes": {
      name: "notes",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionQuantity.scrapReasonId": {
      name: "scrapReasonId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.customerShipping": {
      name: "customerShipping",
      description: "customerShipping",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customerShipping",
      },
    },
    "rowFilter.customerShipping.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.shippingCustomerId": {
      name: "shippingCustomerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.shippingCustomerLocationId": {
      name: "shippingCustomerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.shippingCustomerContactId": {
      name: "shippingCustomerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.shippingTermId": {
      name: "shippingTermId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.shippingMethodId": {
      name: "shippingMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customerShipping.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.fiscalYearSettings": {
      name: "fiscalYearSettings",
      description: "fiscalYearSettings",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/fiscalYearSettings",
      },
    },
    "rowFilter.fiscalYearSettings.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fiscalYearSettings.startMonth": {
      name: "startMonth",
      required: false,
      format: "public.month",
      in: "query",
      type: "string",
    },
    "rowFilter.fiscalYearSettings.taxStartMonth": {
      name: "taxStartMonth",
      required: false,
      format: "public.month",
      in: "query",
      type: "string",
    },
    "rowFilter.fiscalYearSettings.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.itemCost": {
      name: "itemCost",
      description: "itemCost",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/itemCost",
      },
    },
    "rowFilter.itemCost.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.itemPostingGroupId": {
      name: "itemPostingGroupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.costingMethod": {
      name: "costingMethod",
      required: false,
      format: 'public."itemCostingMethod"',
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.standardCost": {
      name: "standardCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.unitCost": {
      name: "unitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.costIsAdjusted": {
      name: "costIsAdjusted",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.itemCost.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.salesOrderLocations": {
      name: "salesOrderLocations",
      description: "salesOrderLocations",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderLocations",
      },
    },
    "rowFilter.salesOrderLocations.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerName": {
      name: "customerName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerAddressLine1": {
      name: "customerAddressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerAddressLine2": {
      name: "customerAddressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerCity": {
      name: "customerCity",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerStateProvince": {
      name: "customerStateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerPostalCode": {
      name: "customerPostalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerCountryCode": {
      name: "customerCountryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.customerCountryName": {
      name: "customerCountryName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentCustomerName": {
      name: "paymentCustomerName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentAddressLine1": {
      name: "paymentAddressLine1",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentAddressLine2": {
      name: "paymentAddressLine2",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentCity": {
      name: "paymentCity",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentStateProvince": {
      name: "paymentStateProvince",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentPostalCode": {
      name: "paymentPostalCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentCountryCode": {
      name: "paymentCountryCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderLocations.paymentCountryName": {
      name: "paymentCountryName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.feedback": {
      name: "feedback",
      description: "feedback",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/feedback",
      },
    },
    "rowFilter.feedback.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.feedback.location": {
      name: "location",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.feedback.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.feedback.feedback": {
      name: "feedback",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.feedback.attachmentPath": {
      name: "attachmentPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.oauthCode": {
      name: "oauthCode",
      description: "oauthCode",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/oauthCode",
      },
    },
    "rowFilter.oauthCode.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthCode.code": {
      name: "code",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthCode.clientId": {
      name: "clientId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthCode.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthCode.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthCode.redirectUri": {
      name: "redirectUri",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthCode.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.oauthCode.expiresAt": {
      name: "expiresAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "body.tools": {
      name: "tools",
      description: "tools",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/tools",
      },
    },
    "rowFilter.tools.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.defaultMethodType": {
      name: "defaultMethodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.tools.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.itemTrackingType": {
      name: "itemTrackingType",
      required: false,
      format: 'public."itemTrackingType"',
      in: "query",
      type: "string",
    },
    "rowFilter.tools.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.replenishmentSystem": {
      name: "replenishmentSystem",
      required: false,
      format: 'public."itemReplenishmentSystem"',
      in: "query",
      type: "string",
    },
    "rowFilter.tools.thumbnailPath": {
      name: "thumbnailPath",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.notes": {
      name: "notes",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.supplierIds": {
      name: "supplierIds",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.tools.unitOfMeasure": {
      name: "unitOfMeasure",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.quoteMaterialWithMakeMethodId": {
      name: "quoteMaterialWithMakeMethodId",
      description: "quoteMaterialWithMakeMethodId",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteMaterialWithMakeMethodId",
      },
    },
    "rowFilter.quoteMaterialWithMakeMethodId.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.quoteLineId": {
      name: "quoteLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.itemType": {
      name: "itemType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.unitCost": {
      name: "unitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.quoteMakeMethodId": {
      name: "quoteMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.quoteOperationId": {
      name: "quoteOperationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteMaterialWithMakeMethodId.quoteMaterialMakeMethodId": {
      name: "quoteMaterialMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.suppliers": {
      name: "suppliers",
      description: "suppliers",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/suppliers",
      },
    },
    "rowFilter.suppliers.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.supplierTypeId": {
      name: "supplierTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.supplierStatusId": {
      name: "supplierStatusId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.taxId": {
      name: "taxId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.accountManagerId": {
      name: "accountManagerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.logo": {
      name: "logo",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.phone": {
      name: "phone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.website": {
      name: "website",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.type": {
      name: "type",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.status": {
      name: "status",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.orderCount": {
      name: "orderCount",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "rowFilter.suppliers.partCount": {
      name: "partCount",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "body.purchaseOrders": {
      name: "purchaseOrders",
      description: "purchaseOrders",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseOrders",
      },
    },
    "rowFilter.purchaseOrders.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.type": {
      name: "type",
      required: false,
      format: 'public."purchaseOrderType"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.status": {
      name: "status",
      required: false,
      format: 'public."purchaseOrderStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.orderDate": {
      name: "orderDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.notes": {
      name: "notes",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.supplierLocationId": {
      name: "supplierLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.supplierContactId": {
      name: "supplierContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.supplierReference": {
      name: "supplierReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.closedAt": {
      name: "closedAt",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.closedBy": {
      name: "closedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.exchangeRateUpdatedAt": {
      name: "exchangeRateUpdatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.shippingMethodName": {
      name: "shippingMethodName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.shippingTermName": {
      name: "shippingTermName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.paymentTermName": {
      name: "paymentTermName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.receiptRequestedDate": {
      name: "receiptRequestedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.receiptPromisedDate": {
      name: "receiptPromisedDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.dropShipment": {
      name: "dropShipment",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseOrders.favorite": {
      name: "favorite",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "body.purchasePayment": {
      name: "purchasePayment",
      description: "purchasePayment",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchasePayment",
      },
    },
    "rowFilter.purchasePayment.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.paymentId": {
      name: "paymentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.paymentDate": {
      name: "paymentDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.totalAmount": {
      name: "totalAmount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchasePayment.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "body.customers": {
      name: "customers",
      description: "customers",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/customers",
      },
    },
    "rowFilter.customers.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.customerTypeId": {
      name: "customerTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.customerStatusId": {
      name: "customerStatusId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.taxId": {
      name: "taxId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.accountManagerId": {
      name: "accountManagerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.logo": {
      name: "logo",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.phone": {
      name: "phone",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.fax": {
      name: "fax",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.website": {
      name: "website",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.taxPercent": {
      name: "taxPercent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.type": {
      name: "type",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.status": {
      name: "status",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.customers.orderCount": {
      name: "orderCount",
      required: false,
      format: "bigint",
      in: "query",
      type: "string",
    },
    "body.salesOrderFavorite": {
      name: "salesOrderFavorite",
      description: "salesOrderFavorite",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesOrderFavorite",
      },
    },
    "rowFilter.salesOrderFavorite.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesOrderFavorite.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.fixture": {
      name: "fixture",
      description: "fixture",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/fixture",
      },
    },
    "rowFilter.fixture.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.approved": {
      name: "approved",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.approvedBy": {
      name: "approvedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.externalId": {
      name: "externalId",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.fixture.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.document": {
      name: "document",
      description: "document",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/document",
      },
    },
    "rowFilter.document.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.path": {
      name: "path",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.size": {
      name: "size",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.document.extension": {
      name: "extension",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.type": {
      name: "type",
      required: false,
      format: 'public."documentType"',
      in: "query",
      type: "string",
    },
    "rowFilter.document.readGroups": {
      name: "readGroups",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.document.writeGroups": {
      name: "writeGroups",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.document.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.document.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.document.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.document.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.document.sourceDocument": {
      name: "sourceDocument",
      required: false,
      format: 'public."documentSourceType"',
      in: "query",
      type: "string",
    },
    "rowFilter.document.sourceDocumentId": {
      name: "sourceDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.receipts": {
      name: "receipts",
      description: "receipts",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/receipts",
      },
    },
    "rowFilter.receipts.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.receiptId": {
      name: "receiptId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.sourceDocument": {
      name: "sourceDocument",
      required: false,
      format: 'public."receiptSourceDocument"',
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.sourceDocumentId": {
      name: "sourceDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.sourceDocumentReadableId": {
      name: "sourceDocumentReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.externalDocumentId": {
      name: "externalDocumentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.status": {
      name: "status",
      required: false,
      format: 'public."receiptStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.postingDate": {
      name: "postingDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.invoiced": {
      name: "invoiced",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.receipts.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.attributeDataType": {
      name: "attributeDataType",
      description: "attributeDataType",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/attributeDataType",
      },
    },
    "rowFilter.attributeDataType.id": {
      name: "id",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.attributeDataType.label": {
      name: "label",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.attributeDataType.isBoolean": {
      name: "isBoolean",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.attributeDataType.isDate": {
      name: "isDate",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.attributeDataType.isList": {
      name: "isList",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.attributeDataType.isNumeric": {
      name: "isNumeric",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.attributeDataType.isText": {
      name: "isText",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.attributeDataType.isUser": {
      name: "isUser",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "body.quoteLine": {
      name: "quoteLine",
      description: "quoteLine",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/quoteLine",
      },
    },
    "rowFilter.quoteLine.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.quoteRevisionId": {
      name: "quoteRevisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.status": {
      name: "status",
      required: false,
      format: 'public."quoteLineStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.estimatorId": {
      name: "estimatorId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.itemType": {
      name: "itemType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.customerPartId": {
      name: "customerPartId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.customerPartRevision": {
      name: "customerPartRevision",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.notes": {
      name: "notes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.modelUploadId": {
      name: "modelUploadId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.quantity": {
      name: "quantity",
      required: false,
      format: "numeric[]",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.additionalCharges": {
      name: "additionalCharges",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.noQuoteReason": {
      name: "noQuoteReason",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.taxPercent": {
      name: "taxPercent",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.quoteLine.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.jobMaterialWithMakeMethodId": {
      name: "jobMaterialWithMakeMethodId",
      description: "jobMaterialWithMakeMethodId",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/jobMaterialWithMakeMethodId",
      },
    },
    "rowFilter.jobMaterialWithMakeMethodId.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.jobId": {
      name: "jobId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.itemType": {
      name: "itemType",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.methodType": {
      name: "methodType",
      required: false,
      format: 'public."methodType"',
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.order": {
      name: "order",
      required: false,
      format: "double precision",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.scrapQuantity": {
      name: "scrapQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.unitOfMeasureCode": {
      name: "unitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.unitCost": {
      name: "unitCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.jobMakeMethodId": {
      name: "jobMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.jobOperationId": {
      name: "jobOperationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.estimatedQuantity": {
      name: "estimatedQuantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.jobMaterialWithMakeMethodId.jobMaterialMakeMethodId": {
      name: "jobMaterialMakeMethodId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.currency": {
      name: "currency",
      description: "currency",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/currency",
      },
    },
    "rowFilter.currency.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.code": {
      name: "code",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.decimalPlaces": {
      name: "decimalPlaces",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.currency.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.productionEvent": {
      name: "productionEvent",
      description: "productionEvent",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/productionEvent",
      },
    },
    "rowFilter.productionEvent.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.jobOperationId": {
      name: "jobOperationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.type": {
      name: "type",
      required: false,
      format: 'public."productionEventType"',
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.startTime": {
      name: "startTime",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.endTime": {
      name: "endTime",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.duration": {
      name: "duration",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.employeeId": {
      name: "employeeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.workCenterId": {
      name: "workCenterId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.productionEvent.notes": {
      name: "notes",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.accounts": {
      name: "accounts",
      description: "accounts",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/accounts",
      },
    },
    "rowFilter.accounts.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.number": {
      name: "number",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.type": {
      name: "type",
      required: false,
      format: 'public."glAccountType"',
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.class": {
      name: "class",
      required: false,
      format: 'public."glAccountClass"',
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.accountCategoryId": {
      name: "accountCategoryId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.accountSubcategoryId": {
      name: "accountSubcategoryId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.incomeBalance": {
      name: "incomeBalance",
      required: false,
      format: 'public."glIncomeBalance"',
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.consolidatedRate": {
      name: "consolidatedRate",
      required: false,
      format: 'public."glConsolidatedRate"',
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.directPosting": {
      name: "directPosting",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.accountCategory": {
      name: "accountCategory",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.accounts.accountSubCategory": {
      name: "accountSubCategory",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.supplierProcesses": {
      name: "supplierProcesses",
      description: "supplierProcesses",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierProcesses",
      },
    },
    "rowFilter.supplierProcesses.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.minimumCost": {
      name: "minimumCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.leadTime": {
      name: "leadTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcesses.processName": {
      name: "processName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.postingGroupInventory": {
      name: "postingGroupInventory",
      description: "postingGroupInventory",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/postingGroupInventory",
      },
    },
    "rowFilter.postingGroupInventory.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.itemPostingGroupId": {
      name: "itemPostingGroupId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.costOfGoodsSoldAccount": {
      name: "costOfGoodsSoldAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.inventoryAccount": {
      name: "inventoryAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.inventoryInterimAccrualAccount": {
      name: "inventoryInterimAccrualAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.inventoryReceivedNotInvoicedAccount": {
      name: "inventoryReceivedNotInvoicedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.inventoryInvoicedNotReceivedAccount": {
      name: "inventoryInvoicedNotReceivedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.inventoryShippedNotInvoicedAccount": {
      name: "inventoryShippedNotInvoicedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.workInProgressAccount": {
      name: "workInProgressAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.directCostAppliedAccount": {
      name: "directCostAppliedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.overheadAccount": {
      name: "overheadAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.overheadCostAppliedAccount": {
      name: "overheadCostAppliedAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.purchaseVarianceAccount": {
      name: "purchaseVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.inventoryAdjustmentVarianceAccount": {
      name: "inventoryAdjustmentVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.materialVarianceAccount": {
      name: "materialVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.capacityVarianceAccount": {
      name: "capacityVarianceAccount",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.postingGroupInventory.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.userToCompany": {
      name: "userToCompany",
      description: "userToCompany",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/userToCompany",
      },
    },
    "rowFilter.userToCompany.userId": {
      name: "userId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userToCompany.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userToCompany.role": {
      name: "role",
      required: false,
      format: "public.role",
      in: "query",
      type: "string",
    },
    "body.userAttribute": {
      name: "userAttribute",
      description: "userAttribute",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/userAttribute",
      },
    },
    "rowFilter.userAttribute.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.sortOrder": {
      name: "sortOrder",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.userAttributeCategoryId": {
      name: "userAttributeCategoryId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.attributeDataTypeId": {
      name: "attributeDataTypeId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.listOptions": {
      name: "listOptions",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.canSelfManage": {
      name: "canSelfManage",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.userAttribute.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.supplierProcess": {
      name: "supplierProcess",
      description: "supplierProcess",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/supplierProcess",
      },
    },
    "rowFilter.supplierProcess.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.supplierId": {
      name: "supplierId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.processId": {
      name: "processId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.minimumCost": {
      name: "minimumCost",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.leadTime": {
      name: "leadTime",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.supplierProcess.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.employee": {
      name: "employee",
      description: "employee",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/employee",
      },
    },
    "rowFilter.employee.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employee.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.employee.employeeTypeId": {
      name: "employeeTypeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "body.itemPostingGroup": {
      name: "itemPostingGroup",
      description: "itemPostingGroup",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/itemPostingGroup",
      },
    },
    "rowFilter.itemPostingGroup.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.active": {
      name: "active",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.itemPostingGroup.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.department": {
      name: "department",
      description: "department",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/department",
      },
    },
    "rowFilter.department.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.department.name": {
      name: "name",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.department.parentDepartmentId": {
      name: "parentDepartmentId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.department.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.department.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.department.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.department.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.department.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp without time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.department.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.department.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.purchaseInvoiceLine": {
      name: "purchaseInvoiceLine",
      description: "purchaseInvoiceLine",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/purchaseInvoiceLine",
      },
    },
    "rowFilter.purchaseInvoiceLine.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.invoiceId": {
      name: "invoiceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.invoiceLineType": {
      name: "invoiceLineType",
      required: false,
      format: 'public."payableLineType"',
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.purchaseOrderId": {
      name: "purchaseOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.purchaseOrderLineId": {
      name: "purchaseOrderLineId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.itemId": {
      name: "itemId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.itemReadableId": {
      name: "itemReadableId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.serviceId": {
      name: "serviceId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.shelfId": {
      name: "shelfId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.accountNumber": {
      name: "accountNumber",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.assetId": {
      name: "assetId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.description": {
      name: "description",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.quantity": {
      name: "quantity",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.unitPrice": {
      name: "unitPrice",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.totalAmount": {
      name: "totalAmount",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.currencyCode": {
      name: "currencyCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.exchangeRate": {
      name: "exchangeRate",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.inventoryUnitOfMeasureCode": {
      name: "inventoryUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.purchaseUnitOfMeasureCode": {
      name: "purchaseUnitOfMeasureCode",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.conversionFactor": {
      name: "conversionFactor",
      required: false,
      format: "numeric",
      in: "query",
      type: "string",
    },
    "rowFilter.purchaseInvoiceLine.tags": {
      name: "tags",
      required: false,
      format: "text[]",
      in: "query",
      type: "string",
    },
    "body.salesRfqs": {
      name: "salesRfqs",
      description: "salesRfqs",
      required: false,
      in: "body",
      schema: {
        $ref: "#/definitions/salesRfqs",
      },
    },
    "rowFilter.salesRfqs.id": {
      name: "id",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.rfqId": {
      name: "rfqId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.revisionId": {
      name: "revisionId",
      required: false,
      format: "integer",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.status": {
      name: "status",
      required: false,
      format: 'public."salesRfqStatus"',
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.employeeId": {
      name: "employeeId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.customerId": {
      name: "customerId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.customerContactId": {
      name: "customerContactId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.customerReference": {
      name: "customerReference",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.rfqDate": {
      name: "rfqDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.expirationDate": {
      name: "expirationDate",
      required: false,
      format: "date",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.locationId": {
      name: "locationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.assignee": {
      name: "assignee",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.companyId": {
      name: "companyId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.customFields": {
      name: "customFields",
      required: false,
      format: "jsonb",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.createdAt": {
      name: "createdAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.createdBy": {
      name: "createdBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.updatedAt": {
      name: "updatedAt",
      required: false,
      format: "timestamp with time zone",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.updatedBy": {
      name: "updatedBy",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.customerLocationId": {
      name: "customerLocationId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.externalNotes": {
      name: "externalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.internalNotes": {
      name: "internalNotes",
      required: false,
      format: "json",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.salesPersonId": {
      name: "salesPersonId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.locationName": {
      name: "locationName",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.quoteId": {
      name: "quoteId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.salesOrderId": {
      name: "salesOrderId",
      required: false,
      format: "text",
      in: "query",
      type: "string",
    },
    "rowFilter.salesRfqs.favorite": {
      name: "favorite",
      required: false,
      format: "boolean",
      in: "query",
      type: "string",
    },
  },
  externalDocs: {
    description: "PostgREST Documentation",
    url: "https://postgrest.org/en/v12.0/api.html",
  },
};
